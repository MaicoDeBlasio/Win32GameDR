#if 0
;
; Note: shader requires additional functionality:
;       Resource descriptor heap indexing
;
;
; Input signature:
;
; Name                 Index   Mask Register SysValue  Format   Used
; -------------------- ----- ------ -------- -------- ------- ------
; SV_Position              0   xyzw        0      POS   float       
; POSITION                 0   xyzw        1     NONE   float   xy w
; POSITION                 1   xyz         2     NONE   float   xyz 
; NORMAL                   0   xyz         3     NONE   float   xyz 
; TEXCOORD                 0   xy          4     NONE   float   xy  
; TANGENT                  0   xyz         5     NONE   float   xyz 
; SV_InstanceID            0   x           6     NONE    uint   x   
; SV_PrimitiveID           0    y          6   PRIMID    uint       
;
;
; Output signature:
;
; Name                 Index   Mask Register SysValue  Format   Used
; -------------------- ----- ------ -------- -------- ------- ------
; SV_Target                0   xyzw        0   TARGET   float   xyzw
;
; shader debug name: Shaders\PDB\PixelShaderMesh.pdb
; shader hash: d0fb9e208cc398e65948acbe4aad9f11
;
; Pipeline Runtime Information: 
;
; Pixel Shader
; DepthOutput=0
; SampleFrequency=0
;
;
; Input signature:
;
; Name                 Index             InterpMode DynIdx
; -------------------- ----- ---------------------- ------
; SV_Position              0          noperspective       
; POSITION                 0                 linear       
; POSITION                 1                 linear       
; NORMAL                   0                 linear       
; TEXCOORD                 0                 linear       
; TANGENT                  0                 linear       
; SV_InstanceID            0        nointerpolation       
; SV_PrimitiveID           0        nointerpolation       
;
; Output signature:
;
; Name                 Index             InterpMode DynIdx
; -------------------- ----- ---------------------- ------
; SV_Target                0                              
;
; Buffer Definitions:
;
; cbuffer frameCB
; {
;
;   struct hostlayout.frameCB
;   {
;
;       struct hostlayout.struct.FrameConstants
;       {
;
;           column_major float4x4 viewProj;           ; Offset:    0
;           column_major float4x4 invProj;            ; Offset:   64
;           column_major float4x4 invViewProj;        ; Offset:  128
;           column_major float4x4 viewProjTex;        ; Offset:  192
;           column_major float4x4 prevViewProjTex;    ; Offset:  256
;           float4 cameraPos;                         ; Offset:  320
;           float4 lightDiffuse;                      ; Offset:  336
;           float4 lightAmbient;                      ; Offset:  352
;           float3 lightDir;                          ; Offset:  368
;           uint frameCount;                          ; Offset:  380
;           uint tlasBufferSrvID;                     ; Offset:  384
;           uint instBufferSrvID;                     ; Offset:  388
;           uint prevFrameBufferSrvID;                ; Offset:  392
;       
;       } frameCB;                                    ; Offset:    0
;
;   
;   } frameCB;                                        ; Offset:    0 Size:   396
;
; }
;
;
; Resource Bindings:
;
; Name                                 Type  Format         Dim      ID      HLSL Bind  Count
; ------------------------------ ---------- ------- ----------- ------- -------------- ------
; frameCB                           cbuffer      NA          NA     CB0            cb0     1
; LinearClamp                       sampler      NA          NA      S0             s1     1
; AnisoWrap                         sampler      NA          NA      S1             s3     1
;
;
; ViewId state:
;
; Number of inputs: 26, outputs: 4
; Outputs dependent on ViewId: {  }
; Inputs contributing to computation of Outputs:
;   output 0 depends on inputs: { 4, 5, 7, 8, 9, 10, 12, 13, 14, 16, 17, 20, 21, 22, 24 }
;   output 1 depends on inputs: { 4, 5, 7, 8, 9, 10, 12, 13, 14, 16, 17, 20, 21, 22, 24 }
;   output 2 depends on inputs: { 4, 5, 7, 8, 9, 10, 12, 13, 14, 16, 17, 20, 21, 22, 24 }
;   output 3 depends on inputs: { 16, 17, 24 }
;
target datalayout = "e-m:e-p:32:32-i1:32-i8:32-i16:32-i32:32-i64:64-f16:32-f32:32-f64:64-n8:16:32:64"
target triple = "dxil-ms-dx"

%dx.types.Handle = type { i8* }
%dx.types.ResBind = type { i32, i32, i32, i8 }
%dx.types.ResourceProperties = type { i32, i32 }
%dx.types.CBufRet.i32 = type { i32, i32, i32, i32 }
%dx.types.ResRet.i32 = type { i32, i32, i32, i32, i32 }
%dx.types.ResRet.f32 = type { float, float, float, float, i32 }
%dx.types.CBufRet.f32 = type { float, float, float, float }
%hostlayout.frameCB = type { %hostlayout.struct.FrameConstants }
%hostlayout.struct.FrameConstants = type { [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], <4 x float>, <4 x float>, <4 x float>, <3 x float>, i32, i32, i32, i32 }
%struct.SamplerState = type { i32 }

define void @main() {
  %1 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 3, i32 3, i32 0, i8 3 }, i32 3, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %2 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 1, i32 1, i32 0, i8 3 }, i32 1, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %3 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 0, i32 0, i32 0, i8 2 }, i32 0, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %4 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %3, %dx.types.ResourceProperties { i32 13, i32 396 })  ; AnnotateHandle(res,props)  resource: CBuffer
  %5 = call i32 @dx.op.loadInput.i32(i32 4, i32 6, i32 0, i8 0, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %6 = call float @dx.op.loadInput.f32(i32 4, i32 5, i32 0, i8 0, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %7 = call float @dx.op.loadInput.f32(i32 4, i32 5, i32 0, i8 1, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %8 = call float @dx.op.loadInput.f32(i32 4, i32 5, i32 0, i8 2, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %9 = call float @dx.op.loadInput.f32(i32 4, i32 4, i32 0, i8 0, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %10 = call float @dx.op.loadInput.f32(i32 4, i32 4, i32 0, i8 1, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %11 = call float @dx.op.loadInput.f32(i32 4, i32 3, i32 0, i8 0, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %12 = call float @dx.op.loadInput.f32(i32 4, i32 3, i32 0, i8 1, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %13 = call float @dx.op.loadInput.f32(i32 4, i32 3, i32 0, i8 2, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %14 = call float @dx.op.loadInput.f32(i32 4, i32 2, i32 0, i8 0, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %15 = call float @dx.op.loadInput.f32(i32 4, i32 2, i32 0, i8 1, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %16 = call float @dx.op.loadInput.f32(i32 4, i32 2, i32 0, i8 2, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %17 = call float @dx.op.loadInput.f32(i32 4, i32 1, i32 0, i8 0, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %18 = call float @dx.op.loadInput.f32(i32 4, i32 1, i32 0, i8 1, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %19 = call float @dx.op.loadInput.f32(i32 4, i32 1, i32 0, i8 3, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %20 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %4, i32 24)  ; CBufferLoadLegacy(handle,regIndex)
  %21 = extractvalue %dx.types.CBufRet.i32 %20, 1
  %22 = call %dx.types.Handle @dx.op.createHandleFromHeap(i32 218, i32 %21, i1 false, i1 false)  ; CreateHandleFromHeap(index,samplerHeap,nonUniformIndex)
  %23 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %22, %dx.types.ResourceProperties { i32 524, i32 80 })  ; AnnotateHandle(res,props)  resource: StructuredBuffer<stride=80>
  %24 = call %dx.types.ResRet.i32 @dx.op.rawBufferLoad.i32(i32 139, %dx.types.Handle %23, i32 %5, i32 60, i8 1, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %25 = extractvalue %dx.types.ResRet.i32 %24, 0
  %26 = call %dx.types.Handle @dx.op.createHandleFromHeap(i32 218, i32 %25, i1 false, i1 false)  ; CreateHandleFromHeap(index,samplerHeap,nonUniformIndex)
  %27 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %26, %dx.types.ResourceProperties { i32 2, i32 1033 })  ; AnnotateHandle(res,props)  resource: Texture2D<4xF32>
  %28 = call %dx.types.ResRet.i32 @dx.op.rawBufferLoad.i32(i32 139, %dx.types.Handle %23, i32 %5, i32 64, i8 1, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %29 = extractvalue %dx.types.ResRet.i32 %28, 0
  %30 = call %dx.types.Handle @dx.op.createHandleFromHeap(i32 218, i32 %29, i1 false, i1 false)  ; CreateHandleFromHeap(index,samplerHeap,nonUniformIndex)
  %31 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %30, %dx.types.ResourceProperties { i32 2, i32 521 })  ; AnnotateHandle(res,props)  resource: Texture2D<2xF32>
  %32 = call %dx.types.ResRet.i32 @dx.op.rawBufferLoad.i32(i32 139, %dx.types.Handle %23, i32 %5, i32 72, i8 1, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %33 = extractvalue %dx.types.ResRet.i32 %32, 0
  %34 = call %dx.types.Handle @dx.op.createHandleFromHeap(i32 218, i32 %33, i1 false, i1 false)  ; CreateHandleFromHeap(index,samplerHeap,nonUniformIndex)
  %35 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %34, %dx.types.ResourceProperties { i32 2, i32 1033 })  ; AnnotateHandle(res,props)  resource: Texture2D<4xF32>
  %36 = call %dx.types.Handle @dx.op.createHandleFromHeap(i32 218, i32 12, i1 false, i1 false)  ; CreateHandleFromHeap(index,samplerHeap,nonUniformIndex)
  %37 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %36, %dx.types.ResourceProperties { i32 2, i32 265 })  ; AnnotateHandle(res,props)  resource: Texture2D<F32>
  %38 = call %dx.types.Handle @dx.op.createHandleFromHeap(i32 218, i32 18, i1 false, i1 false)  ; CreateHandleFromHeap(index,samplerHeap,nonUniformIndex)
  %39 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %38, %dx.types.ResourceProperties { i32 2, i32 265 })  ; AnnotateHandle(res,props)  resource: Texture2D<F32>
  %40 = call float @dx.op.dot3.f32(i32 55, float %11, float %12, float %13, float %11, float %12, float %13)  ; Dot3(ax,ay,az,bx,by,bz)
  %41 = call float @dx.op.unary.f32(i32 25, float %40)  ; Rsqrt(value)
  %42 = fmul fast float %41, %11
  %43 = fmul fast float %41, %12
  %44 = fmul fast float %41, %13
  %45 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %23, i32 %5, i32 76, i8 1, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %46 = extractvalue %dx.types.ResRet.f32 %45, 0
  %47 = fmul fast float %46, %9
  %48 = fmul fast float %46, %10
  %49 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %4, i32 20)  ; CBufferLoadLegacy(handle,regIndex)
  %50 = extractvalue %dx.types.CBufRet.f32 %49, 0
  %51 = extractvalue %dx.types.CBufRet.f32 %49, 1
  %52 = extractvalue %dx.types.CBufRet.f32 %49, 2
  %53 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %4, i32 22)  ; CBufferLoadLegacy(handle,regIndex)
  %54 = extractvalue %dx.types.CBufRet.f32 %53, 0
  %55 = extractvalue %dx.types.CBufRet.f32 %53, 1
  %56 = extractvalue %dx.types.CBufRet.f32 %53, 2
  %57 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %4, i32 21)  ; CBufferLoadLegacy(handle,regIndex)
  %58 = extractvalue %dx.types.CBufRet.f32 %57, 0
  %59 = extractvalue %dx.types.CBufRet.f32 %57, 1
  %60 = extractvalue %dx.types.CBufRet.f32 %57, 2
  %61 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1, %dx.types.ResourceProperties { i32 14, i32 0 })  ; AnnotateHandle(res,props)  resource: SamplerState
  %62 = call %dx.types.ResRet.f32 @dx.op.sample.f32(i32 60, %dx.types.Handle %27, %dx.types.Handle %61, float %47, float %48, float undef, float undef, i32 0, i32 0, i32 undef, float undef)  ; Sample(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,clamp)
  %63 = extractvalue %dx.types.ResRet.f32 %62, 0
  %64 = extractvalue %dx.types.ResRet.f32 %62, 1
  %65 = extractvalue %dx.types.ResRet.f32 %62, 2
  %66 = extractvalue %dx.types.ResRet.f32 %62, 3
  %67 = fadd fast float %66, 0xBFB99999A0000000
  %68 = fcmp fast olt float %67, 0.000000e+00
  call void @dx.op.discard(i32 82, i1 %68)  ; Discard(condition)
  %69 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1, %dx.types.ResourceProperties { i32 14, i32 0 })  ; AnnotateHandle(res,props)  resource: SamplerState
  %70 = call %dx.types.ResRet.f32 @dx.op.sample.f32(i32 60, %dx.types.Handle %31, %dx.types.Handle %69, float %47, float %48, float undef, float undef, i32 0, i32 0, i32 undef, float undef)  ; Sample(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,clamp)
  %71 = extractvalue %dx.types.ResRet.f32 %70, 0
  %72 = extractvalue %dx.types.ResRet.f32 %70, 1
  %73 = call %dx.types.ResRet.f32 @dx.op.sample.f32(i32 60, %dx.types.Handle %35, %dx.types.Handle %69, float %47, float %48, float undef, float undef, i32 0, i32 0, i32 undef, float undef)  ; Sample(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,clamp)
  %74 = extractvalue %dx.types.ResRet.f32 %73, 0
  %75 = extractvalue %dx.types.ResRet.f32 %73, 1
  %76 = extractvalue %dx.types.ResRet.f32 %73, 2
  %77 = extractvalue %dx.types.ResRet.f32 %73, 3
  %78 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %23, i32 %5, i32 28, i8 15, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %79 = extractvalue %dx.types.ResRet.f32 %78, 0
  %80 = extractvalue %dx.types.ResRet.f32 %78, 1
  %81 = extractvalue %dx.types.ResRet.f32 %78, 2
  %82 = fadd fast float %63, 0x3FAC28F5C0000000
  %83 = fadd fast float %64, 0x3FAC28F5C0000000
  %84 = fadd fast float %65, 0x3FAC28F5C0000000
  %85 = fmul fast float %82, 0x3FEE54EDE0000000
  %86 = fmul fast float %83, 0x3FEE54EDE0000000
  %87 = fmul fast float %84, 0x3FEE54EDE0000000
  %88 = call float @dx.op.unary.f32(i32 23, float %85)  ; Log(value)
  %89 = call float @dx.op.unary.f32(i32 23, float %86)  ; Log(value)
  %90 = call float @dx.op.unary.f32(i32 23, float %87)  ; Log(value)
  %91 = fmul fast float %88, 0x4003333340000000
  %92 = fmul fast float %89, 0x4003333340000000
  %93 = fmul fast float %90, 0x4003333340000000
  %94 = call float @dx.op.unary.f32(i32 21, float %91)  ; Exp(value)
  %95 = call float @dx.op.unary.f32(i32 21, float %92)  ; Exp(value)
  %96 = call float @dx.op.unary.f32(i32 21, float %93)  ; Exp(value)
  %97 = fmul fast float %63, 0x3FB3D07220000000
  %98 = fmul fast float %64, 0x3FB3D07220000000
  %99 = fmul fast float %65, 0x3FB3D07220000000
  %100 = fcmp fast olt float %63, 0x3FA4B5DCC0000000
  %101 = fcmp fast olt float %64, 0x3FA4B5DCC0000000
  %102 = fcmp fast olt float %65, 0x3FA4B5DCC0000000
  %103 = select i1 %100, float %97, float %94
  %104 = select i1 %101, float %98, float %95
  %105 = select i1 %102, float %99, float %96
  %106 = fsub fast float %50, %14
  %107 = fsub fast float %51, %15
  %108 = fsub fast float %52, %16
  %109 = call float @dx.op.dot3.f32(i32 55, float %106, float %107, float %108, float %106, float %107, float %108)  ; Dot3(ax,ay,az,bx,by,bz)
  %110 = call float @dx.op.unary.f32(i32 25, float %109)  ; Rsqrt(value)
  %111 = fmul fast float %110, %106
  %112 = fmul fast float %110, %107
  %113 = fmul fast float %110, %108
  %114 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %4, i32 23)  ; CBufferLoadLegacy(handle,regIndex)
  %115 = extractvalue %dx.types.CBufRet.f32 %114, 0
  %116 = extractvalue %dx.types.CBufRet.f32 %114, 1
  %117 = extractvalue %dx.types.CBufRet.f32 %114, 2
  %118 = fsub fast float -0.000000e+00, %115
  %119 = fsub fast float -0.000000e+00, %116
  %120 = fsub fast float -0.000000e+00, %117
  %121 = fmul fast float %71, 2.000000e+00
  %122 = fmul fast float %72, 2.000000e+00
  %123 = fadd fast float %121, -1.000000e+00
  %124 = fadd fast float %122, -1.000000e+00
  %125 = call float @dx.op.dot2.f32(i32 54, float %123, float %124, float %123, float %124)  ; Dot2(ax,ay,bx,by)
  %126 = fsub fast float 1.000000e+00, %125
  %127 = call float @dx.op.unary.f32(i32 24, float %126)  ; Sqrt(value)
  %128 = call float @dx.op.dot3.f32(i32 55, float %6, float %7, float %8, float %42, float %43, float %44)  ; Dot3(ax,ay,az,bx,by,bz)
  %129 = fmul fast float %128, %42
  %130 = fmul fast float %128, %43
  %131 = fmul fast float %128, %44
  %132 = fsub fast float %6, %129
  %133 = fsub fast float %7, %130
  %134 = fsub fast float %8, %131
  %135 = fmul fast float %134, %43
  %136 = fmul fast float %133, %44
  %137 = fsub fast float %135, %136
  %138 = fmul fast float %132, %44
  %139 = fmul fast float %134, %42
  %140 = fsub fast float %138, %139
  %141 = fmul fast float %133, %42
  %142 = fmul fast float %132, %43
  %143 = fsub fast float %141, %142
  %144 = fmul fast float %132, %123
  %145 = call float @dx.op.tertiary.f32(i32 46, float %124, float %137, float %144)  ; FMad(a,b,c)
  %146 = call float @dx.op.tertiary.f32(i32 46, float %127, float %42, float %145)  ; FMad(a,b,c)
  %147 = fmul fast float %133, %123
  %148 = call float @dx.op.tertiary.f32(i32 46, float %124, float %140, float %147)  ; FMad(a,b,c)
  %149 = call float @dx.op.tertiary.f32(i32 46, float %127, float %43, float %148)  ; FMad(a,b,c)
  %150 = fmul fast float %134, %123
  %151 = call float @dx.op.tertiary.f32(i32 46, float %124, float %143, float %150)  ; FMad(a,b,c)
  %152 = call float @dx.op.tertiary.f32(i32 46, float %127, float %44, float %151)  ; FMad(a,b,c)
  %153 = call float @dx.op.dot3.f32(i32 55, float %146, float %149, float %152, float %146, float %149, float %152)  ; Dot3(ax,ay,az,bx,by,bz)
  %154 = call float @dx.op.unary.f32(i32 25, float %153)  ; Rsqrt(value)
  %155 = fmul fast float %154, %146
  %156 = fmul fast float %154, %149
  %157 = fmul fast float %154, %152
  %158 = fdiv fast float %17, %19
  %159 = fdiv fast float %18, %19
  %160 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %2, %dx.types.ResourceProperties { i32 14, i32 0 })  ; AnnotateHandle(res,props)  resource: SamplerState
  %161 = call %dx.types.ResRet.f32 @dx.op.sample.f32(i32 60, %dx.types.Handle %37, %dx.types.Handle %160, float %158, float %159, float undef, float undef, i32 0, i32 0, i32 undef, float undef)  ; Sample(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,clamp)
  %162 = extractvalue %dx.types.ResRet.f32 %161, 0
  %163 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %2, %dx.types.ResourceProperties { i32 14, i32 0 })  ; AnnotateHandle(res,props)  resource: SamplerState
  %164 = call %dx.types.ResRet.f32 @dx.op.sample.f32(i32 60, %dx.types.Handle %39, %dx.types.Handle %163, float %158, float %159, float undef, float undef, i32 0, i32 0, i32 undef, float undef)  ; Sample(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,clamp)
  %165 = extractvalue %dx.types.ResRet.f32 %164, 0
  %166 = call float @dx.op.dot3.f32(i32 55, float %42, float %43, float %44, float %155, float %156, float %157)  ; Dot3(ax,ay,az,bx,by,bz)
  %167 = call float @dx.op.unary.f32(i32 6, float %166)  ; FAbs(value)
  %168 = call float @dx.op.binary.f32(i32 36, float %167, float 1.000000e+00)  ; FMin(a,b)
  %169 = fmul fast float %168, %168
  %170 = fsub fast float 1.000000e+00, %169
  %171 = fdiv fast float %170, %169
  %172 = fmul fast float %171, 1.250000e-01
  %173 = call float @dx.op.unary.f32(i32 7, float %172)  ; Saturate(value)
  %174 = call float @dx.op.dot3.f32(i32 55, float %42, float %43, float %44, float %118, float %119, float %120)  ; Dot3(ax,ay,az,bx,by,bz)
  %175 = call float @dx.op.unary.f32(i32 6, float %174)  ; FAbs(value)
  %176 = call float @dx.op.binary.f32(i32 35, float %175, float 0x3EB0C6F7A0000000)  ; FMax(a,b)
  %177 = fmul fast float %176, %176
  %178 = fsub fast float 1.000000e+00, %177
  %179 = fdiv fast float %178, %177
  %180 = fmul fast float %179, %173
  %181 = fadd fast float %180, 1.000000e+00
  %182 = call float @dx.op.unary.f32(i32 24, float %181)  ; Sqrt(value)
  %183 = fadd fast float %182, 1.000000e+00
  %184 = fdiv fast float 2.000000e+00, %183
  %185 = call float @dx.op.dot3.f32(i32 55, float %155, float %156, float %157, float %111, float %112, float %113)  ; Dot3(ax,ay,az,bx,by,bz)
  %186 = call float @dx.op.unary.f32(i32 7, float %185)  ; Saturate(value)
  %187 = fmul fast float %75, %75
  %188 = fmul fast float %103, %76
  %189 = fmul fast float %104, %76
  %190 = fmul fast float %105, %76
  %191 = fsub fast float %103, %188
  %192 = fsub fast float %104, %189
  %193 = fsub fast float %105, %190
  %194 = fmul fast float %191, %74
  %195 = fmul fast float %192, %74
  %196 = fmul fast float %193, %74
  %197 = fadd fast float %103, 0xBFA47AE140000000
  %198 = fadd fast float %104, 0xBFA47AE140000000
  %199 = fadd fast float %105, 0xBFA47AE140000000
  %200 = fmul fast float %197, %76
  %201 = fmul fast float %198, %76
  %202 = fmul fast float %199, %76
  %203 = fadd fast float %200, 0x3FA47AE140000000
  %204 = fadd fast float %201, 0x3FA47AE140000000
  %205 = fadd fast float %202, 0x3FA47AE140000000
  %206 = fmul fast float %203, %74
  %207 = fmul fast float %204, %74
  %208 = fmul fast float %205, %74
  %209 = fsub fast float %111, %115
  %210 = fsub fast float %112, %116
  %211 = fsub fast float %113, %117
  %212 = call float @dx.op.dot3.f32(i32 55, float %209, float %210, float %211, float %209, float %210, float %211)  ; Dot3(ax,ay,az,bx,by,bz)
  %213 = call float @dx.op.unary.f32(i32 25, float %212)  ; Rsqrt(value)
  %214 = fmul fast float %213, %209
  %215 = fmul fast float %213, %210
  %216 = fmul fast float %213, %211
  %217 = call float @dx.op.dot3.f32(i32 55, float %155, float %156, float %157, float %118, float %119, float %120)  ; Dot3(ax,ay,az,bx,by,bz)
  %218 = call float @dx.op.unary.f32(i32 7, float %217)  ; Saturate(value)
  %219 = call float @dx.op.dot3.f32(i32 55, float %118, float %119, float %120, float %214, float %215, float %216)  ; Dot3(ax,ay,az,bx,by,bz)
  %220 = call float @dx.op.unary.f32(i32 7, float %219)  ; Saturate(value)
  %221 = call float @dx.op.dot3.f32(i32 55, float %155, float %156, float %157, float %214, float %215, float %216)  ; Dot3(ax,ay,az,bx,by,bz)
  %222 = call float @dx.op.unary.f32(i32 7, float %221)  ; Saturate(value)
  %223 = fmul fast float %75, 2.000000e+00
  %224 = fmul fast float %220, %220
  %225 = fmul fast float %224, %223
  %226 = fadd fast float %225, -5.000000e-01
  %227 = fsub fast float 1.000000e+00, %218
  %228 = call float @dx.op.unary.f32(i32 23, float %227)  ; Log(value)
  %229 = fmul fast float %228, 5.000000e+00
  %230 = call float @dx.op.unary.f32(i32 21, float %229)  ; Exp(value)
  %231 = fmul fast float %230, %226
  %232 = fadd fast float %231, 1.000000e+00
  %233 = fsub fast float 1.000000e+00, %186
  %234 = call float @dx.op.unary.f32(i32 23, float %233)  ; Log(value)
  %235 = fmul fast float %234, 5.000000e+00
  %236 = call float @dx.op.unary.f32(i32 21, float %235)  ; Exp(value)
  %237 = fmul fast float %236, %226
  %238 = fadd fast float %237, 1.000000e+00
  %239 = fmul fast float %238, %232
  %240 = fmul fast float %187, %187
  %241 = fadd fast float %240, -1.000000e+00
  %242 = fmul fast float %222, %222
  %243 = fmul fast float %242, %241
  %244 = fadd fast float %243, 1.000000e+00
  %245 = fmul fast float %244, %244
  %246 = fmul fast float %245, 0x400921FB60000000
  %247 = call float @dx.op.binary.f32(i32 35, float 0x3EB0C6F7A0000000, float %246)  ; FMax(a,b)
  %248 = fdiv fast float %240, %247
  %249 = fsub fast float 1.000000e+00, %220
  %250 = call float @dx.op.unary.f32(i32 23, float %249)  ; Log(value)
  %251 = fmul fast float %250, 5.000000e+00
  %252 = call float @dx.op.unary.f32(i32 21, float %251)  ; Exp(value)
  %253 = fsub fast float 1.000000e+00, %224
  %254 = fmul fast float %240, 2.500000e-01
  %255 = fmul fast float %254, %253
  %256 = fadd fast float %255, %224
  %257 = fdiv fast float 1.000000e+00, %256
  %258 = fmul fast float %239, %196
  %259 = fsub fast float 1.000000e+00, %208
  %260 = fmul fast float %252, %259
  %261 = fadd fast float %260, %208
  %262 = fmul fast float %248, %77
  %263 = fmul fast float %262, %257
  %264 = fmul fast float %263, %261
  %265 = fadd fast float %264, %258
  %266 = fmul fast float %165, %60
  %267 = fmul fast float %266, %184
  %268 = fmul fast float %267, %218
  %269 = fmul fast float %268, %265
  %270 = fmul fast float %239, %195
  %271 = fsub fast float 1.000000e+00, %207
  %272 = fmul fast float %252, %271
  %273 = fadd fast float %272, %207
  %274 = fmul fast float %263, %273
  %275 = fadd fast float %274, %270
  %276 = fmul fast float %165, %59
  %277 = fmul fast float %276, %184
  %278 = fmul fast float %277, %218
  %279 = fmul fast float %278, %275
  %280 = fmul fast float %239, %194
  %281 = fsub fast float 1.000000e+00, %206
  %282 = fmul fast float %252, %281
  %283 = fadd fast float %282, %206
  %284 = fmul fast float %263, %283
  %285 = fadd fast float %284, %280
  %286 = fmul fast float %165, %58
  %287 = fmul fast float %286, %184
  %288 = fmul fast float %287, %218
  %289 = fmul fast float %288, %285
  %290 = fmul fast float %194, %54
  %291 = fmul fast float %290, %162
  %292 = fmul fast float %195, %55
  %293 = fmul fast float %292, %162
  %294 = fmul fast float %196, %56
  %295 = fmul fast float %294, %162
  %296 = fadd fast float %291, %79
  %297 = fadd fast float %296, %289
  %298 = fadd fast float %293, %80
  %299 = fadd fast float %298, %279
  %300 = fadd fast float %295, %81
  %301 = fadd fast float %300, %269
  call void @dx.op.storeOutput.f32(i32 5, i32 0, i32 0, i8 0, float %297)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 0, i32 0, i8 1, float %299)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 0, i32 0, i8 2, float %301)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 0, i32 0, i8 3, float %66)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  ret void
}

; Function Attrs: nounwind readnone
declare float @dx.op.loadInput.f32(i32, i32, i32, i8, i32) #0

; Function Attrs: nounwind readnone
declare i32 @dx.op.loadInput.i32(i32, i32, i32, i8, i32) #0

; Function Attrs: nounwind
declare void @dx.op.storeOutput.f32(i32, i32, i32, i8, float) #1

; Function Attrs: nounwind readnone
declare %dx.types.Handle @dx.op.createHandleFromHeap(i32, i32, i1, i1) #0

; Function Attrs: nounwind readonly
declare %dx.types.ResRet.i32 @dx.op.rawBufferLoad.i32(i32, %dx.types.Handle, i32, i32, i8, i32) #2

; Function Attrs: nounwind readonly
declare %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32, %dx.types.Handle, i32, i32, i8, i32) #2

; Function Attrs: nounwind readnone
declare float @dx.op.dot3.f32(i32, float, float, float, float, float, float) #0

; Function Attrs: nounwind readnone
declare float @dx.op.unary.f32(i32, float) #0

; Function Attrs: nounwind readonly
declare %dx.types.ResRet.f32 @dx.op.sample.f32(i32, %dx.types.Handle, %dx.types.Handle, float, float, float, float, i32, i32, i32, float) #2

; Function Attrs: nounwind
declare void @dx.op.discard(i32, i1) #1

; Function Attrs: nounwind readnone
declare float @dx.op.dot2.f32(i32, float, float, float, float) #0

; Function Attrs: nounwind readnone
declare float @dx.op.binary.f32(i32, float, float) #0

; Function Attrs: nounwind readonly
declare %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32, %dx.types.Handle, i32) #2

; Function Attrs: nounwind readonly
declare %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32, %dx.types.Handle, i32) #2

; Function Attrs: nounwind readnone
declare float @dx.op.tertiary.f32(i32, float, float, float) #0

; Function Attrs: nounwind readnone
declare %dx.types.Handle @dx.op.annotateHandle(i32, %dx.types.Handle, %dx.types.ResourceProperties) #0

; Function Attrs: nounwind readnone
declare %dx.types.Handle @dx.op.createHandleFromBinding(i32, %dx.types.ResBind, i32, i1) #0

attributes #0 = { nounwind readnone }
attributes #1 = { nounwind }
attributes #2 = { nounwind readonly }

!llvm.ident = !{!0}
!dx.version = !{!1}
!dx.valver = !{!1}
!dx.shaderModel = !{!2}
!dx.resources = !{!3}
!dx.viewIdState = !{!9}
!dx.entryPoints = !{!10}

!0 = !{!"dxcoob 1.7.2308.7 (69e54e290)"}
!1 = !{i32 1, i32 7}
!2 = !{!"ps", i32 6, i32 7}
!3 = !{null, null, !4, !6}
!4 = !{!5}
!5 = !{i32 0, %hostlayout.frameCB* undef, !"", i32 0, i32 0, i32 1, i32 396, null}
!6 = !{!7, !8}
!7 = !{i32 0, %struct.SamplerState* undef, !"", i32 0, i32 1, i32 1, i32 0, null}
!8 = !{i32 1, %struct.SamplerState* undef, !"", i32 0, i32 3, i32 1, i32 0, null}
!9 = !{[28 x i32] [i32 26, i32 4, i32 0, i32 0, i32 0, i32 0, i32 7, i32 7, i32 0, i32 7, i32 7, i32 7, i32 7, i32 0, i32 7, i32 7, i32 7, i32 0, i32 15, i32 15, i32 0, i32 0, i32 7, i32 7, i32 7, i32 0, i32 15, i32 0]}
!10 = !{void ()* @main, !"main", !11, !3, !30}
!11 = !{!12, !27, null}
!12 = !{!13, !15, !17, !20, !21, !23, !24, !26}
!13 = !{i32 0, !"SV_Position", i8 9, i8 3, !14, i8 4, i32 1, i8 4, i32 0, i8 0, null}
!14 = !{i32 0}
!15 = !{i32 1, !"POSITION", i8 9, i8 0, !14, i8 2, i32 1, i8 4, i32 1, i8 0, !16}
!16 = !{i32 3, i32 11}
!17 = !{i32 2, !"POSITION", i8 9, i8 0, !18, i8 2, i32 1, i8 3, i32 2, i8 0, !19}
!18 = !{i32 1}
!19 = !{i32 3, i32 7}
!20 = !{i32 3, !"NORMAL", i8 9, i8 0, !14, i8 2, i32 1, i8 3, i32 3, i8 0, !19}
!21 = !{i32 4, !"TEXCOORD", i8 9, i8 0, !14, i8 2, i32 1, i8 2, i32 4, i8 0, !22}
!22 = !{i32 3, i32 3}
!23 = !{i32 5, !"TANGENT", i8 9, i8 0, !14, i8 2, i32 1, i8 3, i32 5, i8 0, !19}
!24 = !{i32 6, !"SV_InstanceID", i8 5, i8 0, !14, i8 1, i32 1, i8 1, i32 6, i8 0, !25}
!25 = !{i32 3, i32 1}
!26 = !{i32 7, !"SV_PrimitiveID", i8 5, i8 10, !14, i8 1, i32 1, i8 1, i32 6, i8 1, null}
!27 = !{!28}
!28 = !{i32 0, !"SV_Target", i8 9, i8 16, !14, i8 0, i32 1, i8 4, i32 0, i8 0, !29}
!29 = !{i32 3, i32 15}
!30 = !{i32 0, i64 1073741824}

#endif

const unsigned char g_PixelShaderMesh[] = {
  0x44, 0x58, 0x42, 0x43, 0xe9, 0x2a, 0x75, 0xb5, 0xb9, 0xea, 0x58, 0xe5,
  0xe3, 0x7d, 0xdf, 0xa5, 0x8f, 0xb7, 0x1c, 0x40, 0x01, 0x00, 0x00, 0x00,
  0x24, 0x22, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00,
  0x50, 0x00, 0x00, 0x00, 0xac, 0x01, 0x00, 0x00, 0xe8, 0x01, 0x00, 0x00,
  0xc4, 0x03, 0x00, 0x00, 0x0c, 0x0f, 0x00, 0x00, 0x38, 0x0f, 0x00, 0x00,
  0x54, 0x0f, 0x00, 0x00, 0x53, 0x46, 0x49, 0x30, 0x08, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x49, 0x53, 0x47, 0x31,
  0x54, 0x01, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x08, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x14, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0f, 0x0b, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x14, 0x01, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x07, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x1d, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x07, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x24, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x03, 0x03, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2d, 0x01, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x05, 0x00, 0x00, 0x00, 0x07, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x35, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00,
  0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x43, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x53, 0x56, 0x5f, 0x50, 0x6f, 0x73, 0x69, 0x74,
  0x69, 0x6f, 0x6e, 0x00, 0x50, 0x4f, 0x53, 0x49, 0x54, 0x49, 0x4f, 0x4e,
  0x00, 0x4e, 0x4f, 0x52, 0x4d, 0x41, 0x4c, 0x00, 0x54, 0x45, 0x58, 0x43,
  0x4f, 0x4f, 0x52, 0x44, 0x00, 0x54, 0x41, 0x4e, 0x47, 0x45, 0x4e, 0x54,
  0x00, 0x53, 0x56, 0x5f, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
  0x49, 0x44, 0x00, 0x53, 0x56, 0x5f, 0x50, 0x72, 0x69, 0x6d, 0x69, 0x74,
  0x69, 0x76, 0x65, 0x49, 0x44, 0x00, 0x00, 0x00, 0x4f, 0x53, 0x47, 0x31,
  0x34, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x28, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x40, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x53, 0x56, 0x5f, 0x54,
  0x61, 0x72, 0x67, 0x65, 0x74, 0x00, 0x00, 0x00, 0x50, 0x53, 0x56, 0x30,
  0xd4, 0x01, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00,
  0x08, 0x01, 0x00, 0x07, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x18, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x50, 0x4f, 0x53,
  0x49, 0x54, 0x49, 0x4f, 0x4e, 0x00, 0x50, 0x4f, 0x53, 0x49, 0x54, 0x49,
  0x4f, 0x4e, 0x00, 0x4e, 0x4f, 0x52, 0x4d, 0x41, 0x4c, 0x00, 0x54, 0x45,
  0x58, 0x43, 0x4f, 0x4f, 0x52, 0x44, 0x00, 0x54, 0x41, 0x4e, 0x47, 0x45,
  0x4e, 0x54, 0x00, 0x53, 0x56, 0x5f, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e,
  0x63, 0x65, 0x49, 0x44, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x44, 0x03,
  0x03, 0x04, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x01, 0x44, 0x00, 0x03, 0x02, 0x00, 0x00, 0x0a, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x01, 0x02, 0x43, 0x00, 0x03, 0x02, 0x00, 0x00,
  0x13, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x03, 0x43, 0x00,
  0x03, 0x02, 0x00, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x04, 0x42, 0x00, 0x03, 0x02, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x05, 0x43, 0x00, 0x03, 0x02, 0x00, 0x00,
  0x2b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x06, 0x41, 0x00,
  0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x06, 0x51, 0x0a, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x44, 0x10, 0x03, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00,
  0x07, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x07, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00,
  0x07, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x53, 0x54, 0x41, 0x54, 0x40, 0x0b, 0x00, 0x00,
  0x67, 0x00, 0x00, 0x00, 0xd0, 0x02, 0x00, 0x00, 0x44, 0x58, 0x49, 0x4c,
  0x07, 0x01, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x28, 0x0b, 0x00, 0x00,
  0x42, 0x43, 0xc0, 0xde, 0x21, 0x0c, 0x00, 0x00, 0xc7, 0x02, 0x00, 0x00,
  0x0b, 0x82, 0x20, 0x00, 0x02, 0x00, 0x00, 0x00, 0x13, 0x00, 0x00, 0x00,
  0x07, 0x81, 0x23, 0x91, 0x41, 0xc8, 0x04, 0x49, 0x06, 0x10, 0x32, 0x39,
  0x92, 0x01, 0x84, 0x0c, 0x25, 0x05, 0x08, 0x19, 0x1e, 0x04, 0x8b, 0x62,
  0x80, 0x18, 0x45, 0x02, 0x42, 0x92, 0x0b, 0x42, 0xc4, 0x10, 0x32, 0x14,
  0x38, 0x08, 0x18, 0x4b, 0x0a, 0x32, 0x62, 0x88, 0x48, 0x90, 0x14, 0x20,
  0x43, 0x46, 0x88, 0xa5, 0x00, 0x19, 0x32, 0x42, 0xe4, 0x48, 0x0e, 0x90,
  0x11, 0x23, 0xc4, 0x50, 0x41, 0x51, 0x81, 0x8c, 0xe1, 0x83, 0xe5, 0x8a,
  0x04, 0x31, 0x46, 0x06, 0x51, 0x18, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00,
  0x1b, 0x8c, 0xe0, 0xff, 0xff, 0xff, 0xff, 0x07, 0x40, 0x02, 0xa8, 0x0d,
  0x84, 0xf0, 0xff, 0xff, 0xff, 0xff, 0x03, 0x20, 0x6d, 0x30, 0x86, 0xff,
  0xff, 0xff, 0xff, 0x1f, 0x00, 0x09, 0xa8, 0x00, 0x49, 0x18, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x13, 0x82, 0x60, 0x42, 0x20, 0x4c, 0x08, 0x06,
  0x00, 0x00, 0x00, 0x00, 0x89, 0x20, 0x00, 0x00, 0x63, 0x00, 0x00, 0x00,
  0x32, 0x22, 0x88, 0x09, 0x20, 0x64, 0x85, 0x04, 0x13, 0x23, 0xa4, 0x84,
  0x04, 0x13, 0x23, 0xe3, 0x84, 0xa1, 0x90, 0x14, 0x12, 0x4c, 0x8c, 0x8c,
  0x0b, 0x84, 0xc4, 0x4c, 0x10, 0xf0, 0xc1, 0x08, 0x40, 0x09, 0x00, 0x0a,
  0x66, 0x00, 0xe6, 0x08, 0xc0, 0x60, 0x8e, 0x00, 0x29, 0xc6, 0x40, 0x10,
  0x44, 0x41, 0x90, 0x51, 0x0c, 0x82, 0x20, 0x88, 0x82, 0x20, 0xa4, 0x18,
  0x00, 0x41, 0x10, 0xc5, 0x40, 0x0a, 0x15, 0xf7, 0x0c, 0x97, 0x3f, 0x61,
  0x0f, 0x21, 0xf9, 0x21, 0xd0, 0x0c, 0x0b, 0x81, 0x02, 0x66, 0x8e, 0x20,
  0x28, 0x45, 0x43, 0x10, 0x8e, 0x43, 0xcf, 0x4d, 0xc3, 0xe5, 0x4f, 0xd8,
  0x43, 0x48, 0xfe, 0x4a, 0x48, 0x2b, 0x31, 0xf9, 0xc8, 0x6d, 0xa3, 0x82,
  0x20, 0x08, 0x82, 0x28, 0x47, 0x44, 0x34, 0x04, 0x51, 0x10, 0x24, 0xdd,
  0x34, 0x5c, 0xfe, 0x84, 0x3d, 0x84, 0xe4, 0xaf, 0x84, 0xb4, 0x12, 0x93,
  0x5f, 0xdc, 0x36, 0x2a, 0x86, 0x61, 0x18, 0x88, 0x72, 0x50, 0x44, 0x43,
  0x10, 0x05, 0x41, 0x55, 0x41, 0x06, 0x62, 0x18, 0x86, 0x61, 0x18, 0xe8,
  0x2a, 0xc3, 0x40, 0x0c, 0x94, 0x15, 0x86, 0x22, 0x9a, 0x66, 0x18, 0x86,
  0x81, 0x20, 0x88, 0x81, 0xb6, 0x32, 0x00, 0x84, 0x43, 0x5d, 0x31, 0x06,
  0x62, 0x18, 0x86, 0x81, 0xbe, 0x42, 0x0c, 0xc4, 0x30, 0x50, 0x78, 0xd4,
  0x70, 0xf9, 0x13, 0xf6, 0x10, 0x92, 0xcf, 0x6d, 0x54, 0xb1, 0x12, 0x93,
  0x5f, 0xdc, 0x36, 0x22, 0x86, 0x61, 0x18, 0x0a, 0x31, 0x12, 0x0d, 0x41,
  0xe4, 0x51, 0xc3, 0xe5, 0x4f, 0xd8, 0x43, 0x48, 0x3e, 0xb7, 0x51, 0xc5,
  0x4a, 0x4c, 0x3e, 0x72, 0xdb, 0x88, 0x20, 0x08, 0x82, 0x28, 0x84, 0x49,
  0x34, 0x04, 0x9d, 0xa5, 0x18, 0x88, 0x61, 0x18, 0x28, 0xbd, 0x6d, 0xb8,
  0xfc, 0x09, 0x7b, 0x08, 0xc9, 0x5f, 0x09, 0xc9, 0xa1, 0x22, 0x81, 0x48,
  0x23, 0xe7, 0x21, 0xa2, 0x09, 0x21, 0x24, 0x24, 0x10, 0x44, 0x21, 0x1a,
  0xa2, 0x59, 0x89, 0x3d, 0x68, 0xb8, 0xfc, 0x09, 0x7b, 0x08, 0xc9, 0x5f,
  0x09, 0x69, 0x43, 0x9a, 0x01, 0x11, 0x04, 0x41, 0x14, 0xa5, 0x68, 0x08,
  0x97, 0x70, 0xe8, 0x1d, 0x08, 0x18, 0x46, 0x20, 0x86, 0x24, 0x90, 0x87,
  0x11, 0x86, 0xe1, 0xc0, 0xe0, 0x70, 0xa4, 0x69, 0x01, 0x30, 0x87, 0x9a,
  0x7c, 0x69, 0x8a, 0x28, 0x61, 0xf2, 0xbf, 0x08, 0x60, 0x08, 0xce, 0x69,
  0xa4, 0x09, 0x68, 0x26, 0x09, 0x35, 0xf3, 0x3c, 0xcf, 0xb3, 0x2c, 0xcb,
  0x34, 0x41, 0x10, 0xc4, 0x49, 0x87, 0x23, 0x4d, 0x0b, 0x80, 0x39, 0xd4,
  0xe4, 0x17, 0x11, 0xc0, 0x10, 0xdc, 0x86, 0x82, 0x9a, 0xec, 0x9b, 0xa4,
  0x29, 0xa2, 0x84, 0xc9, 0x67, 0x01, 0xe6, 0x59, 0x88, 0x88, 0x9d, 0x80,
  0x89, 0x40, 0x01, 0x41, 0x78, 0x72, 0x10, 0x73, 0x04, 0xa0, 0x00, 0x00,
  0x13, 0x14, 0x72, 0xc0, 0x87, 0x74, 0x60, 0x87, 0x36, 0x68, 0x87, 0x79,
  0x68, 0x03, 0x72, 0xc0, 0x87, 0x0d, 0xaf, 0x50, 0x0e, 0x6d, 0xd0, 0x0e,
  0x7a, 0x50, 0x0e, 0x6d, 0x00, 0x0f, 0x7a, 0x30, 0x07, 0x72, 0xa0, 0x07,
  0x73, 0x20, 0x07, 0x6d, 0x90, 0x0e, 0x71, 0xa0, 0x07, 0x73, 0x20, 0x07,
  0x6d, 0x90, 0x0e, 0x78, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d, 0x90, 0x0e,
  0x71, 0x60, 0x07, 0x7a, 0x30, 0x07, 0x72, 0xd0, 0x06, 0xe9, 0x30, 0x07,
  0x72, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d, 0x90, 0x0e, 0x76, 0x40, 0x07,
  0x7a, 0x60, 0x07, 0x74, 0xd0, 0x06, 0xe6, 0x10, 0x07, 0x76, 0xa0, 0x07,
  0x73, 0x20, 0x07, 0x6d, 0x60, 0x0e, 0x73, 0x20, 0x07, 0x7a, 0x30, 0x07,
  0x72, 0xd0, 0x06, 0xe6, 0x60, 0x07, 0x74, 0xa0, 0x07, 0x76, 0x40, 0x07,
  0x6d, 0xe0, 0x0e, 0x78, 0xa0, 0x07, 0x71, 0x60, 0x07, 0x7a, 0x30, 0x07,
  0x72, 0xa0, 0x07, 0x76, 0x40, 0x07, 0x43, 0x9e, 0x00, 0x08, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x86, 0x3c, 0x06, 0x10, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x79, 0x10, 0x20,
  0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0xf2, 0x28,
  0x40, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0xe4,
  0x79, 0x80, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60,
  0xc8, 0x23, 0x01, 0x01, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xc0, 0x90, 0xa7, 0x02, 0x02, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x80, 0x21, 0xcf, 0x05, 0x04, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x43, 0x9e, 0x0c, 0x08, 0x80, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x86, 0x3c, 0x1b, 0x10, 0x00, 0x03, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x79, 0x3a, 0x20, 0x00, 0x04, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0xf2, 0x7c, 0x40, 0x00, 0x04,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0xe4, 0x09, 0x03, 0x20,
  0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0xf2, 0x90,
  0x01, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c,
  0x79, 0xce, 0x00, 0x08, 0x80, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x86, 0x3c, 0x69, 0x00, 0x04, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x43, 0x1e, 0x36, 0x00, 0x02, 0x20, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x80, 0x21, 0xcf, 0x1b, 0x00, 0x01, 0x10, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x16, 0x08, 0x00, 0x00, 0x00,
  0x21, 0x00, 0x00, 0x00, 0x32, 0x1e, 0x98, 0x18, 0x19, 0x11, 0x4c, 0x90,
  0x8c, 0x09, 0x26, 0x47, 0xc6, 0x04, 0x43, 0x22, 0x4a, 0xa0, 0x1c, 0x46,
  0x00, 0x8a, 0xa1, 0x30, 0x0d, 0xca, 0xa0, 0x08, 0x0a, 0xa1, 0x24, 0x0a,
  0x30, 0xa0, 0x00, 0x05, 0x0a, 0x70, 0xa0, 0x00, 0x09, 0x0a, 0xb0, 0xa0,
  0x40, 0x0b, 0x0a, 0xb8, 0xa0, 0xc0, 0x0b, 0x0a, 0xbf, 0xa0, 0x14, 0x0a,
  0xd0, 0xa0, 0x10, 0x0d, 0x0a, 0xd2, 0xa0, 0x2c, 0xca, 0xa3, 0x48, 0x07,
  0xca, 0x9c, 0x80, 0x8a, 0x92, 0x28, 0x83, 0x42, 0x18, 0x01, 0x28, 0x82,
  0x52, 0x28, 0x81, 0xa2, 0x28, 0x10, 0xda, 0x0b, 0x10, 0x10, 0x10, 0x10,
  0x81, 0xec, 0x19, 0x00, 0xba, 0x67, 0x00, 0x28, 0x9f, 0x01, 0x20, 0x7d,
  0x2c, 0x4e, 0x23, 0x00, 0x00, 0x00, 0x8e, 0x03, 0x38, 0x8e, 0xe3, 0x00,
  0x8e, 0xe3, 0x00, 0x9e, 0x07, 0x00, 0x8e, 0xe3, 0x00, 0x1e, 0x80, 0xea,
  0x19, 0x00, 0x00, 0x00, 0x79, 0x18, 0x00, 0x00, 0x1d, 0x01, 0x00, 0x00,
  0x1a, 0x03, 0x4c, 0x90, 0x46, 0x02, 0x13, 0xc4, 0x8e, 0x0c, 0x6f, 0xec,
  0xed, 0x4d, 0x0c, 0x24, 0xc6, 0xe5, 0xc6, 0x45, 0x66, 0x06, 0x06, 0xc7,
  0xe5, 0x06, 0x04, 0xc5, 0x26, 0xa7, 0xac, 0x86, 0xa6, 0x4c, 0x26, 0x07,
  0x26, 0x65, 0x43, 0x10, 0x4c, 0x10, 0x08, 0x69, 0x82, 0x40, 0x4c, 0x1b,
  0x84, 0x81, 0x98, 0x20, 0x10, 0xd4, 0x06, 0xc1, 0x30, 0x28, 0xc0, 0xcd,
  0x4d, 0x10, 0x88, 0x6a, 0xc3, 0x80, 0x24, 0xc4, 0x04, 0xe1, 0x0e, 0xee,
  0x80, 0x87, 0x99, 0x5c, 0x58, 0x5b, 0xd9, 0x90, 0xd0, 0x04, 0x81, 0xb0,
  0x36, 0x20, 0xc6, 0xc2, 0x18, 0xc6, 0xd0, 0x00, 0x1b, 0x02, 0x67, 0x82,
  0x90, 0x07, 0x78, 0xc0, 0x85, 0x29, 0xcd, 0xad, 0x2c, 0x4c, 0x6e, 0x88,
  0x2d, 0xac, 0x0d, 0x6e, 0x03, 0x62, 0x40, 0x91, 0x31, 0x0c, 0x06, 0xc0,
  0x24, 0xc8, 0x2d, 0x6d, 0xee, 0xed, 0x4a, 0x2e, 0x0c, 0x6e, 0x82, 0x40,
  0x5c, 0x1b, 0x90, 0x01, 0x9a, 0x0c, 0x6a, 0x30, 0x80, 0x0d, 0x82, 0x54,
  0x6d, 0x20, 0x00, 0xe0, 0xb1, 0x26, 0x08, 0x75, 0xa0, 0x07, 0x44, 0xec,
  0xd2, 0xca, 0xee, 0xa0, 0xe4, 0xde, 0xd4, 0x26, 0x08, 0x04, 0x36, 0x41,
  0x20, 0xb2, 0x0d, 0xc3, 0xb6, 0x69, 0x13, 0x04, 0x42, 0xdb, 0x80, 0x24,
  0x99, 0xc6, 0x51, 0x06, 0xd1, 0xf1, 0x48, 0x73, 0xb3, 0x83, 0x92, 0x7b,
  0x53, 0x9b, 0x20, 0x10, 0xdb, 0x06, 0x24, 0xf9, 0x34, 0x8e, 0x02, 0x03,
  0xa2, 0xe3, 0x92, 0xe6, 0x66, 0x67, 0x95, 0x56, 0x76, 0x07, 0x25, 0xf7,
  0xa6, 0x36, 0x41, 0x20, 0xb8, 0x0d, 0x48, 0x22, 0x06, 0x1a, 0x47, 0x8d,
  0x01, 0xd1, 0x71, 0xb1, 0x4b, 0x2b, 0xbb, 0x83, 0x92, 0x7b, 0x53, 0xa3,
  0x2a, 0xc3, 0x9b, 0x20, 0x10, 0xdd, 0x06, 0x24, 0x29, 0x03, 0x8d, 0xa3,
  0xcc, 0x80, 0xe8, 0xf8, 0xc0, 0xc9, 0x95, 0xd9, 0x59, 0xa5, 0x95, 0xdd,
  0x41, 0xc9, 0xbd, 0xa9, 0x51, 0x95, 0xe1, 0x4d, 0x10, 0x08, 0x6f, 0x03,
  0x92, 0xa0, 0x81, 0xc6, 0x51, 0x69, 0x40, 0x74, 0x4c, 0xc6, 0xc2, 0xda,
  0xca, 0xe4, 0xc2, 0xa0, 0xde, 0xe6, 0x26, 0x08, 0xc4, 0xb7, 0xc1, 0x48,
  0xd6, 0x80, 0x62, 0x03, 0xa2, 0x23, 0xc3, 0x96, 0x76, 0x86, 0x46, 0x47,
  0x94, 0x66, 0x66, 0x56, 0x37, 0x57, 0x36, 0x41, 0x20, 0xc0, 0x60, 0x83,
  0x91, 0xb8, 0x01, 0xf5, 0x06, 0x44, 0x47, 0x86, 0x2d, 0xed, 0x0c, 0x8d,
  0x2e, 0xa8, 0x4d, 0x2c, 0xad, 0xcc, 0x8d, 0x6e, 0x82, 0x40, 0x84, 0xc1,
  0x06, 0x23, 0x89, 0x03, 0x4a, 0x0e, 0x88, 0x8e, 0x08, 0x5b, 0xda, 0x19,
  0x1a, 0x1d, 0x51, 0x9a, 0xdc, 0x04, 0x81, 0x10, 0x83, 0x0d, 0x46, 0x42,
  0x07, 0x54, 0x1d, 0x10, 0x1d, 0x15, 0x33, 0xb9, 0xb0, 0xb6, 0xb2, 0xa1,
  0xb7, 0x3a, 0x37, 0xba, 0x09, 0x02, 0x31, 0x06, 0x13, 0x04, 0x82, 0x0c,
  0x36, 0x18, 0xc9, 0x1d, 0x50, 0x78, 0x40, 0xe4, 0x01, 0x1f, 0x3a, 0xb6,
  0xb0, 0x39, 0xa1, 0x3a, 0x33, 0xb3, 0x32, 0xb9, 0x29, 0x39, 0xbb, 0x24,
  0xa2, 0x09, 0x02, 0x51, 0x06, 0x1b, 0x8c, 0x64, 0x0f, 0x28, 0x3e, 0x20,
  0xf2, 0x80, 0x4f, 0x9a, 0xdb, 0x1c, 0x9d, 0x50, 0x9d, 0x99, 0x59, 0x99,
  0xdc, 0x94, 0x9c, 0x5d, 0x12, 0xd1, 0x04, 0x81, 0x30, 0x83, 0x0d, 0x46,
  0xe2, 0x07, 0xd4, 0x1f, 0x10, 0x79, 0x40, 0x0a, 0x4e, 0xae, 0xcc, 0xce,
  0x48, 0x2e, 0xac, 0xad, 0x4c, 0xa8, 0xce, 0xcc, 0xac, 0x4c, 0x6e, 0x4a,
  0xce, 0x2e, 0x89, 0x68, 0x82, 0x40, 0x9c, 0xc1, 0x06, 0x23, 0x09, 0x05,
  0x4a, 0x14, 0x88, 0x3c, 0xd8, 0xe0, 0x34, 0x5e, 0x18, 0x90, 0xc1, 0x19,
  0xa8, 0x41, 0x1b, 0xc0, 0xc1, 0x1c, 0xd8, 0x81, 0x1e, 0xf4, 0x01, 0x28,
  0x8c, 0xc2, 0x04, 0xc1, 0x0e, 0xec, 0x60, 0x03, 0x91, 0x30, 0x94, 0xb1,
  0x41, 0x68, 0x4c, 0x61, 0x43, 0x61, 0x60, 0xa4, 0x50, 0x0a, 0xa7, 0x30,
  0x41, 0x10, 0x80, 0x0d, 0xc0, 0x86, 0xc1, 0x50, 0x05, 0x55, 0xd8, 0x10,
  0xac, 0xc2, 0x86, 0x61, 0x48, 0x05, 0x56, 0x98, 0x20, 0xe8, 0x41, 0x1e,
  0x6c, 0x08, 0x5c, 0x81, 0x44, 0x5b, 0x58, 0x9a, 0x1b, 0x97, 0x29, 0xab,
  0x2f, 0xa8, 0xb7, 0xb9, 0x34, 0xba, 0xb4, 0x37, 0xb7, 0x09, 0x42, 0xc1,
  0x06, 0x13, 0x84, 0xa2, 0x0d, 0x36, 0x04, 0xc6, 0x04, 0xa1, 0x70, 0x83,
  0x09, 0x42, 0xf1, 0x06, 0x1b, 0x16, 0x23, 0x16, 0x64, 0x61, 0x16, 0x68,
  0xa1, 0x16, 0x86, 0x5a, 0x30, 0x6c, 0x01, 0x20, 0x02, 0xf5, 0x34, 0x95,
  0x44, 0x95, 0xf4, 0xe4, 0x34, 0x41, 0x28, 0xe0, 0x60, 0x82, 0x40, 0xa0,
  0xc1, 0x06, 0x81, 0xd2, 0x85, 0x0d, 0xcb, 0x80, 0x0b, 0xb2, 0x60, 0x0b,
  0xb4, 0x90, 0x0b, 0x43, 0x2d, 0x0c, 0xb6, 0xb0, 0x0b, 0x1b, 0x82, 0x61,
  0x83, 0x40, 0x11, 0x1b, 0x16, 0x0d, 0x17, 0x64, 0xc1, 0x16, 0x7a, 0x21,
  0x17, 0x86, 0x59, 0xd0, 0x6c, 0xc1, 0x17, 0x68, 0x38, 0x3d, 0x49, 0x35,
  0x05, 0x31, 0x6d, 0x58, 0x28, 0x70, 0x90, 0x05, 0x5b, 0xa0, 0x85, 0x5c,
  0x18, 0x66, 0x81, 0xb2, 0x05, 0x5f, 0x20, 0x42, 0x55, 0x84, 0x35, 0xf4,
  0xf4, 0x24, 0x45, 0xb4, 0x41, 0xa0, 0xa8, 0x0d, 0xcb, 0x26, 0x0e, 0xb2,
  0x60, 0x0b, 0xb4, 0x90, 0x0b, 0x43, 0x2e, 0x6c, 0xb6, 0x30, 0x0e, 0x3c,
  0xa8, 0x82, 0x9c, 0x8e, 0x8a, 0x9c, 0xa8, 0x36, 0x2c, 0x79, 0x50, 0x0e,
  0xb2, 0x60, 0x0b, 0xb4, 0x90, 0x0b, 0xc3, 0x2c, 0xe4, 0x81, 0x2d, 0xf8,
  0x02, 0x9b, 0x29, 0xab, 0xaf, 0x24, 0xb7, 0x39, 0xba, 0x30, 0xb7, 0xb1,
  0xb2, 0x24, 0xa2, 0x09, 0x42, 0x11, 0x07, 0x13, 0x84, 0x42, 0x0e, 0x36,
  0x08, 0xd4, 0xb0, 0x61, 0x49, 0xce, 0x01, 0x1d, 0x6c, 0x81, 0x16, 0xd2,
  0x61, 0x48, 0x87, 0xc4, 0x16, 0xd4, 0x81, 0xce, 0x94, 0xd5, 0x17, 0x94,
  0x5c, 0x5a, 0x5b, 0x1a, 0x5d, 0x9a, 0x5d, 0x59, 0x12, 0xd1, 0x04, 0xa1,
  0x98, 0x83, 0x0d, 0x0b, 0xc1, 0x0e, 0xe8, 0xd0, 0x0e, 0xb4, 0x90, 0x0e,
  0x43, 0x3a, 0x24, 0xe9, 0x00, 0x6c, 0x40, 0x6e, 0x81, 0x17, 0x7e, 0x21,
  0x1c, 0xc8, 0xc1, 0x1c, 0xd6, 0xc1, 0x1d, 0x98, 0x4c, 0x59, 0x7d, 0x51,
  0x85, 0xc9, 0x9d, 0x95, 0xd1, 0x4d, 0x10, 0x0a, 0x3a, 0x98, 0x20, 0x10,
  0x69, 0xb0, 0x41, 0xa0, 0xe4, 0x61, 0xc3, 0x62, 0xc0, 0x83, 0x2c, 0xc4,
  0x03, 0x2d, 0xd8, 0xc2, 0x50, 0x0b, 0x86, 0x2d, 0xcc, 0xc3, 0x86, 0x80,
  0x1e, 0x36, 0x0c, 0xef, 0x50, 0x0f, 0xc0, 0x04, 0x61, 0x0f, 0xea, 0x60,
  0x83, 0x60, 0xdc, 0xc3, 0x86, 0x22, 0x15, 0x60, 0xc1, 0x1e, 0x2e, 0x7c,
  0xa0, 0x61, 0xc6, 0xf6, 0x16, 0x46, 0x37, 0x37, 0x41, 0x20, 0xd4, 0x80,
  0x45, 0x9a, 0xdb, 0x1c, 0xdd, 0xdc, 0x04, 0x81, 0x58, 0x03, 0x1a, 0x73,
  0x69, 0x67, 0x5f, 0x6c, 0x64, 0x34, 0xe6, 0xd2, 0xce, 0xbe, 0xe6, 0xe8,
  0x88, 0xd0, 0x95, 0xe1, 0x7d, 0xb1, 0xbd, 0x85, 0x91, 0x11, 0xa1, 0x2b,
  0xc3, 0xfb, 0x72, 0x7b, 0x93, 0x6b, 0xdb, 0xc0, 0xe8, 0xc3, 0x3e, 0xf0,
  0x43, 0x3f, 0xf8, 0x83, 0x3c, 0xfc, 0xc3, 0x06, 0x12, 0x79, 0x10, 0x12,
  0x79, 0x50, 0x85, 0x8d, 0xcd, 0xae, 0xcd, 0x25, 0x8d, 0xac, 0xcc, 0x8d,
  0x6e, 0x4a, 0x10, 0x54, 0x21, 0xc3, 0x73, 0xb1, 0x2b, 0x93, 0x9b, 0x4b,
  0x7b, 0x73, 0x9b, 0x12, 0x10, 0x4d, 0xc8, 0xf0, 0x5c, 0xec, 0xc2, 0xd8,
  0xec, 0xca, 0xe4, 0xa6, 0x04, 0x46, 0x1d, 0x32, 0x3c, 0x97, 0x39, 0xb4,
  0x30, 0xb2, 0x32, 0xb9, 0xa6, 0x37, 0xb2, 0x32, 0xb6, 0x29, 0x41, 0x52,
  0x86, 0x0c, 0xcf, 0x45, 0xae, 0x6c, 0xee, 0xad, 0x4e, 0x6e, 0xac, 0x6c,
  0x6e, 0x4a, 0x60, 0x55, 0x22, 0xc3, 0x73, 0xa1, 0xcb, 0x83, 0x2b, 0x0b,
  0x72, 0x73, 0x7b, 0xa3, 0x0b, 0xa3, 0x4b, 0x7b, 0x73, 0x9b, 0x9b, 0x22,
  0x9c, 0x02, 0x2b, 0xd4, 0x21, 0xc3, 0x73, 0xb1, 0x4b, 0x2b, 0xbb, 0x4b,
  0x22, 0x9b, 0xa2, 0x0b, 0xa3, 0x2b, 0x9b, 0x12, 0xb8, 0x42, 0x1d, 0x32,
  0x3c, 0x97, 0x32, 0x37, 0x3a, 0xb9, 0x3c, 0xa8, 0xb7, 0x34, 0x37, 0xba,
  0xb9, 0x29, 0x01, 0x3e, 0x74, 0x21, 0xc3, 0x73, 0x19, 0x7b, 0xab, 0x73,
  0xa3, 0x2b, 0x93, 0x9b, 0x9b, 0x12, 0x84, 0x04, 0x00, 0x00, 0x00, 0x00,
  0x79, 0x18, 0x00, 0x00, 0x4c, 0x00, 0x00, 0x00, 0x33, 0x08, 0x80, 0x1c,
  0xc4, 0xe1, 0x1c, 0x66, 0x14, 0x01, 0x3d, 0x88, 0x43, 0x38, 0x84, 0xc3,
  0x8c, 0x42, 0x80, 0x07, 0x79, 0x78, 0x07, 0x73, 0x98, 0x71, 0x0c, 0xe6,
  0x00, 0x0f, 0xed, 0x10, 0x0e, 0xf4, 0x80, 0x0e, 0x33, 0x0c, 0x42, 0x1e,
  0xc2, 0xc1, 0x1d, 0xce, 0xa1, 0x1c, 0x66, 0x30, 0x05, 0x3d, 0x88, 0x43,
  0x38, 0x84, 0x83, 0x1b, 0xcc, 0x03, 0x3d, 0xc8, 0x43, 0x3d, 0x8c, 0x03,
  0x3d, 0xcc, 0x78, 0x8c, 0x74, 0x70, 0x07, 0x7b, 0x08, 0x07, 0x79, 0x48,
  0x87, 0x70, 0x70, 0x07, 0x7a, 0x70, 0x03, 0x76, 0x78, 0x87, 0x70, 0x20,
  0x87, 0x19, 0xcc, 0x11, 0x0e, 0xec, 0x90, 0x0e, 0xe1, 0x30, 0x0f, 0x6e,
  0x30, 0x0f, 0xe3, 0xf0, 0x0e, 0xf0, 0x50, 0x0e, 0x33, 0x10, 0xc4, 0x1d,
  0xde, 0x21, 0x1c, 0xd8, 0x21, 0x1d, 0xc2, 0x61, 0x1e, 0x66, 0x30, 0x89,
  0x3b, 0xbc, 0x83, 0x3b, 0xd0, 0x43, 0x39, 0xb4, 0x03, 0x3c, 0xbc, 0x83,
  0x3c, 0x84, 0x03, 0x3b, 0xcc, 0xf0, 0x14, 0x76, 0x60, 0x07, 0x7b, 0x68,
  0x07, 0x37, 0x68, 0x87, 0x72, 0x68, 0x07, 0x37, 0x80, 0x87, 0x70, 0x90,
  0x87, 0x70, 0x60, 0x07, 0x76, 0x28, 0x07, 0x76, 0xf8, 0x05, 0x76, 0x78,
  0x87, 0x77, 0x80, 0x87, 0x5f, 0x08, 0x87, 0x71, 0x18, 0x87, 0x72, 0x98,
  0x87, 0x79, 0x98, 0x81, 0x2c, 0xee, 0xf0, 0x0e, 0xee, 0xe0, 0x0e, 0xf5,
  0xc0, 0x0e, 0xec, 0x30, 0x03, 0x62, 0xc8, 0xa1, 0x1c, 0xe4, 0xa1, 0x1c,
  0xcc, 0xa1, 0x1c, 0xe4, 0xa1, 0x1c, 0xdc, 0x61, 0x1c, 0xca, 0x21, 0x1c,
  0xc4, 0x81, 0x1d, 0xca, 0x61, 0x06, 0xd6, 0x90, 0x43, 0x39, 0xc8, 0x43,
  0x39, 0x98, 0x43, 0x39, 0xc8, 0x43, 0x39, 0xb8, 0xc3, 0x38, 0x94, 0x43,
  0x38, 0x88, 0x03, 0x3b, 0x94, 0xc3, 0x2f, 0xbc, 0x83, 0x3c, 0xfc, 0x82,
  0x3b, 0xd4, 0x03, 0x3b, 0xb0, 0xc3, 0x0c, 0xc4, 0x21, 0x07, 0x7c, 0x70,
  0x03, 0x7a, 0x28, 0x87, 0x76, 0x80, 0x87, 0x19, 0xd1, 0x43, 0x0e, 0xf8,
  0xe0, 0x06, 0xe4, 0x20, 0x0e, 0xe7, 0xe0, 0x06, 0xf6, 0x10, 0x0e, 0xf2,
  0xc0, 0x0e, 0xe1, 0x90, 0x0f, 0xef, 0x50, 0x0f, 0xf4, 0x00, 0x00, 0x00,
  0x71, 0x20, 0x00, 0x00, 0x4b, 0x00, 0x00, 0x00, 0x06, 0x41, 0x0d, 0x97,
  0xef, 0x3c, 0x3e, 0xd0, 0x34, 0xce, 0x04, 0x4c, 0x44, 0x08, 0x34, 0xc3,
  0x42, 0x18, 0x03, 0x34, 0x5c, 0xbe, 0xf3, 0xf8, 0x01, 0xd2, 0x00, 0x11,
  0xe6, 0x17, 0xb7, 0x6d, 0x0d, 0xdb, 0x70, 0xf9, 0xce, 0xe3, 0x0b, 0x01,
  0x55, 0x14, 0x44, 0x54, 0x3a, 0xc0, 0x50, 0x12, 0x06, 0x20, 0x60, 0x7e,
  0x71, 0xdb, 0xe6, 0xb0, 0x0d, 0x97, 0xef, 0x3c, 0xbe, 0x10, 0x50, 0x45,
  0x41, 0x44, 0xa5, 0x03, 0x0c, 0x25, 0x61, 0x00, 0x02, 0xe6, 0x23, 0xb7,
  0x6d, 0x11, 0xdd, 0x70, 0xf9, 0xce, 0xe3, 0x0b, 0x11, 0x01, 0x4c, 0x44,
  0x08, 0x34, 0xc3, 0x42, 0x7c, 0x91, 0xc3, 0x6c, 0x48, 0x33, 0x20, 0x8d,
  0x61, 0x04, 0xda, 0x70, 0xf9, 0xce, 0xe3, 0x0b, 0x11, 0x01, 0x4c, 0x44,
  0x08, 0x34, 0xc3, 0x42, 0x7c, 0x91, 0xc3, 0x84, 0x04, 0xf0, 0x98, 0x42,
  0x33, 0x5c, 0xbe, 0xf3, 0xf8, 0x03, 0x22, 0x09, 0x40, 0x34, 0xd8, 0x82,
  0x33, 0x5c, 0xbe, 0xf3, 0xf8, 0x83, 0x33, 0xd9, 0x7e, 0x71, 0xdb, 0x76,
  0xe0, 0x0c, 0x97, 0xef, 0x3c, 0xfe, 0xe0, 0x4c, 0xb7, 0x5f, 0xdc, 0xb6,
  0x05, 0x4c, 0xc3, 0xe5, 0x3b, 0x8f, 0xbf, 0x38, 0xc0, 0x20, 0x36, 0x0f,
  0x35, 0xf9, 0xc5, 0x6d, 0x9b, 0xc0, 0x34, 0x5c, 0xbe, 0xf3, 0xf8, 0x8b,
  0x03, 0x0c, 0x62, 0xf3, 0x50, 0x93, 0x8f, 0xdc, 0xb6, 0x19, 0x5c, 0xc3,
  0xe5, 0x3b, 0x8f, 0x1f, 0x01, 0xd6, 0x46, 0x15, 0x05, 0x11, 0x95, 0x0e,
  0x30, 0xf8, 0xc5, 0x6d, 0x5b, 0xc1, 0x35, 0x5c, 0xbe, 0xf3, 0xf8, 0x11,
  0x60, 0x6d, 0x54, 0x51, 0x10, 0x51, 0xe9, 0x00, 0x83, 0x8f, 0xdc, 0xb6,
  0x25, 0x40, 0xc3, 0xe5, 0x3b, 0x8f, 0x2f, 0x01, 0xcc, 0xb3, 0x10, 0x7e,
  0x71, 0xdb, 0x36, 0x50, 0x0d, 0x97, 0xef, 0x3c, 0xbe, 0x34, 0x39, 0x11,
  0x81, 0x52, 0xd3, 0x43, 0x4d, 0x7e, 0x71, 0xdb, 0xf6, 0x20, 0x0d, 0x97,
  0xef, 0x3c, 0xfe, 0x44, 0x44, 0x13, 0x02, 0x44, 0x98, 0x5f, 0xdc, 0xb6,
  0x21, 0x3c, 0xc3, 0xe5, 0x3b, 0x8f, 0x4f, 0x35, 0x40, 0x84, 0xf9, 0xc5,
  0x6d, 0x1b, 0x00, 0xc1, 0x00, 0x48, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x49, 0x4c, 0x44, 0x4e, 0x24, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0x00,
  0x53, 0x68, 0x61, 0x64, 0x65, 0x72, 0x73, 0x5c, 0x50, 0x44, 0x42, 0x5c,
  0x50, 0x69, 0x78, 0x65, 0x6c, 0x53, 0x68, 0x61, 0x64, 0x65, 0x72, 0x4d,
  0x65, 0x73, 0x68, 0x2e, 0x70, 0x64, 0x62, 0x00, 0x48, 0x41, 0x53, 0x48,
  0x14, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xd0, 0xfb, 0x9e, 0x20,
  0x8c, 0xc3, 0x98, 0xe6, 0x59, 0x48, 0xac, 0xbe, 0x4a, 0xad, 0x9f, 0x11,
  0x44, 0x58, 0x49, 0x4c, 0xc8, 0x12, 0x00, 0x00, 0x67, 0x00, 0x00, 0x00,
  0xb2, 0x04, 0x00, 0x00, 0x44, 0x58, 0x49, 0x4c, 0x07, 0x01, 0x00, 0x00,
  0x10, 0x00, 0x00, 0x00, 0xb0, 0x12, 0x00, 0x00, 0x42, 0x43, 0xc0, 0xde,
  0x21, 0x0c, 0x00, 0x00, 0xa9, 0x04, 0x00, 0x00, 0x0b, 0x82, 0x20, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x13, 0x00, 0x00, 0x00, 0x07, 0x81, 0x23, 0x91,
  0x41, 0xc8, 0x04, 0x49, 0x06, 0x10, 0x32, 0x39, 0x92, 0x01, 0x84, 0x0c,
  0x25, 0x05, 0x08, 0x19, 0x1e, 0x04, 0x8b, 0x62, 0x80, 0x18, 0x45, 0x02,
  0x42, 0x92, 0x0b, 0x42, 0xc4, 0x10, 0x32, 0x14, 0x38, 0x08, 0x18, 0x4b,
  0x0a, 0x32, 0x62, 0x88, 0x48, 0x90, 0x14, 0x20, 0x43, 0x46, 0x88, 0xa5,
  0x00, 0x19, 0x32, 0x42, 0xe4, 0x48, 0x0e, 0x90, 0x11, 0x23, 0xc4, 0x50,
  0x41, 0x51, 0x81, 0x8c, 0xe1, 0x83, 0xe5, 0x8a, 0x04, 0x31, 0x46, 0x06,
  0x51, 0x18, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x1b, 0x8c, 0xe0, 0xff,
  0xff, 0xff, 0xff, 0x07, 0x40, 0x02, 0xa8, 0x0d, 0x84, 0xf0, 0xff, 0xff,
  0xff, 0xff, 0x03, 0x20, 0x6d, 0x30, 0x86, 0xff, 0xff, 0xff, 0xff, 0x1f,
  0x00, 0x09, 0xa8, 0x00, 0x49, 0x18, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x13, 0x82, 0x60, 0x42, 0x20, 0x4c, 0x08, 0x06, 0x00, 0x00, 0x00, 0x00,
  0x89, 0x20, 0x00, 0x00, 0x63, 0x00, 0x00, 0x00, 0x32, 0x22, 0x88, 0x09,
  0x20, 0x64, 0x85, 0x04, 0x13, 0x23, 0xa4, 0x84, 0x04, 0x13, 0x23, 0xe3,
  0x84, 0xa1, 0x90, 0x14, 0x12, 0x4c, 0x8c, 0x8c, 0x0b, 0x84, 0xc4, 0x4c,
  0x10, 0xf0, 0xc1, 0x08, 0x40, 0x09, 0x00, 0x0a, 0x66, 0x00, 0xe6, 0x08,
  0xc0, 0x60, 0x8e, 0x00, 0x29, 0xc6, 0x40, 0x10, 0x44, 0x41, 0x90, 0x51,
  0x0c, 0x82, 0x20, 0x88, 0x82, 0x20, 0xa4, 0x18, 0x00, 0x41, 0x10, 0xc5,
  0x40, 0x0a, 0x15, 0xf7, 0x0c, 0x97, 0x3f, 0x61, 0x0f, 0x21, 0xf9, 0x21,
  0xd0, 0x0c, 0x0b, 0x81, 0x02, 0x66, 0x8e, 0x20, 0x28, 0x45, 0x43, 0x10,
  0x8e, 0x43, 0xcf, 0x4d, 0xc3, 0xe5, 0x4f, 0xd8, 0x43, 0x48, 0xfe, 0x4a,
  0x48, 0x2b, 0x31, 0xf9, 0xc8, 0x6d, 0xa3, 0x82, 0x20, 0x08, 0x82, 0x28,
  0x47, 0x44, 0x34, 0x04, 0x51, 0x10, 0x24, 0xdd, 0x34, 0x5c, 0xfe, 0x84,
  0x3d, 0x84, 0xe4, 0xaf, 0x84, 0xb4, 0x12, 0x93, 0x5f, 0xdc, 0x36, 0x2a,
  0x86, 0x61, 0x18, 0x88, 0x72, 0x50, 0x44, 0x43, 0x10, 0x05, 0x41, 0x55,
  0x41, 0x06, 0x62, 0x18, 0x86, 0x61, 0x18, 0xe8, 0x2a, 0xc3, 0x40, 0x0c,
  0x94, 0x15, 0x86, 0x22, 0x9a, 0x66, 0x18, 0x86, 0x81, 0x20, 0x88, 0x81,
  0xb6, 0x32, 0x00, 0x84, 0x43, 0x5d, 0x31, 0x06, 0x62, 0x18, 0x86, 0x81,
  0xbe, 0x42, 0x0c, 0xc4, 0x30, 0x50, 0x78, 0xd4, 0x70, 0xf9, 0x13, 0xf6,
  0x10, 0x92, 0xcf, 0x6d, 0x54, 0xb1, 0x12, 0x93, 0x5f, 0xdc, 0x36, 0x22,
  0x86, 0x61, 0x18, 0x0a, 0x31, 0x12, 0x0d, 0x41, 0xe4, 0x51, 0xc3, 0xe5,
  0x4f, 0xd8, 0x43, 0x48, 0x3e, 0xb7, 0x51, 0xc5, 0x4a, 0x4c, 0x3e, 0x72,
  0xdb, 0x88, 0x20, 0x08, 0x82, 0x28, 0x84, 0x49, 0x34, 0x04, 0x9d, 0xa5,
  0x18, 0x88, 0x61, 0x18, 0x28, 0xbd, 0x6d, 0xb8, 0xfc, 0x09, 0x7b, 0x08,
  0xc9, 0x5f, 0x09, 0xc9, 0xa1, 0x22, 0x81, 0x48, 0x23, 0xe7, 0x21, 0xa2,
  0x09, 0x21, 0x24, 0x24, 0x10, 0x44, 0x21, 0x1a, 0xa2, 0x59, 0x89, 0x3d,
  0x68, 0xb8, 0xfc, 0x09, 0x7b, 0x08, 0xc9, 0x5f, 0x09, 0x69, 0x43, 0x9a,
  0x01, 0x11, 0x04, 0x41, 0x14, 0xa5, 0x68, 0x08, 0x97, 0x70, 0xe8, 0x1d,
  0x08, 0x18, 0x46, 0x20, 0x86, 0x24, 0x90, 0x87, 0x11, 0x86, 0xe1, 0xc0,
  0xe0, 0x70, 0xa4, 0x69, 0x01, 0x30, 0x87, 0x9a, 0x7c, 0x69, 0x8a, 0x28,
  0x61, 0xf2, 0xbf, 0x08, 0x60, 0x08, 0xce, 0x69, 0xa4, 0x09, 0x68, 0x26,
  0x09, 0x35, 0xf3, 0x3c, 0xcf, 0xb3, 0x2c, 0xcb, 0x34, 0x41, 0x10, 0xc4,
  0x49, 0x87, 0x23, 0x4d, 0x0b, 0x80, 0x39, 0xd4, 0xe4, 0x17, 0x11, 0xc0,
  0x10, 0xdc, 0x86, 0x82, 0x9a, 0xec, 0x9b, 0xa4, 0x29, 0xa2, 0x84, 0xc9,
  0x67, 0x01, 0xe6, 0x59, 0x88, 0x88, 0x9d, 0x80, 0x89, 0x40, 0x01, 0x41,
  0x78, 0x72, 0x10, 0x73, 0x04, 0xa0, 0x00, 0x00, 0x13, 0x14, 0x72, 0xc0,
  0x87, 0x74, 0x60, 0x87, 0x36, 0x68, 0x87, 0x79, 0x68, 0x03, 0x72, 0xc0,
  0x87, 0x0d, 0xaf, 0x50, 0x0e, 0x6d, 0xd0, 0x0e, 0x7a, 0x50, 0x0e, 0x6d,
  0x00, 0x0f, 0x7a, 0x30, 0x07, 0x72, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d,
  0x90, 0x0e, 0x71, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d, 0x90, 0x0e, 0x78,
  0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d, 0x90, 0x0e, 0x71, 0x60, 0x07, 0x7a,
  0x30, 0x07, 0x72, 0xd0, 0x06, 0xe9, 0x30, 0x07, 0x72, 0xa0, 0x07, 0x73,
  0x20, 0x07, 0x6d, 0x90, 0x0e, 0x76, 0x40, 0x07, 0x7a, 0x60, 0x07, 0x74,
  0xd0, 0x06, 0xe6, 0x10, 0x07, 0x76, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d,
  0x60, 0x0e, 0x73, 0x20, 0x07, 0x7a, 0x30, 0x07, 0x72, 0xd0, 0x06, 0xe6,
  0x60, 0x07, 0x74, 0xa0, 0x07, 0x76, 0x40, 0x07, 0x6d, 0xe0, 0x0e, 0x78,
  0xa0, 0x07, 0x71, 0x60, 0x07, 0x7a, 0x30, 0x07, 0x72, 0xa0, 0x07, 0x76,
  0x40, 0x07, 0x43, 0x9e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x86, 0x3c, 0x06, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x0c, 0x79, 0x10, 0x20, 0x00, 0x02, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0xf2, 0x28, 0x40, 0x00, 0x08, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0xe4, 0x79, 0x80, 0x00, 0x08,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0xc8, 0x23, 0x01, 0x01,
  0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x90, 0xa7, 0x02,
  0x02, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x21, 0xcf,
  0x05, 0x04, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x43,
  0x9e, 0x0c, 0x08, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x86, 0x3c, 0x1b, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x0c, 0x79, 0x3a, 0x20, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x18, 0xf2, 0x7c, 0x40, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x30, 0xe4, 0x09, 0x03, 0x20, 0x00, 0x02, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0xf2, 0x90, 0x01, 0x10, 0x00, 0x03,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x79, 0xce, 0x00, 0x08,
  0x80, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x86, 0x3c, 0x69,
  0x00, 0x04, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x43,
  0x1e, 0x36, 0x00, 0x02, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x80, 0x21, 0xcf, 0x1b, 0x00, 0x01, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x40, 0x16, 0x08, 0x00, 0x00, 0x00, 0x16, 0x00, 0x00, 0x00,
  0x32, 0x1e, 0x98, 0x18, 0x19, 0x11, 0x4c, 0x90, 0x8c, 0x09, 0x26, 0x47,
  0xc6, 0x04, 0x43, 0x22, 0x4a, 0xa0, 0x1c, 0x8a, 0x61, 0x04, 0xa0, 0x30,
  0x0d, 0xca, 0xa0, 0x2c, 0x8a, 0xa0, 0x10, 0x4a, 0xa1, 0x3c, 0xa8, 0x28,
  0x89, 0x32, 0x28, 0x84, 0x11, 0x80, 0x22, 0x28, 0x85, 0x12, 0x28, 0x8a,
  0x02, 0xa1, 0xbd, 0x00, 0x01, 0x01, 0x01, 0x11, 0x28, 0x9f, 0x01, 0x20,
  0x7d, 0x2c, 0x4e, 0x23, 0x00, 0x00, 0x00, 0x8e, 0x03, 0x38, 0x8e, 0xe3,
  0x00, 0x8e, 0xe3, 0x00, 0x9e, 0x07, 0x00, 0x8e, 0xe3, 0x00, 0x1e, 0x80,
  0xee, 0x19, 0x00, 0x00, 0x79, 0x18, 0x00, 0x00, 0x8d, 0x00, 0x00, 0x00,
  0x1a, 0x03, 0x4c, 0x90, 0x46, 0x02, 0x13, 0xc4, 0x8e, 0x0c, 0x6f, 0xec,
  0xed, 0x4d, 0x0c, 0x24, 0xc6, 0xe5, 0xc6, 0x45, 0x66, 0x06, 0x06, 0xc7,
  0xe5, 0x06, 0x04, 0xc5, 0x26, 0xa7, 0xac, 0x86, 0xa6, 0x4c, 0x26, 0x07,
  0x26, 0x65, 0x43, 0x10, 0x4c, 0x10, 0x08, 0x69, 0x82, 0x40, 0x4c, 0x1b,
  0x84, 0x81, 0xa0, 0x00, 0x37, 0x37, 0x41, 0x20, 0xa8, 0x0d, 0x83, 0x71,
  0x10, 0x13, 0x04, 0xa2, 0x9a, 0x20, 0xdc, 0x41, 0x1a, 0x10, 0x98, 0x20,
  0x10, 0xd6, 0x06, 0x24, 0x51, 0x96, 0x24, 0x19, 0x18, 0x60, 0x43, 0xd0,
  0x4c, 0x10, 0xf2, 0xe0, 0x0c, 0x36, 0x20, 0xc9, 0xb3, 0x24, 0xc3, 0x90,
  0x00, 0x13, 0x04, 0xe2, 0xda, 0x80, 0x0c, 0xcf, 0x92, 0x44, 0x43, 0x02,
  0x6c, 0x10, 0x20, 0x69, 0x03, 0x01, 0x00, 0xce, 0x34, 0x41, 0xd0, 0x03,
  0x34, 0xd8, 0x10, 0x54, 0x13, 0x04, 0x01, 0x20, 0xd1, 0x16, 0x96, 0xe6,
  0xc6, 0x65, 0xca, 0xea, 0x0b, 0xea, 0x6d, 0x2e, 0x8d, 0x2e, 0xed, 0xcd,
  0x6d, 0x82, 0x50, 0x74, 0x13, 0x84, 0xc2, 0xdb, 0x10, 0x24, 0x13, 0x84,
  0xe2, 0x9b, 0x20, 0x14, 0x60, 0xb0, 0x61, 0x49, 0x32, 0x6d, 0xe3, 0xba,
  0xa1, 0x4b, 0x3c, 0x80, 0x08, 0xd4, 0xd3, 0x54, 0x12, 0x55, 0xd2, 0x93,
  0xd3, 0x04, 0xa1, 0x08, 0x83, 0x09, 0x02, 0x81, 0x6d, 0x10, 0x22, 0x31,
  0xd8, 0xb0, 0x0c, 0x60, 0xa0, 0x79, 0x5c, 0x18, 0x0c, 0xdd, 0xe0, 0x8d,
  0xc1, 0x04, 0x81, 0xc8, 0x36, 0x04, 0xc3, 0x06, 0x21, 0x22, 0x36, 0x2c,
  0x65, 0x00, 0x06, 0x9a, 0x67, 0x06, 0x61, 0x30, 0x6c, 0x65, 0xe0, 0x9d,
  0x01, 0x0d, 0xa7, 0x27, 0xa9, 0xa6, 0x20, 0xa6, 0x0d, 0x4b, 0x94, 0x06,
  0x9a, 0xc7, 0x85, 0xc1, 0xb0, 0x45, 0xde, 0x19, 0x4c, 0x10, 0x08, 0x8d,
  0x08, 0x55, 0x11, 0xd6, 0xd0, 0xd3, 0x93, 0x14, 0xd1, 0x06, 0x21, 0x8a,
  0x36, 0x2c, 0x6b, 0xc0, 0x06, 0x9a, 0xc7, 0x85, 0xc1, 0x10, 0x06, 0x6b,
  0xe0, 0xb5, 0xc1, 0x04, 0x81, 0xd8, 0x78, 0x50, 0x05, 0x39, 0x1d, 0x15,
  0x39, 0x51, 0x6d, 0x58, 0xde, 0x00, 0x0e, 0x34, 0x8f, 0x0b, 0x83, 0x61,
  0x7b, 0x03, 0xef, 0x0c, 0xd8, 0x4c, 0x59, 0x7d, 0x25, 0xb9, 0xcd, 0xd1,
  0x85, 0xb9, 0x8d, 0x95, 0x25, 0x11, 0x4d, 0x10, 0x0a, 0x31, 0x98, 0x20,
  0x14, 0x63, 0xb0, 0x41, 0x88, 0x86, 0x0d, 0xcb, 0x21, 0x07, 0x73, 0xe0,
  0x71, 0x74, 0x30, 0xd0, 0xc1, 0xe1, 0xd5, 0x01, 0x9d, 0x29, 0xab, 0x2f,
  0x28, 0xb9, 0xb4, 0xb6, 0x34, 0xba, 0x34, 0xbb, 0xb2, 0x24, 0xa2, 0x09,
  0x42, 0x41, 0x06, 0x1b, 0x16, 0xe2, 0x0e, 0xe6, 0x00, 0x0f, 0x38, 0x3a,
  0x18, 0xe8, 0xe0, 0xa0, 0x03, 0x60, 0x03, 0xf2, 0x91, 0x01, 0x1a, 0xa8,
  0x81, 0x1b, 0xc4, 0x81, 0x1d, 0xe4, 0x01, 0x93, 0x29, 0xab, 0x2f, 0xaa,
  0x30, 0xb9, 0xb3, 0x32, 0xba, 0x09, 0x42, 0x51, 0x06, 0x13, 0x04, 0x82,
  0xdb, 0x20, 0x44, 0x7d, 0xb0, 0x61, 0x49, 0xf6, 0x40, 0xe3, 0x03, 0xce,
  0x1b, 0xba, 0xc4, 0xf3, 0x83, 0x0d, 0xc1, 0x1f, 0x6c, 0x18, 0xf4, 0x00,
  0x14, 0x80, 0x09, 0xc2, 0x1e, 0x98, 0xc1, 0x06, 0x21, 0x11, 0x85, 0x0d,
  0xc5, 0x85, 0x85, 0x02, 0x35, 0x0a, 0x55, 0xd8, 0xd8, 0xec, 0xda, 0x5c,
  0xd2, 0xc8, 0xca, 0xdc, 0xe8, 0xa6, 0x04, 0x41, 0x15, 0x32, 0x3c, 0x17,
  0xbb, 0x32, 0xb9, 0xb9, 0xb4, 0x37, 0xb7, 0x29, 0x01, 0xd1, 0x84, 0x0c,
  0xcf, 0xc5, 0x2e, 0x8c, 0xcd, 0xae, 0x4c, 0x6e, 0x4a, 0x40, 0xd4, 0x21,
  0xc3, 0x73, 0x99, 0x43, 0x0b, 0x23, 0x2b, 0x93, 0x6b, 0x7a, 0x23, 0x2b,
  0x63, 0x9b, 0x12, 0x1c, 0x65, 0xc8, 0xf0, 0x5c, 0xe4, 0xca, 0xe6, 0xde,
  0xea, 0xe4, 0xc6, 0xca, 0xe6, 0xa6, 0x04, 0x53, 0x1d, 0x32, 0x3c, 0x17,
  0xbb, 0xb4, 0xb2, 0xbb, 0x24, 0xb2, 0x29, 0xba, 0x30, 0xba, 0xb2, 0x29,
  0x41, 0x55, 0x87, 0x0c, 0xcf, 0xa5, 0xcc, 0x8d, 0x4e, 0x2e, 0x0f, 0xea,
  0x2d, 0xcd, 0x8d, 0x6e, 0x6e, 0x4a, 0x30, 0x0a, 0x00, 0x00, 0x00, 0x00,
  0x79, 0x18, 0x00, 0x00, 0x4c, 0x00, 0x00, 0x00, 0x33, 0x08, 0x80, 0x1c,
  0xc4, 0xe1, 0x1c, 0x66, 0x14, 0x01, 0x3d, 0x88, 0x43, 0x38, 0x84, 0xc3,
  0x8c, 0x42, 0x80, 0x07, 0x79, 0x78, 0x07, 0x73, 0x98, 0x71, 0x0c, 0xe6,
  0x00, 0x0f, 0xed, 0x10, 0x0e, 0xf4, 0x80, 0x0e, 0x33, 0x0c, 0x42, 0x1e,
  0xc2, 0xc1, 0x1d, 0xce, 0xa1, 0x1c, 0x66, 0x30, 0x05, 0x3d, 0x88, 0x43,
  0x38, 0x84, 0x83, 0x1b, 0xcc, 0x03, 0x3d, 0xc8, 0x43, 0x3d, 0x8c, 0x03,
  0x3d, 0xcc, 0x78, 0x8c, 0x74, 0x70, 0x07, 0x7b, 0x08, 0x07, 0x79, 0x48,
  0x87, 0x70, 0x70, 0x07, 0x7a, 0x70, 0x03, 0x76, 0x78, 0x87, 0x70, 0x20,
  0x87, 0x19, 0xcc, 0x11, 0x0e, 0xec, 0x90, 0x0e, 0xe1, 0x30, 0x0f, 0x6e,
  0x30, 0x0f, 0xe3, 0xf0, 0x0e, 0xf0, 0x50, 0x0e, 0x33, 0x10, 0xc4, 0x1d,
  0xde, 0x21, 0x1c, 0xd8, 0x21, 0x1d, 0xc2, 0x61, 0x1e, 0x66, 0x30, 0x89,
  0x3b, 0xbc, 0x83, 0x3b, 0xd0, 0x43, 0x39, 0xb4, 0x03, 0x3c, 0xbc, 0x83,
  0x3c, 0x84, 0x03, 0x3b, 0xcc, 0xf0, 0x14, 0x76, 0x60, 0x07, 0x7b, 0x68,
  0x07, 0x37, 0x68, 0x87, 0x72, 0x68, 0x07, 0x37, 0x80, 0x87, 0x70, 0x90,
  0x87, 0x70, 0x60, 0x07, 0x76, 0x28, 0x07, 0x76, 0xf8, 0x05, 0x76, 0x78,
  0x87, 0x77, 0x80, 0x87, 0x5f, 0x08, 0x87, 0x71, 0x18, 0x87, 0x72, 0x98,
  0x87, 0x79, 0x98, 0x81, 0x2c, 0xee, 0xf0, 0x0e, 0xee, 0xe0, 0x0e, 0xf5,
  0xc0, 0x0e, 0xec, 0x30, 0x03, 0x62, 0xc8, 0xa1, 0x1c, 0xe4, 0xa1, 0x1c,
  0xcc, 0xa1, 0x1c, 0xe4, 0xa1, 0x1c, 0xdc, 0x61, 0x1c, 0xca, 0x21, 0x1c,
  0xc4, 0x81, 0x1d, 0xca, 0x61, 0x06, 0xd6, 0x90, 0x43, 0x39, 0xc8, 0x43,
  0x39, 0x98, 0x43, 0x39, 0xc8, 0x43, 0x39, 0xb8, 0xc3, 0x38, 0x94, 0x43,
  0x38, 0x88, 0x03, 0x3b, 0x94, 0xc3, 0x2f, 0xbc, 0x83, 0x3c, 0xfc, 0x82,
  0x3b, 0xd4, 0x03, 0x3b, 0xb0, 0xc3, 0x0c, 0xc4, 0x21, 0x07, 0x7c, 0x70,
  0x03, 0x7a, 0x28, 0x87, 0x76, 0x80, 0x87, 0x19, 0xd1, 0x43, 0x0e, 0xf8,
  0xe0, 0x06, 0xe4, 0x20, 0x0e, 0xe7, 0xe0, 0x06, 0xf6, 0x10, 0x0e, 0xf2,
  0xc0, 0x0e, 0xe1, 0x90, 0x0f, 0xef, 0x50, 0x0f, 0xf4, 0x00, 0x00, 0x00,
  0x71, 0x20, 0x00, 0x00, 0x4b, 0x00, 0x00, 0x00, 0x06, 0x41, 0x0d, 0x97,
  0xef, 0x3c, 0x3e, 0xd0, 0x34, 0xce, 0x04, 0x4c, 0x44, 0x08, 0x34, 0xc3,
  0x42, 0x18, 0x03, 0x34, 0x5c, 0xbe, 0xf3, 0xf8, 0x01, 0xd2, 0x00, 0x11,
  0xe6, 0x17, 0xb7, 0x6d, 0x0d, 0xdb, 0x70, 0xf9, 0xce, 0xe3, 0x0b, 0x01,
  0x55, 0x14, 0x44, 0x54, 0x3a, 0xc0, 0x50, 0x12, 0x06, 0x20, 0x60, 0x7e,
  0x71, 0xdb, 0xe6, 0xb0, 0x0d, 0x97, 0xef, 0x3c, 0xbe, 0x10, 0x50, 0x45,
  0x41, 0x44, 0xa5, 0x03, 0x0c, 0x25, 0x61, 0x00, 0x02, 0xe6, 0x23, 0xb7,
  0x6d, 0x11, 0xdd, 0x70, 0xf9, 0xce, 0xe3, 0x0b, 0x11, 0x01, 0x4c, 0x44,
  0x08, 0x34, 0xc3, 0x42, 0x7c, 0x91, 0xc3, 0x6c, 0x48, 0x33, 0x20, 0x8d,
  0x61, 0x04, 0xda, 0x70, 0xf9, 0xce, 0xe3, 0x0b, 0x11, 0x01, 0x4c, 0x44,
  0x08, 0x34, 0xc3, 0x42, 0x7c, 0x91, 0xc3, 0x84, 0x04, 0xf0, 0x98, 0x42,
  0x33, 0x5c, 0xbe, 0xf3, 0xf8, 0x03, 0x22, 0x09, 0x40, 0x34, 0xd8, 0x82,
  0x33, 0x5c, 0xbe, 0xf3, 0xf8, 0x83, 0x33, 0xd9, 0x7e, 0x71, 0xdb, 0x76,
  0xe0, 0x0c, 0x97, 0xef, 0x3c, 0xfe, 0xe0, 0x4c, 0xb7, 0x5f, 0xdc, 0xb6,
  0x05, 0x4c, 0xc3, 0xe5, 0x3b, 0x8f, 0xbf, 0x38, 0xc0, 0x20, 0x36, 0x0f,
  0x35, 0xf9, 0xc5, 0x6d, 0x9b, 0xc0, 0x34, 0x5c, 0xbe, 0xf3, 0xf8, 0x8b,
  0x03, 0x0c, 0x62, 0xf3, 0x50, 0x93, 0x8f, 0xdc, 0xb6, 0x19, 0x5c, 0xc3,
  0xe5, 0x3b, 0x8f, 0x1f, 0x01, 0xd6, 0x46, 0x15, 0x05, 0x11, 0x95, 0x0e,
  0x30, 0xf8, 0xc5, 0x6d, 0x5b, 0xc1, 0x35, 0x5c, 0xbe, 0xf3, 0xf8, 0x11,
  0x60, 0x6d, 0x54, 0x51, 0x10, 0x51, 0xe9, 0x00, 0x83, 0x8f, 0xdc, 0xb6,
  0x25, 0x40, 0xc3, 0xe5, 0x3b, 0x8f, 0x2f, 0x01, 0xcc, 0xb3, 0x10, 0x7e,
  0x71, 0xdb, 0x36, 0x50, 0x0d, 0x97, 0xef, 0x3c, 0xbe, 0x34, 0x39, 0x11,
  0x81, 0x52, 0xd3, 0x43, 0x4d, 0x7e, 0x71, 0xdb, 0xf6, 0x20, 0x0d, 0x97,
  0xef, 0x3c, 0xfe, 0x44, 0x44, 0x13, 0x02, 0x44, 0x98, 0x5f, 0xdc, 0xb6,
  0x21, 0x3c, 0xc3, 0xe5, 0x3b, 0x8f, 0x4f, 0x35, 0x40, 0x84, 0xf9, 0xc5,
  0x6d, 0x1b, 0x00, 0xc1, 0x00, 0x48, 0x03, 0x00, 0x61, 0x20, 0x00, 0x00,
  0x7b, 0x02, 0x00, 0x00, 0x13, 0x04, 0x41, 0x2c, 0x10, 0x00, 0x00, 0x00,
  0x3d, 0x00, 0x00, 0x00, 0xe4, 0x8c, 0x00, 0x50, 0x51, 0x1e, 0x44, 0x14,
  0x52, 0xb1, 0x15, 0x4e, 0x91, 0x06, 0x14, 0x47, 0xb1, 0x14, 0x4a, 0x61,
  0x06, 0x14, 0x49, 0x49, 0x12, 0x14, 0x46, 0x41, 0x06, 0x94, 0x24, 0x42,
  0x01, 0x06, 0x94, 0x24, 0x44, 0x81, 0x06, 0x14, 0x26, 0x42, 0x69, 0xcc,
  0x00, 0x14, 0xec, 0x40, 0xb9, 0x95, 0x4a, 0xb9, 0x14, 0xed, 0x40, 0xe1,
  0x15, 0x57, 0xd9, 0x95, 0xa5, 0x40, 0xc9, 0x94, 0xec, 0x40, 0xc1, 0x94,
  0x11, 0x0d, 0x63, 0x04, 0x20, 0x08, 0x82, 0xe8, 0x37, 0x46, 0xb0, 0xfb,
  0xa3, 0x4c, 0x82, 0xc1, 0x18, 0x01, 0x08, 0x82, 0x20, 0xfc, 0x0b, 0x63,
  0x04, 0x20, 0x08, 0x82, 0xe0, 0x37, 0x02, 0x30, 0x46, 0xd0, 0x9a, 0x73,
  0xce, 0xfb, 0xc2, 0x18, 0x41, 0xdf, 0xb7, 0x2c, 0xae, 0x8d, 0x11, 0x80,
  0x20, 0x08, 0xaa, 0x60, 0x30, 0x46, 0xa0, 0xe2, 0xf5, 0x29, 0x7b, 0x63,
  0x04, 0x2a, 0x5e, 0x9f, 0xb2, 0x2f, 0x8c, 0x11, 0x80, 0x20, 0x08, 0xe2,
  0xbf, 0x30, 0x46, 0x00, 0x82, 0x20, 0x08, 0x82, 0xc2, 0x18, 0x81, 0x79,
  0xaf, 0xab, 0xec, 0x8d, 0x11, 0xc4, 0x3c, 0xd8, 0xe7, 0xde, 0x18, 0x81,
  0xce, 0x9a, 0x73, 0x08, 0x06, 0x63, 0x04, 0xef, 0x9e, 0x96, 0xf7, 0x37,
  0x46, 0xe0, 0xf6, 0xb1, 0x68, 0x7b, 0x63, 0x04, 0x20, 0x08, 0x82, 0x20,
  0x18, 0xcc, 0x00, 0x8c, 0x11, 0x80, 0x20, 0x08, 0xe2, 0x1f, 0xad, 0x73,
  0x08, 0x70, 0x50, 0xcd, 0x21, 0x64, 0x7a, 0x30, 0x87, 0x90, 0xd5, 0xc1,
  0x1c, 0x42, 0x1f, 0x58, 0x73, 0x08, 0x7c, 0xb0, 0x07, 0x73, 0x08, 0x19,
  0x1e, 0x90, 0x3b, 0x07, 0x71, 0x5d, 0x95, 0x37, 0x07, 0x21, 0x49, 0x95,
  0x37, 0x07, 0x51, 0x55, 0x55, 0x18, 0x00, 0x00, 0x23, 0x06, 0x08, 0x00,
  0x82, 0x60, 0xf0, 0x06, 0xb8, 0x00, 0x06, 0x83, 0x2c, 0xfc, 0xc1, 0x88,
  0x01, 0x02, 0x80, 0x20, 0x18, 0xbc, 0x41, 0x2e, 0x84, 0xc1, 0x80, 0x0b,
  0xa0, 0x30, 0x62, 0x80, 0x00, 0x20, 0x08, 0x06, 0x6f, 0xa0, 0x0b, 0x62,
  0x30, 0xd8, 0x42, 0x28, 0x8c, 0x18, 0x1c, 0x00, 0x08, 0x82, 0x01, 0x1b,
  0xf0, 0x42, 0x1b, 0x04, 0xc9, 0x88, 0x41, 0x02, 0x80, 0x20, 0x18, 0x20,
  0xeb, 0x30, 0x0b, 0xb9, 0x80, 0x0b, 0xad, 0xf0, 0x06, 0x23, 0x06, 0x09,
  0x00, 0x82, 0x60, 0x60, 0xb4, 0x03, 0x2d, 0xcc, 0x42, 0x2e, 0xb8, 0x02,
  0x1c, 0x8c, 0x18, 0x24, 0x00, 0x08, 0x82, 0x81, 0xe1, 0x0e, 0xb5, 0x40,
  0x0b, 0xba, 0xc0, 0x0a, 0x71, 0x30, 0x62, 0x90, 0x00, 0x20, 0x08, 0x06,
  0xc6, 0x3b, 0xd8, 0x42, 0x2d, 0xec, 0xc2, 0x2b, 0xc8, 0xc1, 0x88, 0x41,
  0x02, 0x80, 0x20, 0x18, 0x18, 0xf0, 0x70, 0x0b, 0xb7, 0xc0, 0x0b, 0xb1,
  0x30, 0x07, 0x23, 0x06, 0x09, 0x00, 0x82, 0x60, 0x60, 0xc4, 0x03, 0x2e,
  0xe0, 0x42, 0x2f, 0xbc, 0x02, 0x1d, 0x8c, 0x18, 0x24, 0x00, 0x08, 0x82,
  0x81, 0x21, 0x0f, 0xb9, 0xc0, 0x0b, 0xbe, 0x30, 0x0b, 0x75, 0x30, 0x62,
  0x90, 0x00, 0x20, 0x08, 0x06, 0xc6, 0x3c, 0xe8, 0x42, 0x2f, 0xfc, 0x42,
  0x2c, 0xd8, 0xc1, 0x88, 0x41, 0x02, 0x80, 0x20, 0x18, 0x18, 0xf4, 0xb0,
  0x0b, 0xbe, 0x00, 0x0e, 0xb4, 0x70, 0x07, 0x23, 0x06, 0x09, 0x00, 0x82,
  0x60, 0x60, 0xd4, 0x03, 0x2f, 0xf4, 0x42, 0x38, 0xd8, 0x02, 0x1e, 0x8c,
  0x18, 0x24, 0x00, 0x08, 0x82, 0x81, 0x61, 0x0f, 0xbd, 0xe0, 0x0b, 0xe2,
  0x40, 0x0b, 0x79, 0x30, 0x62, 0x90, 0x00, 0x20, 0x08, 0x06, 0xc6, 0x3d,
  0xf8, 0xc2, 0x2f, 0x8c, 0xc3, 0x2d, 0xe8, 0xc1, 0x88, 0x41, 0x02, 0x80,
  0x20, 0x18, 0x18, 0xf8, 0xf0, 0x0b, 0xe7, 0x40, 0x0e, 0xb9, 0xb0, 0x07,
  0x23, 0x06, 0x09, 0x00, 0x82, 0x60, 0x60, 0xe4, 0x03, 0x38, 0xa0, 0x43,
  0x39, 0xdc, 0x02, 0x1f, 0x8c, 0x18, 0x24, 0x00, 0x08, 0x82, 0x81, 0xa1,
  0x0f, 0xe1, 0x90, 0x0e, 0xe6, 0xd0, 0x0b, 0x7d, 0x30, 0x62, 0x70, 0x00,
  0x20, 0x08, 0x06, 0x67, 0xe0, 0x0e, 0x76, 0x00, 0xc9, 0xc1, 0x68, 0x42,
  0x10, 0x8c, 0x18, 0x20, 0x00, 0x08, 0x82, 0xc1, 0xa3, 0x0f, 0x7b, 0x10,
  0xd0, 0x02, 0x2d, 0x8c, 0x18, 0x1c, 0x00, 0x08, 0x82, 0x01, 0x1b, 0xbc,
  0x03, 0x28, 0x04, 0xdb, 0x88, 0x81, 0x02, 0x80, 0x20, 0x18, 0x48, 0xfb,
  0x90, 0x07, 0xc1, 0xc4, 0x07, 0xbd, 0x60, 0x0e, 0xa3, 0x09, 0x01, 0x30,
  0x62, 0x80, 0x00, 0x20, 0x08, 0x06, 0x8f, 0x3f, 0xfc, 0x41, 0x80, 0x0b,
  0xb8, 0x30, 0x62, 0x70, 0x00, 0x20, 0x08, 0x06, 0x6c, 0x30, 0x0f, 0xa4,
  0x10, 0x88, 0xc1, 0x88, 0x81, 0x02, 0x80, 0x20, 0x18, 0x48, 0xff, 0xd0,
  0x07, 0xc5, 0xb5, 0x0a, 0xe1, 0xa0, 0x0e, 0xa3, 0x09, 0x01, 0x30, 0x62,
  0x80, 0x00, 0x20, 0x08, 0x06, 0x8f, 0x48, 0x8c, 0x42, 0xc0, 0x0b, 0xbc,
  0x30, 0x62, 0x70, 0x00, 0x20, 0x08, 0x06, 0x6c, 0x70, 0x0f, 0xa8, 0x10,
  0x88, 0xc1, 0x88, 0x81, 0x02, 0x80, 0x20, 0x18, 0x48, 0x23, 0x11, 0x0a,
  0xc9, 0x16, 0x0b, 0xe5, 0xe0, 0x0e, 0xa3, 0x09, 0x01, 0x30, 0x62, 0x80,
  0x00, 0x20, 0x08, 0x06, 0x8f, 0x49, 0x9c, 0x42, 0x00, 0x0e, 0xe0, 0x30,
  0x62, 0x70, 0x00, 0x20, 0x08, 0x06, 0x6c, 0xb0, 0x0f, 0xac, 0x10, 0xa8,
  0xc1, 0x88, 0x01, 0x02, 0x80, 0x20, 0x18, 0x3c, 0x28, 0x91, 0x0a, 0xb6,
  0x20, 0x0e, 0xe2, 0x30, 0x62, 0x70, 0x00, 0x20, 0x08, 0x06, 0x6c, 0xd0,
  0x0f, 0xae, 0x10, 0xac, 0xc1, 0x88, 0x01, 0x02, 0x80, 0x20, 0x18, 0x3c,
  0x2a, 0xb1, 0x0a, 0xba, 0x40, 0x0e, 0xe4, 0x30, 0x62, 0x70, 0x00, 0x20,
  0x08, 0x06, 0x6c, 0xf0, 0x0f, 0xb0, 0x10, 0xb4, 0xc1, 0x88, 0xc1, 0x02,
  0x80, 0x20, 0x18, 0x5c, 0x29, 0x01, 0x0b, 0x1d, 0xb7, 0x75, 0xdc, 0x36,
  0x62, 0x60, 0x00, 0x20, 0x08, 0x06, 0x59, 0x4a, 0xa4, 0x42, 0x60, 0xc1,
  0x27, 0x1f, 0x13, 0x3e, 0xf9, 0xd8, 0xf0, 0xc9, 0x67, 0xc4, 0x40, 0x01,
  0x40, 0x10, 0x0c, 0xaa, 0x97, 0x70, 0x05, 0x0b, 0x0d, 0xc4, 0x41, 0x1e,
  0xf6, 0x61, 0x34, 0x21, 0x00, 0x2c, 0x30, 0x03, 0xf9, 0x98, 0x60, 0x06,
  0xf2, 0x19, 0x31, 0x38, 0x00, 0x10, 0x04, 0x03, 0x32, 0x60, 0x89, 0x59,
  0x68, 0x83, 0x73, 0x18, 0x4d, 0x08, 0x80, 0xd1, 0x04, 0x21, 0x18, 0x4d,
  0x18, 0x84, 0x11, 0x83, 0x03, 0x00, 0x41, 0x30, 0x20, 0x03, 0x98, 0xb8,
  0x85, 0x38, 0x60, 0x87, 0xd1, 0x84, 0x00, 0x18, 0x4d, 0x10, 0x82, 0xd1,
  0x84, 0x41, 0x18, 0x31, 0x38, 0x00, 0x10, 0x04, 0x03, 0x32, 0xa0, 0x89,
  0x5d, 0xa8, 0x03, 0x70, 0x18, 0x4d, 0x08, 0x80, 0xd1, 0x04, 0x21, 0x18,
  0x4d, 0x18, 0x84, 0x11, 0x83, 0x03, 0x00, 0x41, 0x30, 0x60, 0x83, 0x9a,
  0x30, 0x07, 0x3e, 0x28, 0x85, 0x11, 0x83, 0x07, 0x00, 0x41, 0x30, 0xd8,
  0x7a, 0x42, 0x1c, 0xc6, 0x20, 0x78, 0x1c, 0x54, 0x40, 0x85, 0x98, 0x88,
  0x09, 0x74, 0x40, 0x85, 0xd1, 0x84, 0x00, 0x18, 0x4d, 0x10, 0x82, 0xd1,
  0x84, 0x41, 0x18, 0x4d, 0x20, 0x06, 0x0b, 0x74, 0x01, 0x3e, 0xc3, 0x11,
  0x01, 0x2f, 0x10, 0xdf, 0x88, 0x81, 0x01, 0x80, 0x20, 0x18, 0x74, 0x63,
  0xe1, 0x0f, 0xc1, 0x88, 0xc1, 0x01, 0x80, 0x20, 0x18, 0xb0, 0x41, 0x4f,
  0xb8, 0x03, 0x29, 0xb4, 0xc2, 0x88, 0xc1, 0x03, 0x80, 0x20, 0x18, 0x6c,
  0x65, 0xa1, 0x0e, 0x67, 0x10, 0x5c, 0x16, 0x2c, 0xc0, 0x42, 0x4e, 0xe4,
  0x04, 0x3c, 0xc0, 0xc2, 0x68, 0x42, 0x00, 0x8c, 0x26, 0x08, 0xc1, 0x88,
  0xc1, 0x03, 0x80, 0x20, 0x18, 0x6c, 0x68, 0xd1, 0x0e, 0x66, 0x40, 0x68,
  0xd9, 0x2c, 0xcc, 0x02, 0x4f, 0xf0, 0xc4, 0x3c, 0xcc, 0xc2, 0x68, 0x42,
  0x00, 0x8c, 0x26, 0x08, 0xc1, 0x68, 0xc2, 0x20, 0x8c, 0x26, 0x10, 0xc3,
  0x88, 0x81, 0x02, 0x80, 0x20, 0x18, 0x54, 0x70, 0xf1, 0x0e, 0x77, 0x90,
  0x0a, 0x28, 0xb1, 0x12, 0x3c, 0x31, 0x9a, 0x10, 0x00, 0xa3, 0x09, 0x42,
  0x30, 0x9a, 0x30, 0x08, 0x36, 0xf9, 0x02, 0x7c, 0x6c, 0xfa, 0x05, 0xf8,
  0xd8, 0x04, 0x0e, 0xf0, 0xb1, 0x41, 0x1c, 0xe4, 0x63, 0xc3, 0x38, 0xc8,
  0xc7, 0x06, 0x72, 0x90, 0xcf, 0x88, 0x81, 0x01, 0x80, 0x20, 0x18, 0x64,
  0x78, 0xe1, 0x0f, 0xc3, 0x88, 0x81, 0x01, 0x80, 0x20, 0x18, 0x64, 0x79,
  0xf1, 0x0f, 0xc3, 0x88, 0x81, 0x01, 0x80, 0x20, 0x18, 0x64, 0x7a, 0x01,
  0x12, 0x83, 0x0d, 0xe9, 0x20, 0x1f, 0x1b, 0xd4, 0x41, 0x3e, 0x36, 0xac,
  0x83, 0x7c, 0x46, 0x0c, 0x0c, 0x00, 0x04, 0xc1, 0x20, 0xf3, 0x8b, 0x92,
  0x18, 0x46, 0x0c, 0x0c, 0x00, 0x04, 0xc1, 0x20, 0xfb, 0x0b, 0x93, 0x18,
  0x46, 0x0c, 0x0c, 0x00, 0x04, 0xc1, 0x20, 0x03, 0x8d, 0x93, 0x18, 0x4c,
  0x0c, 0xe0, 0x41, 0x3e, 0x26, 0x06, 0xf1, 0x20, 0x1f, 0x13, 0x03, 0x79,
  0x90, 0xcf, 0x70, 0x44, 0x19, 0xd0, 0x03, 0xf1, 0x0d, 0x47, 0x94, 0x41,
  0x3d, 0x10, 0xdf, 0x70, 0x44, 0x19, 0xd8, 0x03, 0xf1, 0x4d, 0x37, 0x18,
  0xc9, 0x30, 0xdd, 0x60, 0x24, 0xc3, 0x74, 0x83, 0x91, 0x0c, 0x86, 0x07,
  0xbc, 0x10, 0x1f, 0xc3, 0x03, 0x5e, 0x88, 0x8f, 0xe1, 0x01, 0x2f, 0xc4,
  0x67, 0xc4, 0x60, 0x01, 0x40, 0x10, 0x0c, 0x2e, 0xd7, 0xa8, 0x89, 0x41,
  0x08, 0x06, 0x21, 0x18, 0x31, 0x30, 0x00, 0x10, 0x04, 0x83, 0xcc, 0x35,
  0x5c, 0x22, 0xb0, 0xa0, 0x90, 0x8f, 0x09, 0x85, 0x7c, 0x6c, 0x28, 0xe4,
  0x33, 0x62, 0x70, 0x00, 0x20, 0x08, 0x06, 0x64, 0xd0, 0x1a, 0x34, 0xe1,
  0x0e, 0x38, 0x31, 0x9a, 0x10, 0x00, 0xa3, 0x09, 0x42, 0x30, 0x9a, 0x30,
  0x08, 0x76, 0x12, 0x43, 0x7c, 0x0c, 0x25, 0x86, 0xf8, 0x58, 0x4a, 0x0c,
  0xf1, 0x31, 0x39, 0x20, 0x09, 0xf9, 0x98, 0x1c, 0x94, 0x84, 0x7c, 0x4c,
  0x68, 0x09, 0xf8, 0x98, 0xe0, 0x12, 0xf0, 0x19, 0x31, 0x48, 0x00, 0x10,
  0x04, 0x83, 0x4f, 0x37, 0xf0, 0x42, 0x08, 0x84, 0xc0, 0x4e, 0x22, 0x88,
  0xcf, 0x88, 0x81, 0x01, 0x80, 0x20, 0x18, 0x64, 0xbf, 0xd1, 0x13, 0xc1,
  0x88, 0xc1, 0x02, 0x80, 0x20, 0x18, 0x5c, 0xe1, 0x81, 0x16, 0xfa, 0x90,
  0x0f, 0xf8, 0x60, 0x0b, 0xb5, 0x40, 0x0b, 0x16, 0xdc, 0x82, 0x7c, 0x4c,
  0xb8, 0x05, 0xf9, 0xd8, 0x70, 0x0b, 0xf2, 0x31, 0x7f, 0x18, 0xe2, 0x63,
  0xfe, 0x30, 0xc4, 0xc7, 0xfc, 0x61, 0x88, 0x8f, 0x05, 0xbc, 0x20, 0x1f,
  0x1b, 0x78, 0x41, 0x3e, 0x26, 0x04, 0xf1, 0x31, 0xc3, 0x17, 0xe4, 0x63,
  0x45, 0x38, 0xc8, 0xc7, 0x84, 0x20, 0x3e, 0x86, 0x8c, 0x83, 0x7c, 0x4c,
  0x19, 0x07, 0xf9, 0x98, 0x10, 0xc4, 0xc7, 0x98, 0x4a, 0x3e, 0x23, 0x06,
  0x08, 0x00, 0x82, 0x60, 0x90, 0x06, 0xea, 0x41, 0x17, 0x15, 0x12, 0x8c,
  0x18, 0x20, 0x00, 0x08, 0x82, 0x41, 0x1a, 0xac, 0x47, 0x5d, 0x4c, 0xe8,
  0x10, 0x98, 0x83, 0xc9, 0x67, 0xc4, 0x00, 0x01, 0x40, 0x10, 0x0c, 0xd2,
  0xa0, 0x3d, 0xee, 0x02, 0x43, 0x82, 0x11, 0x03, 0x04, 0x00, 0x41, 0x30,
  0x48, 0x03, 0xf7, 0xc0, 0x0b, 0x4b, 0x1d, 0x02, 0x83, 0x36, 0xf9, 0x8c,
  0x18, 0x20, 0x00, 0x08, 0x82, 0x41, 0x1a, 0xc0, 0x87, 0x5e, 0x6c, 0x48,
  0x30, 0x62, 0x80, 0x00, 0x20, 0x08, 0x06, 0x69, 0x10, 0x1f, 0x7b, 0x91,
  0xb1, 0x43, 0x30, 0x62, 0xb0, 0x00, 0x20, 0x08, 0x06, 0x97, 0x7e, 0x84,
  0xc6, 0x41, 0x04, 0x07, 0x11, 0x8c, 0x18, 0x18, 0x00, 0x08, 0x82, 0x41,
  0xa6, 0x1f, 0x7a, 0x11, 0x58, 0x90, 0xc8, 0xc7, 0x84, 0x43, 0x3e, 0x36,
  0x14, 0xf2, 0xb1, 0x96, 0x58, 0x09, 0xfa, 0x58, 0x4b, 0xb0, 0x04, 0x7d,
  0x46, 0x0c, 0x0e, 0x00, 0x04, 0xc1, 0x80, 0x0d, 0xf0, 0x23, 0x35, 0x7c,
  0x02, 0x2d, 0x46, 0x0c, 0x1e, 0x00, 0x04, 0xc1, 0x60, 0x03, 0x91, 0xd2,
  0xe0, 0x87, 0x60, 0x10, 0xd6, 0x62, 0x2d, 0xe8, 0x83, 0x3e, 0x56, 0x63,
  0x2d, 0x46, 0x13, 0x02, 0x60, 0xc4, 0xe0, 0x00, 0x40, 0x10, 0x0c, 0xd8,
  0x60, 0x3f, 0x58, 0x23, 0x2c, 0xd6, 0x62, 0xc4, 0xe0, 0x01, 0x40, 0x10,
  0x0c, 0xb6, 0x11, 0x41, 0x8d, 0x7e, 0x08, 0x8c, 0xc2, 0x2d, 0xdc, 0xe2,
  0x3e, 0xee, 0xc3, 0x35, 0xdc, 0x62, 0x34, 0x21, 0x00, 0x46, 0x0c, 0x16,
  0x00, 0x04, 0xc1, 0xe0, 0x3a, 0x11, 0xd7, 0xe0, 0x87, 0x7d, 0xd0, 0x87,
  0x45, 0x49, 0x46, 0x0c, 0x0c, 0x00, 0x04, 0xc1, 0x20, 0x3b, 0x91, 0xfd,
  0x08, 0x46, 0x0c, 0x0e, 0x00, 0x04, 0xc1, 0x20, 0x0c, 0x48, 0x84, 0x3c,
  0x82, 0xb8, 0xb0, 0x20, 0x90, 0x8f, 0xcd, 0x45, 0x10, 0x1f, 0x0b, 0x04,
  0xfa, 0x58, 0x50, 0x1a, 0xf2, 0x19, 0x31, 0x30, 0x00, 0x10, 0x04, 0x83,
  0xac, 0x45, 0x44, 0x24, 0x18, 0x31, 0x58, 0x00, 0x10, 0x04, 0x83, 0xeb,
  0x45, 0x6c, 0x83, 0x24, 0x46, 0x42, 0x24, 0xf0, 0xe0, 0x0e, 0xec, 0x60,
  0xc4, 0xc0, 0x00, 0x40, 0x10, 0x0c, 0xb2, 0x17, 0x19, 0x91, 0x60, 0xc4,
  0xe0, 0x00, 0x40, 0x10, 0x0c, 0xc2, 0x80, 0x45, 0x5a, 0x23, 0x30, 0x0d,
  0x0b, 0x02, 0xf9, 0xd8, 0x5e, 0x04, 0xf1, 0xb1, 0x40, 0xa0, 0x8f, 0x05,
  0x87, 0x7c, 0x2c, 0xf0, 0x0b, 0xf8, 0x8c, 0x18, 0x18, 0x00, 0x08, 0x82,
  0x41, 0x66, 0x23, 0xb4, 0x11, 0x58, 0x00, 0x1a, 0xf0, 0xb1, 0xd1, 0x08,
  0xe8, 0x33, 0x62, 0xb0, 0x00, 0x20, 0x08, 0x06, 0x97, 0x8e, 0x84, 0x87,
  0xd7, 0x71, 0xaa, 0x90, 0x0a, 0xa8, 0x30, 0x62, 0x60, 0x00, 0x20, 0x08,
  0x06, 0x99, 0x8e, 0xbc, 0x48, 0x60, 0xf0, 0x00, 0x0f, 0xf2, 0xb1, 0x5a,
  0x80, 0x07, 0xf9, 0x58, 0x2d, 0xc4, 0x83, 0x7c, 0xac, 0x16, 0xe4, 0x41,
  0x3e, 0x86, 0x0b, 0x43, 0x7c, 0x0c, 0x17, 0x86, 0xf8, 0x18, 0x2e, 0x0c,
  0xf1, 0xb1, 0x01, 0x1f, 0xe4, 0x63, 0x43, 0x3e, 0xc8, 0xc7, 0x06, 0x7d,
  0x90, 0x8f, 0xf9, 0x02, 0x6e, 0xc0, 0xc7, 0x7c, 0x21, 0x37, 0xe0, 0x63,
  0xbe, 0xa0, 0x1b, 0xf0, 0xb1, 0x81, 0x1f, 0xe4, 0x63, 0x43, 0x3f, 0xc8,
  0xc7, 0x06, 0x7f, 0x90, 0x8f, 0x0d, 0xbf, 0x01, 0x1f, 0x1b, 0xc0, 0x03,
  0x3e, 0x36, 0x84, 0x07, 0x7c, 0x6c, 0x20, 0x09, 0xf9, 0xd8, 0x50, 0x12,
  0xf2, 0xb1, 0xc1, 0x24, 0xe4, 0x63, 0xe2, 0xe0, 0x0b, 0xf1, 0x31, 0x71,
  0xf0, 0x85, 0xf8, 0x98, 0x38, 0xf8, 0x42, 0x7c, 0x46, 0x0c, 0x16, 0x00,
  0x04, 0xc1, 0xe0, 0xaa, 0x13, 0xfe, 0x18, 0x84, 0x60, 0x10, 0x82, 0x11,
  0x03, 0x03, 0x00, 0x41, 0x30, 0xc8, 0xea, 0xa4, 0x3e, 0x02, 0x0b, 0x0a,
  0xf9, 0x98, 0x50, 0xc8, 0xc7, 0x86, 0x42, 0x3e, 0x23, 0x06, 0x0b, 0x00,
  0x82, 0x60, 0x70, 0xe9, 0x49, 0x88, 0xf8, 0x41, 0x1f, 0xf0, 0xc1, 0x38,
  0x88, 0x43, 0x38, 0x8c, 0x18, 0x18, 0x00, 0x08, 0x82, 0x41, 0xa6, 0x27,
  0x6f, 0x12, 0x8c, 0x18, 0x2c, 0x00, 0x08, 0x82, 0xc1, 0xc5, 0x27, 0x23,
  0x52, 0x0e, 0xe4, 0x30, 0x0e, 0x05, 0x31, 0x8c, 0x18, 0x18, 0x00, 0x08,
  0x82, 0x41, 0xc6, 0x27, 0x71, 0x12, 0x8c, 0x18, 0x2c, 0x00, 0x08, 0x82,
  0xc1, 0xe5, 0x27, 0x25, 0x22, 0x0a, 0xa1, 0x00, 0x0a, 0x87, 0x51, 0x8c,
  0x18, 0x18, 0x00, 0x08, 0x82, 0x41, 0xe6, 0x27, 0x73, 0x12, 0x18, 0x4d,
  0xa8, 0x87, 0x7c, 0x8c, 0x20, 0xe4, 0x63, 0x81, 0x20, 0x1f, 0x0b, 0xf8,
  0x03, 0x3e, 0xc6, 0x1e, 0x49, 0x7c, 0x46, 0x0c, 0x0c, 0x00, 0x04, 0xc1,
  0x20, 0x23, 0x15, 0x15, 0x09, 0x2c, 0xd0, 0x0f, 0xf9, 0x8c, 0x18, 0x18,
  0x00, 0x08, 0x82, 0x41, 0x66, 0x2a, 0x2d, 0x12, 0x58, 0x50, 0xc8, 0xc7,
  0x82, 0xf8, 0x80, 0x8f, 0xc9, 0xc7, 0x1b, 0xc4, 0x67, 0xc4, 0xc0, 0x00,
  0x40, 0x10, 0x0c, 0x32, 0x55, 0x81, 0x91, 0xc0, 0x02, 0x10, 0x91, 0xcf,
  0x88, 0x81, 0x01, 0x80, 0x20, 0x18, 0x64, 0xac, 0x32, 0x23, 0x81, 0x05,
  0x8b, 0x7c, 0x2c, 0xb8, 0x0f, 0xf8, 0x58, 0x70, 0xc8, 0xc7, 0xea, 0xa0,
  0x0e, 0xe4, 0x63, 0xc1, 0x88, 0xc0, 0xc7, 0x28, 0x4a, 0x3e, 0x16, 0x08,
  0xf2, 0xb1, 0xa0, 0x3f, 0xe0, 0x63, 0x41, 0x20, 0x1f, 0x0b, 0x62, 0x44,
  0x3e, 0x23, 0x06, 0x07, 0x00, 0x82, 0x60, 0x10, 0x06, 0xb3, 0x42, 0x23,
  0x2d, 0x12, 0x18, 0x12, 0xd0, 0xc7, 0x44, 0xa4, 0x8b, 0xcf, 0x88, 0x81,
  0x01, 0x80, 0x20, 0x18, 0x64, 0xba, 0x02, 0x26, 0x81, 0x05, 0x30, 0x22,
  0x9f, 0x11, 0x03, 0x03, 0x00, 0x41, 0x30, 0xc8, 0x78, 0x65, 0x4c, 0x02,
  0x33, 0x91, 0x2e, 0x3e, 0xe6, 0xe8, 0x88, 0x7c, 0x2c, 0x10, 0xe4, 0x63,
  0x01, 0x18, 0xc0, 0xc7, 0x54, 0x24, 0xa0, 0x8f, 0x4d, 0x7e, 0x20, 0x1f,
  0x63, 0x91, 0x39, 0x88, 0x8f, 0x21, 0x81, 0x7c, 0x2c, 0xa8, 0x03, 0xf8,
  0x98, 0x93, 0x17, 0xf2, 0xb1, 0xc0, 0x90, 0x8f, 0x05, 0x83, 0x7c, 0x2c,
  0x38, 0xe0, 0x63, 0xe5, 0xe0, 0x1a, 0xf2, 0xb1, 0x60, 0x16, 0xe4, 0x63,
  0x81, 0x1c, 0xc8, 0xc7, 0x02, 0x42, 0x3e, 0xf6, 0xad, 0x82, 0x7c, 0x0c,
  0x47, 0x40, 0x21, 0x3e, 0x46, 0x05, 0xf2, 0xb1, 0x40, 0x14, 0xe0, 0x63,
  0x4b, 0x20, 0x1f, 0x0b, 0x0a, 0xf8, 0xd8, 0x3b, 0xe4, 0x86, 0x7c, 0x2c,
  0xe8, 0x05, 0xf9, 0x58, 0xc0, 0x07, 0xf2, 0xb1, 0x80, 0x90, 0x8f, 0xa5,
  0x81, 0x2d, 0xc8, 0xc7, 0xc4, 0x64, 0x15, 0xe2, 0x63, 0x5e, 0x20, 0x1f,
  0x0b, 0x5a, 0x01, 0x3e, 0x56, 0x05, 0xf2, 0xb1, 0xa0, 0x80, 0x8f, 0xe5,
  0x03, 0x79, 0xc8, 0xc7, 0x82, 0x73, 0x90, 0x8f, 0x05, 0xa6, 0x20, 0x1f,
  0x0b, 0x08, 0xf9, 0x18, 0x38, 0xb0, 0x87, 0x7c, 0x2c, 0x08, 0x09, 0xf9,
  0x58, 0x38, 0xb4, 0x87, 0x7c, 0x2c, 0x18, 0x09, 0xf9, 0x98, 0x38, 0xb8,
  0x87, 0x7c, 0x2c, 0x28, 0x09, 0xf9, 0x58, 0x91, 0x1b, 0xf0, 0xb1, 0x00,
  0x81, 0x8f, 0x15, 0xba, 0x01, 0x1f, 0x0b, 0x28, 0xf8, 0x58, 0xb1, 0x1b,
  0xf0, 0xb1, 0x00, 0x0c, 0xe0, 0x33, 0x62, 0x90, 0x00, 0x20, 0x08, 0x06,
  0xca, 0xcc, 0xec, 0x4b, 0xc8, 0x84, 0x8c, 0xbd, 0x14, 0x23, 0x06, 0x09,
  0x00, 0x82, 0x60, 0xa0, 0xcc, 0xcc, 0xbe, 0x84, 0x4c, 0xc8, 0xcc, 0xcb,
  0x30, 0x62, 0x90, 0x00, 0x20, 0x08, 0x06, 0xca, 0xcc, 0xec, 0x4b, 0xc8,
  0x84, 0x4c, 0xbd, 0x04, 0x23, 0x06, 0x09, 0x00, 0x82, 0x60, 0xa0, 0xcc,
  0xcc, 0xbe, 0x84, 0x4c, 0xc8, 0xe0, 0x0b, 0x7b, 0x20, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00
};
