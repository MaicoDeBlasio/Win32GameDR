#if 0
;
; Note: shader requires additional functionality:
;       Resource descriptor heap indexing
;
;
; Input signature:
;
; Name                 Index   Mask Register SysValue  Format   Used
; -------------------- ----- ------ -------- -------- ------- ------
; SV_Position              0   xyzw        0      POS   float       
; POSITION                 0   xyzw        1     NONE   float   xy w
; POSITION                 1   xyz         2     NONE   float   xyz 
; NORMAL                   0   xyz         3     NONE   float   xyz 
; TEXCOORD                 0   xy          4     NONE   float   xy  
; TANGENT                  0   xyz         5     NONE   float       
; SV_InstanceID            0   x           6     NONE    uint   x   
;
;
; Output signature:
;
; Name                 Index   Mask Register SysValue  Format   Used
; -------------------- ----- ------ -------- -------- ------- ------
; SV_Target                0   xyzw        0   TARGET   float   xyzw
;
; shader debug name: Shaders\PDB\PixelShaderCubes.pdb
; shader hash: 4debfd3904ff2d58eb86617667a90dda
;
; Pipeline Runtime Information: 
;
; Pixel Shader
; DepthOutput=0
; SampleFrequency=0
;
;
; Input signature:
;
; Name                 Index             InterpMode DynIdx
; -------------------- ----- ---------------------- ------
; SV_Position              0          noperspective       
; POSITION                 0                 linear       
; POSITION                 1                 linear       
; NORMAL                   0                 linear       
; TEXCOORD                 0                 linear       
; TANGENT                  0                 linear       
; SV_InstanceID            0        nointerpolation       
;
; Output signature:
;
; Name                 Index             InterpMode DynIdx
; -------------------- ----- ---------------------- ------
; SV_Target                0                              
;
; Buffer Definitions:
;
; cbuffer frameCB
; {
;
;   struct hostlayout.frameCB
;   {
;
;       struct hostlayout.struct.FrameConstants
;       {
;
;           column_major float4x4 viewProj;           ; Offset:    0
;           column_major float4x4 invProj;            ; Offset:   64
;           column_major float4x4 invViewProj;        ; Offset:  128
;           column_major float4x4 viewProjTex;        ; Offset:  192
;           column_major float4x4 prevViewProjTex;    ; Offset:  256
;           float4 cameraPos;                         ; Offset:  320
;           float4 lightDiffuse;                      ; Offset:  336
;           float4 lightAmbient;                      ; Offset:  352
;           float3 lightDir;                          ; Offset:  368
;           uint frameCount;                          ; Offset:  380
;           uint tlasBufferSrvID;                     ; Offset:  384
;           uint instBufferSrvID;                     ; Offset:  388
;           uint prevFrameBufferSrvID;                ; Offset:  392
;       
;       } frameCB;                                    ; Offset:    0
;
;   
;   } frameCB;                                        ; Offset:    0 Size:   396
;
; }
;
;
; Resource Bindings:
;
; Name                                 Type  Format         Dim      ID      HLSL Bind  Count
; ------------------------------ ---------- ------- ----------- ------- -------------- ------
; frameCB                           cbuffer      NA          NA     CB0            cb0     1
; AnisoClamp                        sampler      NA          NA      S0             s0     1
; LinearClamp                       sampler      NA          NA      S1             s1     1
;
;
; ViewId state:
;
; Number of inputs: 25, outputs: 4
; Outputs dependent on ViewId: {  }
; Inputs contributing to computation of Outputs:
;   output 0 depends on inputs: { 4, 5, 7, 8, 9, 10, 12, 13, 14, 16, 17, 24 }
;   output 1 depends on inputs: { 4, 5, 7, 8, 9, 10, 12, 13, 14, 16, 17, 24 }
;   output 2 depends on inputs: { 4, 5, 7, 8, 9, 10, 12, 13, 14, 16, 17, 24 }
;
target datalayout = "e-m:e-p:32:32-i1:32-i8:32-i16:32-i32:32-i64:64-f16:32-f32:32-f64:64-n8:16:32:64"
target triple = "dxil-ms-dx"

%dx.types.Handle = type { i8* }
%dx.types.ResBind = type { i32, i32, i32, i8 }
%dx.types.ResourceProperties = type { i32, i32 }
%dx.types.ResRet.i32 = type { i32, i32, i32, i32, i32 }
%dx.types.CBufRet.f32 = type { float, float, float, float }
%dx.types.ResRet.f32 = type { float, float, float, float, i32 }
%hostlayout.frameCB = type { %hostlayout.struct.FrameConstants }
%hostlayout.struct.FrameConstants = type { [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], <4 x float>, <4 x float>, <4 x float>, <3 x float>, i32, i32, i32, i32 }
%struct.SamplerState = type { i32 }

define void @main() {
  %1 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 1, i32 1, i32 0, i8 3 }, i32 1, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %2 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 0, i32 0, i32 0, i8 3 }, i32 0, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %3 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 0, i32 0, i32 0, i8 2 }, i32 0, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %4 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %3, %dx.types.ResourceProperties { i32 13, i32 396 })  ; AnnotateHandle(res,props)  resource: CBuffer
  %5 = call i32 @dx.op.loadInput.i32(i32 4, i32 6, i32 0, i8 0, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %6 = call float @dx.op.loadInput.f32(i32 4, i32 4, i32 0, i8 0, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %7 = call float @dx.op.loadInput.f32(i32 4, i32 4, i32 0, i8 1, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %8 = call float @dx.op.loadInput.f32(i32 4, i32 3, i32 0, i8 0, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %9 = call float @dx.op.loadInput.f32(i32 4, i32 3, i32 0, i8 1, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %10 = call float @dx.op.loadInput.f32(i32 4, i32 3, i32 0, i8 2, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %11 = call float @dx.op.loadInput.f32(i32 4, i32 2, i32 0, i8 0, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %12 = call float @dx.op.loadInput.f32(i32 4, i32 2, i32 0, i8 1, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %13 = call float @dx.op.loadInput.f32(i32 4, i32 2, i32 0, i8 2, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %14 = call float @dx.op.loadInput.f32(i32 4, i32 1, i32 0, i8 0, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %15 = call float @dx.op.loadInput.f32(i32 4, i32 1, i32 0, i8 1, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %16 = call float @dx.op.loadInput.f32(i32 4, i32 1, i32 0, i8 3, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %17 = call %dx.types.Handle @dx.op.createHandleFromHeap(i32 218, i32 9, i1 false, i1 false)  ; CreateHandleFromHeap(index,samplerHeap,nonUniformIndex)
  %18 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %17, %dx.types.ResourceProperties { i32 524, i32 80 })  ; AnnotateHandle(res,props)  resource: StructuredBuffer<stride=80>
  %19 = call %dx.types.ResRet.i32 @dx.op.rawBufferLoad.i32(i32 139, %dx.types.Handle %18, i32 %5, i32 60, i8 1, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %20 = extractvalue %dx.types.ResRet.i32 %19, 0
  %21 = call %dx.types.Handle @dx.op.createHandleFromHeap(i32 218, i32 %20, i1 false, i1 false)  ; CreateHandleFromHeap(index,samplerHeap,nonUniformIndex)
  %22 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %21, %dx.types.ResourceProperties { i32 2, i32 777 })  ; AnnotateHandle(res,props)  resource: Texture2D<3xF32>
  %23 = call %dx.types.ResRet.i32 @dx.op.rawBufferLoad.i32(i32 139, %dx.types.Handle %18, i32 %5, i32 64, i8 1, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %24 = extractvalue %dx.types.ResRet.i32 %23, 0
  %25 = call %dx.types.Handle @dx.op.createHandleFromHeap(i32 218, i32 %24, i1 false, i1 false)  ; CreateHandleFromHeap(index,samplerHeap,nonUniformIndex)
  %26 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %25, %dx.types.ResourceProperties { i32 2, i32 777 })  ; AnnotateHandle(res,props)  resource: Texture2D<3xF32>
  %27 = call %dx.types.ResRet.i32 @dx.op.rawBufferLoad.i32(i32 139, %dx.types.Handle %18, i32 %5, i32 68, i8 1, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %28 = extractvalue %dx.types.ResRet.i32 %27, 0
  %29 = call %dx.types.Handle @dx.op.createHandleFromHeap(i32 218, i32 %28, i1 false, i1 false)  ; CreateHandleFromHeap(index,samplerHeap,nonUniformIndex)
  %30 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %29, %dx.types.ResourceProperties { i32 2, i32 777 })  ; AnnotateHandle(res,props)  resource: Texture2D<3xF32>
  %31 = call %dx.types.ResRet.i32 @dx.op.rawBufferLoad.i32(i32 139, %dx.types.Handle %18, i32 %5, i32 72, i8 1, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %32 = extractvalue %dx.types.ResRet.i32 %31, 0
  %33 = call %dx.types.Handle @dx.op.createHandleFromHeap(i32 218, i32 %32, i1 false, i1 false)  ; CreateHandleFromHeap(index,samplerHeap,nonUniformIndex)
  %34 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %33, %dx.types.ResourceProperties { i32 2, i32 1033 })  ; AnnotateHandle(res,props)  resource: Texture2D<4xF32>
  %35 = call %dx.types.Handle @dx.op.createHandleFromHeap(i32 218, i32 12, i1 false, i1 false)  ; CreateHandleFromHeap(index,samplerHeap,nonUniformIndex)
  %36 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %35, %dx.types.ResourceProperties { i32 2, i32 265 })  ; AnnotateHandle(res,props)  resource: Texture2D<F32>
  %37 = call %dx.types.Handle @dx.op.createHandleFromHeap(i32 218, i32 18, i1 false, i1 false)  ; CreateHandleFromHeap(index,samplerHeap,nonUniformIndex)
  %38 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %37, %dx.types.ResourceProperties { i32 2, i32 265 })  ; AnnotateHandle(res,props)  resource: Texture2D<F32>
  %39 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %4, i32 20)  ; CBufferLoadLegacy(handle,regIndex)
  %40 = extractvalue %dx.types.CBufRet.f32 %39, 0
  %41 = extractvalue %dx.types.CBufRet.f32 %39, 1
  %42 = extractvalue %dx.types.CBufRet.f32 %39, 2
  %43 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %4, i32 21)  ; CBufferLoadLegacy(handle,regIndex)
  %44 = extractvalue %dx.types.CBufRet.f32 %43, 0
  %45 = extractvalue %dx.types.CBufRet.f32 %43, 1
  %46 = extractvalue %dx.types.CBufRet.f32 %43, 2
  %47 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %4, i32 22)  ; CBufferLoadLegacy(handle,regIndex)
  %48 = extractvalue %dx.types.CBufRet.f32 %47, 0
  %49 = extractvalue %dx.types.CBufRet.f32 %47, 1
  %50 = extractvalue %dx.types.CBufRet.f32 %47, 2
  %51 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %2, %dx.types.ResourceProperties { i32 14, i32 0 })  ; AnnotateHandle(res,props)  resource: SamplerState
  %52 = call %dx.types.ResRet.f32 @dx.op.sample.f32(i32 60, %dx.types.Handle %22, %dx.types.Handle %51, float %6, float %7, float undef, float undef, i32 0, i32 0, i32 undef, float undef)  ; Sample(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,clamp)
  %53 = extractvalue %dx.types.ResRet.f32 %52, 0
  %54 = extractvalue %dx.types.ResRet.f32 %52, 1
  %55 = extractvalue %dx.types.ResRet.f32 %52, 2
  %56 = call %dx.types.ResRet.f32 @dx.op.sample.f32(i32 60, %dx.types.Handle %26, %dx.types.Handle %51, float %6, float %7, float undef, float undef, i32 0, i32 0, i32 undef, float undef)  ; Sample(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,clamp)
  %57 = extractvalue %dx.types.ResRet.f32 %56, 0
  %58 = extractvalue %dx.types.ResRet.f32 %56, 1
  %59 = extractvalue %dx.types.ResRet.f32 %56, 2
  %60 = call %dx.types.ResRet.f32 @dx.op.sample.f32(i32 60, %dx.types.Handle %30, %dx.types.Handle %51, float %6, float %7, float undef, float undef, i32 0, i32 0, i32 undef, float undef)  ; Sample(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,clamp)
  %61 = extractvalue %dx.types.ResRet.f32 %60, 0
  %62 = extractvalue %dx.types.ResRet.f32 %60, 1
  %63 = extractvalue %dx.types.ResRet.f32 %60, 2
  %64 = call %dx.types.ResRet.f32 @dx.op.sample.f32(i32 60, %dx.types.Handle %34, %dx.types.Handle %51, float %6, float %7, float undef, float undef, i32 0, i32 0, i32 undef, float undef)  ; Sample(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,clamp)
  %65 = extractvalue %dx.types.ResRet.f32 %64, 0
  %66 = extractvalue %dx.types.ResRet.f32 %64, 1
  %67 = extractvalue %dx.types.ResRet.f32 %64, 2
  %68 = extractvalue %dx.types.ResRet.f32 %64, 3
  %69 = fadd fast float %53, 0x3FAC28F5C0000000
  %70 = fadd fast float %54, 0x3FAC28F5C0000000
  %71 = fadd fast float %55, 0x3FAC28F5C0000000
  %72 = fmul fast float %69, 0x3FEE54EDE0000000
  %73 = fmul fast float %70, 0x3FEE54EDE0000000
  %74 = fmul fast float %71, 0x3FEE54EDE0000000
  %75 = call float @dx.op.unary.f32(i32 23, float %72)  ; Log(value)
  %76 = call float @dx.op.unary.f32(i32 23, float %73)  ; Log(value)
  %77 = call float @dx.op.unary.f32(i32 23, float %74)  ; Log(value)
  %78 = fmul fast float %75, 0x4003333340000000
  %79 = fmul fast float %76, 0x4003333340000000
  %80 = fmul fast float %77, 0x4003333340000000
  %81 = call float @dx.op.unary.f32(i32 21, float %78)  ; Exp(value)
  %82 = call float @dx.op.unary.f32(i32 21, float %79)  ; Exp(value)
  %83 = call float @dx.op.unary.f32(i32 21, float %80)  ; Exp(value)
  %84 = fmul fast float %53, 0x3FB3D07220000000
  %85 = fmul fast float %54, 0x3FB3D07220000000
  %86 = fmul fast float %55, 0x3FB3D07220000000
  %87 = fcmp fast olt float %53, 0x3FA4B5DCC0000000
  %88 = fcmp fast olt float %54, 0x3FA4B5DCC0000000
  %89 = fcmp fast olt float %55, 0x3FA4B5DCC0000000
  %90 = select i1 %87, float %84, float %81
  %91 = select i1 %88, float %85, float %82
  %92 = select i1 %89, float %86, float %83
  %93 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %18, i32 %5, i32 12, i8 15, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %94 = extractvalue %dx.types.ResRet.f32 %93, 0
  %95 = extractvalue %dx.types.ResRet.f32 %93, 1
  %96 = extractvalue %dx.types.ResRet.f32 %93, 2
  %97 = fmul fast float %94, %90
  %98 = fmul fast float %95, %91
  %99 = fmul fast float %96, %92
  %100 = fsub fast float %40, %11
  %101 = fsub fast float %41, %12
  %102 = fsub fast float %42, %13
  %103 = call float @dx.op.dot3.f32(i32 55, float %100, float %101, float %102, float %100, float %101, float %102)  ; Dot3(ax,ay,az,bx,by,bz)
  %104 = call float @dx.op.unary.f32(i32 25, float %103)  ; Rsqrt(value)
  %105 = fmul fast float %104, %100
  %106 = fmul fast float %104, %101
  %107 = fmul fast float %104, %102
  %108 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %4, i32 23)  ; CBufferLoadLegacy(handle,regIndex)
  %109 = extractvalue %dx.types.CBufRet.f32 %108, 0
  %110 = extractvalue %dx.types.CBufRet.f32 %108, 1
  %111 = extractvalue %dx.types.CBufRet.f32 %108, 2
  %112 = fsub fast float -0.000000e+00, %109
  %113 = fsub fast float -0.000000e+00, %110
  %114 = fsub fast float -0.000000e+00, %111
  %115 = call float @dx.op.unary.f32(i32 83, float %11)  ; DerivCoarseX(value)
  %116 = call float @dx.op.unary.f32(i32 83, float %12)  ; DerivCoarseX(value)
  %117 = call float @dx.op.unary.f32(i32 83, float %13)  ; DerivCoarseX(value)
  %118 = call float @dx.op.unary.f32(i32 84, float %11)  ; DerivCoarseY(value)
  %119 = call float @dx.op.unary.f32(i32 84, float %12)  ; DerivCoarseY(value)
  %120 = call float @dx.op.unary.f32(i32 84, float %13)  ; DerivCoarseY(value)
  %121 = call float @dx.op.unary.f32(i32 83, float %6)  ; DerivCoarseX(value)
  %122 = call float @dx.op.unary.f32(i32 83, float %7)  ; DerivCoarseX(value)
  %123 = call float @dx.op.unary.f32(i32 84, float %6)  ; DerivCoarseY(value)
  %124 = call float @dx.op.unary.f32(i32 84, float %7)  ; DerivCoarseY(value)
  %125 = fmul fast float %120, %116
  %126 = fmul fast float %119, %117
  %127 = fsub fast float %125, %126
  %128 = fmul fast float %118, %117
  %129 = fmul fast float %120, %115
  %130 = fsub fast float %128, %129
  %131 = fmul fast float %119, %115
  %132 = fmul fast float %118, %116
  %133 = fsub fast float %131, %132
  %134 = fmul fast float %133, %119
  %135 = fmul fast float %130, %120
  %136 = fsub fast float %134, %135
  %137 = fmul fast float %127, %120
  %138 = fmul fast float %133, %118
  %139 = fsub fast float %137, %138
  %140 = fmul fast float %130, %118
  %141 = fmul fast float %127, %119
  %142 = fsub fast float %140, %141
  %143 = fmul fast float %130, %117
  %144 = fmul fast float %133, %116
  %145 = fsub fast float %143, %144
  %146 = fmul fast float %133, %115
  %147 = fmul fast float %127, %117
  %148 = fsub fast float %146, %147
  %149 = fmul fast float %127, %116
  %150 = fmul fast float %130, %115
  %151 = fsub fast float %149, %150
  %152 = fmul fast float %136, %121
  %153 = call float @dx.op.tertiary.f32(i32 46, float %123, float %145, float %152)  ; FMad(a,b,c)
  %154 = fmul fast float %139, %121
  %155 = call float @dx.op.tertiary.f32(i32 46, float %123, float %148, float %154)  ; FMad(a,b,c)
  %156 = fmul fast float %142, %121
  %157 = call float @dx.op.tertiary.f32(i32 46, float %123, float %151, float %156)  ; FMad(a,b,c)
  %158 = fmul fast float %136, %122
  %159 = call float @dx.op.tertiary.f32(i32 46, float %124, float %145, float %158)  ; FMad(a,b,c)
  %160 = fmul fast float %139, %122
  %161 = call float @dx.op.tertiary.f32(i32 46, float %124, float %148, float %160)  ; FMad(a,b,c)
  %162 = fmul fast float %142, %122
  %163 = call float @dx.op.tertiary.f32(i32 46, float %124, float %151, float %162)  ; FMad(a,b,c)
  %164 = fmul fast float %153, %57
  %165 = call float @dx.op.tertiary.f32(i32 46, float %58, float %159, float %164)  ; FMad(a,b,c)
  %166 = call float @dx.op.tertiary.f32(i32 46, float %59, float %8, float %165)  ; FMad(a,b,c)
  %167 = fmul fast float %155, %57
  %168 = call float @dx.op.tertiary.f32(i32 46, float %58, float %161, float %167)  ; FMad(a,b,c)
  %169 = call float @dx.op.tertiary.f32(i32 46, float %59, float %9, float %168)  ; FMad(a,b,c)
  %170 = fmul fast float %157, %57
  %171 = call float @dx.op.tertiary.f32(i32 46, float %58, float %163, float %170)  ; FMad(a,b,c)
  %172 = call float @dx.op.tertiary.f32(i32 46, float %59, float %10, float %171)  ; FMad(a,b,c)
  %173 = fdiv fast float %14, %16
  %174 = fdiv fast float %15, %16
  %175 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1, %dx.types.ResourceProperties { i32 14, i32 0 })  ; AnnotateHandle(res,props)  resource: SamplerState
  %176 = call %dx.types.ResRet.f32 @dx.op.sample.f32(i32 60, %dx.types.Handle %36, %dx.types.Handle %175, float %173, float %174, float undef, float undef, i32 0, i32 0, i32 undef, float undef)  ; Sample(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,clamp)
  %177 = extractvalue %dx.types.ResRet.f32 %176, 0
  %178 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1, %dx.types.ResourceProperties { i32 14, i32 0 })  ; AnnotateHandle(res,props)  resource: SamplerState
  %179 = call %dx.types.ResRet.f32 @dx.op.sample.f32(i32 60, %dx.types.Handle %38, %dx.types.Handle %178, float %173, float %174, float undef, float undef, i32 0, i32 0, i32 undef, float undef)  ; Sample(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,clamp)
  %180 = extractvalue %dx.types.ResRet.f32 %179, 0
  %181 = call float @dx.op.dot3.f32(i32 55, float %166, float %169, float %172, float %105, float %106, float %107)  ; Dot3(ax,ay,az,bx,by,bz)
  %182 = call float @dx.op.unary.f32(i32 7, float %181)  ; Saturate(value)
  %183 = fmul fast float %66, %66
  %184 = fmul fast float %97, %67
  %185 = fmul fast float %98, %67
  %186 = fmul fast float %99, %67
  %187 = fsub fast float %97, %184
  %188 = fsub fast float %98, %185
  %189 = fsub fast float %99, %186
  %190 = fmul fast float %187, %65
  %191 = fmul fast float %188, %65
  %192 = fmul fast float %189, %65
  %193 = fadd fast float %97, 0xBFA47AE140000000
  %194 = fadd fast float %98, 0xBFA47AE140000000
  %195 = fadd fast float %99, 0xBFA47AE140000000
  %196 = fmul fast float %193, %67
  %197 = fmul fast float %194, %67
  %198 = fmul fast float %195, %67
  %199 = fadd fast float %196, 0x3FA47AE140000000
  %200 = fadd fast float %197, 0x3FA47AE140000000
  %201 = fadd fast float %198, 0x3FA47AE140000000
  %202 = fmul fast float %199, %65
  %203 = fmul fast float %200, %65
  %204 = fmul fast float %201, %65
  %205 = fsub fast float %105, %109
  %206 = fsub fast float %106, %110
  %207 = fsub fast float %107, %111
  %208 = call float @dx.op.dot3.f32(i32 55, float %205, float %206, float %207, float %205, float %206, float %207)  ; Dot3(ax,ay,az,bx,by,bz)
  %209 = call float @dx.op.unary.f32(i32 25, float %208)  ; Rsqrt(value)
  %210 = fmul fast float %209, %205
  %211 = fmul fast float %209, %206
  %212 = fmul fast float %209, %207
  %213 = call float @dx.op.dot3.f32(i32 55, float %166, float %169, float %172, float %112, float %113, float %114)  ; Dot3(ax,ay,az,bx,by,bz)
  %214 = call float @dx.op.unary.f32(i32 7, float %213)  ; Saturate(value)
  %215 = call float @dx.op.dot3.f32(i32 55, float %112, float %113, float %114, float %210, float %211, float %212)  ; Dot3(ax,ay,az,bx,by,bz)
  %216 = call float @dx.op.unary.f32(i32 7, float %215)  ; Saturate(value)
  %217 = call float @dx.op.dot3.f32(i32 55, float %166, float %169, float %172, float %210, float %211, float %212)  ; Dot3(ax,ay,az,bx,by,bz)
  %218 = call float @dx.op.unary.f32(i32 7, float %217)  ; Saturate(value)
  %219 = fmul fast float %66, 2.000000e+00
  %220 = fmul fast float %216, %216
  %221 = fmul fast float %220, %219
  %222 = fadd fast float %221, -5.000000e-01
  %223 = fsub fast float 1.000000e+00, %214
  %224 = call float @dx.op.unary.f32(i32 23, float %223)  ; Log(value)
  %225 = fmul fast float %224, 5.000000e+00
  %226 = call float @dx.op.unary.f32(i32 21, float %225)  ; Exp(value)
  %227 = fmul fast float %226, %222
  %228 = fadd fast float %227, 1.000000e+00
  %229 = fsub fast float 1.000000e+00, %182
  %230 = call float @dx.op.unary.f32(i32 23, float %229)  ; Log(value)
  %231 = fmul fast float %230, 5.000000e+00
  %232 = call float @dx.op.unary.f32(i32 21, float %231)  ; Exp(value)
  %233 = fmul fast float %232, %222
  %234 = fadd fast float %233, 1.000000e+00
  %235 = fmul fast float %234, %228
  %236 = fmul fast float %183, %183
  %237 = fadd fast float %236, -1.000000e+00
  %238 = fmul fast float %218, %218
  %239 = fmul fast float %238, %237
  %240 = fadd fast float %239, 1.000000e+00
  %241 = fmul fast float %240, %240
  %242 = fmul fast float %241, 0x400921FB60000000
  %243 = call float @dx.op.binary.f32(i32 35, float 0x3EB0C6F7A0000000, float %242)  ; FMax(a,b)
  %244 = fdiv fast float %236, %243
  %245 = fsub fast float 1.000000e+00, %216
  %246 = call float @dx.op.unary.f32(i32 23, float %245)  ; Log(value)
  %247 = fmul fast float %246, 5.000000e+00
  %248 = call float @dx.op.unary.f32(i32 21, float %247)  ; Exp(value)
  %249 = fsub fast float 1.000000e+00, %220
  %250 = fmul fast float %236, 2.500000e-01
  %251 = fmul fast float %250, %249
  %252 = fadd fast float %251, %220
  %253 = fdiv fast float 1.000000e+00, %252
  %254 = fmul fast float %235, %192
  %255 = fsub fast float 1.000000e+00, %204
  %256 = fmul fast float %248, %255
  %257 = fadd fast float %256, %204
  %258 = fmul fast float %244, %68
  %259 = fmul fast float %258, %253
  %260 = fmul fast float %259, %257
  %261 = fadd fast float %260, %254
  %262 = fmul fast float %180, %46
  %263 = fmul fast float %262, %214
  %264 = fmul fast float %263, %261
  %265 = fmul fast float %235, %191
  %266 = fsub fast float 1.000000e+00, %203
  %267 = fmul fast float %248, %266
  %268 = fadd fast float %267, %203
  %269 = fmul fast float %259, %268
  %270 = fadd fast float %269, %265
  %271 = fmul fast float %180, %45
  %272 = fmul fast float %271, %214
  %273 = fmul fast float %272, %270
  %274 = fmul fast float %235, %190
  %275 = fsub fast float 1.000000e+00, %202
  %276 = fmul fast float %248, %275
  %277 = fadd fast float %276, %202
  %278 = fmul fast float %259, %277
  %279 = fadd fast float %278, %274
  %280 = fmul fast float %180, %44
  %281 = fmul fast float %280, %214
  %282 = fmul fast float %281, %279
  %283 = fmul fast float %190, %48
  %284 = fmul fast float %283, %177
  %285 = fmul fast float %191, %49
  %286 = fmul fast float %285, %177
  %287 = fmul fast float %192, %50
  %288 = fmul fast float %287, %177
  %289 = fadd fast float %284, %61
  %290 = fadd fast float %289, %282
  %291 = fadd fast float %286, %62
  %292 = fadd fast float %291, %273
  %293 = fadd fast float %288, %63
  %294 = fadd fast float %293, %264
  call void @dx.op.storeOutput.f32(i32 5, i32 0, i32 0, i8 0, float %290)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 0, i32 0, i8 1, float %292)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 0, i32 0, i8 2, float %294)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 0, i32 0, i8 3, float 1.000000e+00)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  ret void
}

; Function Attrs: nounwind readnone
declare float @dx.op.loadInput.f32(i32, i32, i32, i8, i32) #0

; Function Attrs: nounwind readnone
declare i32 @dx.op.loadInput.i32(i32, i32, i32, i8, i32) #0

; Function Attrs: nounwind
declare void @dx.op.storeOutput.f32(i32, i32, i32, i8, float) #1

; Function Attrs: nounwind readnone
declare %dx.types.Handle @dx.op.createHandleFromHeap(i32, i32, i1, i1) #0

; Function Attrs: nounwind readonly
declare %dx.types.ResRet.i32 @dx.op.rawBufferLoad.i32(i32, %dx.types.Handle, i32, i32, i8, i32) #2

; Function Attrs: nounwind readonly
declare %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32, %dx.types.Handle, i32, i32, i8, i32) #2

; Function Attrs: nounwind readonly
declare %dx.types.ResRet.f32 @dx.op.sample.f32(i32, %dx.types.Handle, %dx.types.Handle, float, float, float, float, i32, i32, i32, float) #2

; Function Attrs: nounwind readnone
declare float @dx.op.dot3.f32(i32, float, float, float, float, float, float) #0

; Function Attrs: nounwind readnone
declare float @dx.op.unary.f32(i32, float) #0

; Function Attrs: nounwind readnone
declare float @dx.op.binary.f32(i32, float, float) #0

; Function Attrs: nounwind readonly
declare %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32, %dx.types.Handle, i32) #2

; Function Attrs: nounwind readnone
declare float @dx.op.tertiary.f32(i32, float, float, float) #0

; Function Attrs: nounwind readnone
declare %dx.types.Handle @dx.op.annotateHandle(i32, %dx.types.Handle, %dx.types.ResourceProperties) #0

; Function Attrs: nounwind readnone
declare %dx.types.Handle @dx.op.createHandleFromBinding(i32, %dx.types.ResBind, i32, i1) #0

attributes #0 = { nounwind readnone }
attributes #1 = { nounwind }
attributes #2 = { nounwind readonly }

!llvm.ident = !{!0}
!dx.version = !{!1}
!dx.valver = !{!1}
!dx.shaderModel = !{!2}
!dx.resources = !{!3}
!dx.viewIdState = !{!9}
!dx.entryPoints = !{!10}

!0 = !{!"dxcoob 1.7.2308.7 (69e54e290)"}
!1 = !{i32 1, i32 7}
!2 = !{!"ps", i32 6, i32 7}
!3 = !{null, null, !4, !6}
!4 = !{!5}
!5 = !{i32 0, %hostlayout.frameCB* undef, !"", i32 0, i32 0, i32 1, i32 396, null}
!6 = !{!7, !8}
!7 = !{i32 0, %struct.SamplerState* undef, !"", i32 0, i32 0, i32 1, i32 0, null}
!8 = !{i32 1, %struct.SamplerState* undef, !"", i32 0, i32 1, i32 1, i32 0, null}
!9 = !{[27 x i32] [i32 25, i32 4, i32 0, i32 0, i32 0, i32 0, i32 7, i32 7, i32 0, i32 7, i32 7, i32 7, i32 7, i32 0, i32 7, i32 7, i32 7, i32 0, i32 7, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7]}
!10 = !{void ()* @main, !"main", !11, !3, !29}
!11 = !{!12, !26, null}
!12 = !{!13, !15, !17, !20, !21, !23, !24}
!13 = !{i32 0, !"SV_Position", i8 9, i8 3, !14, i8 4, i32 1, i8 4, i32 0, i8 0, null}
!14 = !{i32 0}
!15 = !{i32 1, !"POSITION", i8 9, i8 0, !14, i8 2, i32 1, i8 4, i32 1, i8 0, !16}
!16 = !{i32 3, i32 11}
!17 = !{i32 2, !"POSITION", i8 9, i8 0, !18, i8 2, i32 1, i8 3, i32 2, i8 0, !19}
!18 = !{i32 1}
!19 = !{i32 3, i32 7}
!20 = !{i32 3, !"NORMAL", i8 9, i8 0, !14, i8 2, i32 1, i8 3, i32 3, i8 0, !19}
!21 = !{i32 4, !"TEXCOORD", i8 9, i8 0, !14, i8 2, i32 1, i8 2, i32 4, i8 0, !22}
!22 = !{i32 3, i32 3}
!23 = !{i32 5, !"TANGENT", i8 9, i8 0, !14, i8 2, i32 1, i8 3, i32 5, i8 0, null}
!24 = !{i32 6, !"SV_InstanceID", i8 5, i8 0, !14, i8 1, i32 1, i8 1, i32 6, i8 0, !25}
!25 = !{i32 3, i32 1}
!26 = !{!27}
!27 = !{i32 0, !"SV_Target", i8 9, i8 16, !14, i8 0, i32 1, i8 4, i32 0, i8 0, !28}
!28 = !{i32 3, i32 15}
!29 = !{i32 0, i64 1073741824}

#endif

const unsigned char g_PixelShaderCubes[] = {
  0x44, 0x58, 0x42, 0x43, 0xf4, 0xfc, 0xa6, 0xd7, 0xc7, 0xb4, 0xa8, 0x8b,
  0xb1, 0x1b, 0xaf, 0x2c, 0x18, 0x9e, 0x9a, 0x9d, 0x01, 0x00, 0x00, 0x00,
  0x44, 0x20, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00,
  0x50, 0x00, 0x00, 0x00, 0x7c, 0x01, 0x00, 0x00, 0xb8, 0x01, 0x00, 0x00,
  0x84, 0x03, 0x00, 0x00, 0x28, 0x0e, 0x00, 0x00, 0x58, 0x0e, 0x00, 0x00,
  0x74, 0x0e, 0x00, 0x00, 0x53, 0x46, 0x49, 0x30, 0x08, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x49, 0x53, 0x47, 0x31,
  0x24, 0x01, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0xe8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xf4, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0f, 0x0b, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf4, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x07, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0xfd, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x07, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x04, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x03, 0x03, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0d, 0x01, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x05, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x15, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00,
  0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x53, 0x56, 0x5f, 0x50,
  0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x00, 0x50, 0x4f, 0x53, 0x49,
  0x54, 0x49, 0x4f, 0x4e, 0x00, 0x4e, 0x4f, 0x52, 0x4d, 0x41, 0x4c, 0x00,
  0x54, 0x45, 0x58, 0x43, 0x4f, 0x4f, 0x52, 0x44, 0x00, 0x54, 0x41, 0x4e,
  0x47, 0x45, 0x4e, 0x54, 0x00, 0x53, 0x56, 0x5f, 0x49, 0x6e, 0x73, 0x74,
  0x61, 0x6e, 0x63, 0x65, 0x49, 0x44, 0x00, 0x00, 0x4f, 0x53, 0x47, 0x31,
  0x34, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x28, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x40, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x53, 0x56, 0x5f, 0x54,
  0x61, 0x72, 0x67, 0x65, 0x74, 0x00, 0x00, 0x00, 0x50, 0x53, 0x56, 0x30,
  0xc4, 0x01, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00,
  0x07, 0x01, 0x00, 0x07, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x18, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x50, 0x4f, 0x53,
  0x49, 0x54, 0x49, 0x4f, 0x4e, 0x00, 0x50, 0x4f, 0x53, 0x49, 0x54, 0x49,
  0x4f, 0x4e, 0x00, 0x4e, 0x4f, 0x52, 0x4d, 0x41, 0x4c, 0x00, 0x54, 0x45,
  0x58, 0x43, 0x4f, 0x4f, 0x52, 0x44, 0x00, 0x54, 0x41, 0x4e, 0x47, 0x45,
  0x4e, 0x54, 0x00, 0x53, 0x56, 0x5f, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e,
  0x63, 0x65, 0x49, 0x44, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x44, 0x03,
  0x03, 0x04, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x01, 0x44, 0x00, 0x03, 0x02, 0x00, 0x00, 0x0a, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x01, 0x02, 0x43, 0x00, 0x03, 0x02, 0x00, 0x00,
  0x13, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x03, 0x43, 0x00,
  0x03, 0x02, 0x00, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x04, 0x42, 0x00, 0x03, 0x02, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x05, 0x43, 0x00, 0x03, 0x02, 0x00, 0x00,
  0x2b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x06, 0x41, 0x00,
  0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x44, 0x10, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x07, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x07, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00,
  0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00,
  0x07, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x07, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x53, 0x54, 0x41, 0x54, 0x9c, 0x0a, 0x00, 0x00, 0x67, 0x00, 0x00, 0x00,
  0xa7, 0x02, 0x00, 0x00, 0x44, 0x58, 0x49, 0x4c, 0x07, 0x01, 0x00, 0x00,
  0x10, 0x00, 0x00, 0x00, 0x84, 0x0a, 0x00, 0x00, 0x42, 0x43, 0xc0, 0xde,
  0x21, 0x0c, 0x00, 0x00, 0x9e, 0x02, 0x00, 0x00, 0x0b, 0x82, 0x20, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x13, 0x00, 0x00, 0x00, 0x07, 0x81, 0x23, 0x91,
  0x41, 0xc8, 0x04, 0x49, 0x06, 0x10, 0x32, 0x39, 0x92, 0x01, 0x84, 0x0c,
  0x25, 0x05, 0x08, 0x19, 0x1e, 0x04, 0x8b, 0x62, 0x80, 0x18, 0x45, 0x02,
  0x42, 0x92, 0x0b, 0x42, 0xc4, 0x10, 0x32, 0x14, 0x38, 0x08, 0x18, 0x4b,
  0x0a, 0x32, 0x62, 0x88, 0x48, 0x90, 0x14, 0x20, 0x43, 0x46, 0x88, 0xa5,
  0x00, 0x19, 0x32, 0x42, 0xe4, 0x48, 0x0e, 0x90, 0x11, 0x23, 0xc4, 0x50,
  0x41, 0x51, 0x81, 0x8c, 0xe1, 0x83, 0xe5, 0x8a, 0x04, 0x31, 0x46, 0x06,
  0x51, 0x18, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x1b, 0x8c, 0xe0, 0xff,
  0xff, 0xff, 0xff, 0x07, 0x40, 0x02, 0xa8, 0x0d, 0x84, 0xf0, 0xff, 0xff,
  0xff, 0xff, 0x03, 0x20, 0x6d, 0x30, 0x86, 0xff, 0xff, 0xff, 0xff, 0x1f,
  0x00, 0x09, 0xa8, 0x00, 0x49, 0x18, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x13, 0x82, 0x60, 0x42, 0x20, 0x4c, 0x08, 0x06, 0x00, 0x00, 0x00, 0x00,
  0x89, 0x20, 0x00, 0x00, 0x5a, 0x00, 0x00, 0x00, 0x32, 0x22, 0x88, 0x09,
  0x20, 0x64, 0x85, 0x04, 0x13, 0x23, 0xa4, 0x84, 0x04, 0x13, 0x23, 0xe3,
  0x84, 0xa1, 0x90, 0x14, 0x12, 0x4c, 0x8c, 0x8c, 0x0b, 0x84, 0xc4, 0x4c,
  0x10, 0xd4, 0xc1, 0x08, 0x40, 0x09, 0x00, 0x0a, 0x66, 0x00, 0xe6, 0x08,
  0xc0, 0x60, 0x8e, 0x00, 0x29, 0xc6, 0x40, 0x10, 0x44, 0x41, 0x90, 0x51,
  0x0c, 0x82, 0x20, 0x88, 0x82, 0x20, 0xa4, 0x18, 0x00, 0x41, 0x10, 0xc5,
  0x40, 0x0a, 0x15, 0xf7, 0x0c, 0x97, 0x3f, 0x61, 0x0f, 0x21, 0xf9, 0x21,
  0xd0, 0x0c, 0x0b, 0x81, 0x02, 0x66, 0x8e, 0x20, 0x28, 0x45, 0x43, 0x10,
  0x8e, 0x43, 0xcf, 0x4d, 0xc3, 0xe5, 0x4f, 0xd8, 0x43, 0x48, 0xfe, 0x4a,
  0x48, 0x2b, 0x31, 0xf9, 0xc8, 0x6d, 0xa3, 0x82, 0x20, 0x08, 0x82, 0x28,
  0x47, 0x44, 0x34, 0x04, 0x51, 0x10, 0x24, 0xdd, 0x34, 0x5c, 0xfe, 0x84,
  0x3d, 0x84, 0xe4, 0xaf, 0x84, 0xb4, 0x12, 0x93, 0x5f, 0xdc, 0x36, 0x2a,
  0x86, 0x61, 0x18, 0x88, 0x72, 0x50, 0x44, 0x43, 0x10, 0x05, 0x41, 0x55,
  0x61, 0x28, 0xa2, 0x69, 0x86, 0x61, 0x18, 0x08, 0x82, 0x18, 0xe8, 0x2a,
  0xc8, 0x40, 0x0c, 0xc3, 0x30, 0x0c, 0x03, 0x65, 0x65, 0x18, 0x88, 0x81,
  0xb6, 0x42, 0x0c, 0xc4, 0x30, 0x50, 0x77, 0xd4, 0x70, 0xf9, 0x13, 0xf6,
  0x10, 0x92, 0xcf, 0x6d, 0x54, 0xb1, 0x12, 0x93, 0x5f, 0xdc, 0x36, 0x22,
  0x86, 0x61, 0x18, 0x0a, 0xf1, 0x11, 0x0d, 0x41, 0x60, 0x29, 0x06, 0x62,
  0x18, 0x06, 0x12, 0x6f, 0x1b, 0x2e, 0x7f, 0xc2, 0x1e, 0x42, 0xf2, 0x57,
  0x42, 0x72, 0xa8, 0x48, 0x20, 0xd2, 0xc8, 0x79, 0x88, 0x68, 0x42, 0x08,
  0x09, 0x09, 0x04, 0x51, 0x88, 0x86, 0x68, 0x48, 0x2a, 0x0f, 0x1a, 0x2e,
  0x7f, 0xc2, 0x1e, 0x42, 0xf2, 0x57, 0x42, 0xda, 0x90, 0x66, 0x40, 0x04,
  0x41, 0x10, 0x45, 0x29, 0x1a, 0xe2, 0x24, 0x1c, 0x42, 0x07, 0x02, 0x86,
  0x11, 0x88, 0x21, 0x09, 0xd6, 0x61, 0x84, 0x61, 0x38, 0x30, 0x38, 0x1c,
  0x69, 0x5a, 0x00, 0xcc, 0xa1, 0x26, 0x5f, 0x9a, 0x22, 0x4a, 0x98, 0xfc,
  0x2f, 0x02, 0x18, 0x82, 0x73, 0x1a, 0x69, 0x02, 0x9a, 0x49, 0x42, 0x0d,
  0xcb, 0xb2, 0x2c, 0xbb, 0xae, 0x6b, 0x4b, 0x10, 0x04, 0x71, 0xd2, 0xe1,
  0x48, 0xd3, 0x02, 0x60, 0x0e, 0x35, 0xf9, 0x45, 0x04, 0x30, 0x04, 0xb7,
  0xa1, 0xc0, 0xa5, 0xf7, 0x26, 0x69, 0x8a, 0x28, 0x61, 0xf2, 0x59, 0x80,
  0x79, 0x16, 0x22, 0x62, 0x27, 0x60, 0x22, 0x50, 0x40, 0x50, 0x9c, 0x1b,
  0xc4, 0x1c, 0x01, 0x28, 0x00, 0x00, 0x00, 0x00, 0x13, 0x14, 0x72, 0xc0,
  0x87, 0x74, 0x60, 0x87, 0x36, 0x68, 0x87, 0x79, 0x68, 0x03, 0x72, 0xc0,
  0x87, 0x0d, 0xaf, 0x50, 0x0e, 0x6d, 0xd0, 0x0e, 0x7a, 0x50, 0x0e, 0x6d,
  0x00, 0x0f, 0x7a, 0x30, 0x07, 0x72, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d,
  0x90, 0x0e, 0x71, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d, 0x90, 0x0e, 0x78,
  0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d, 0x90, 0x0e, 0x71, 0x60, 0x07, 0x7a,
  0x30, 0x07, 0x72, 0xd0, 0x06, 0xe9, 0x30, 0x07, 0x72, 0xa0, 0x07, 0x73,
  0x20, 0x07, 0x6d, 0x90, 0x0e, 0x76, 0x40, 0x07, 0x7a, 0x60, 0x07, 0x74,
  0xd0, 0x06, 0xe6, 0x10, 0x07, 0x76, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d,
  0x60, 0x0e, 0x73, 0x20, 0x07, 0x7a, 0x30, 0x07, 0x72, 0xd0, 0x06, 0xe6,
  0x60, 0x07, 0x74, 0xa0, 0x07, 0x76, 0x40, 0x07, 0x6d, 0xe0, 0x0e, 0x78,
  0xa0, 0x07, 0x71, 0x60, 0x07, 0x7a, 0x30, 0x07, 0x72, 0xa0, 0x07, 0x76,
  0x40, 0x07, 0x43, 0x9e, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x86, 0x3c, 0x06, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x0c, 0x79, 0x10, 0x20, 0x00, 0x02, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0xf2, 0x28, 0x40, 0x00, 0x08, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0xe4, 0x79, 0x80, 0x00, 0x08,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0xc8, 0x23, 0x01, 0x01,
  0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x90, 0xa7, 0x02,
  0x02, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x21, 0xcf,
  0x05, 0x04, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x43,
  0x9e, 0x0c, 0x08, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x86, 0x3c, 0x1b, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x0c, 0x79, 0x3a, 0x20, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x18, 0xf2, 0x80, 0x01, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x0c, 0x79, 0xc4, 0x00, 0x08, 0x80, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x86, 0x3c, 0x65, 0x00, 0x04, 0x40,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x43, 0x1e, 0x34, 0x00,
  0x02, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x2c, 0x10,
  0x21, 0x00, 0x00, 0x00, 0x32, 0x1e, 0x98, 0x18, 0x19, 0x11, 0x4c, 0x90,
  0x8c, 0x09, 0x26, 0x47, 0xc6, 0x04, 0x43, 0x22, 0x4a, 0xa0, 0x1c, 0x46,
  0x00, 0x8a, 0xa1, 0x30, 0x0d, 0x8a, 0xa0, 0x10, 0xca, 0xa0, 0x24, 0x0a,
  0x30, 0xa0, 0x00, 0x05, 0x0a, 0x70, 0xa0, 0x00, 0x09, 0x0a, 0xb0, 0xa0,
  0x40, 0x0b, 0x0a, 0xb8, 0xa0, 0xc0, 0x0b, 0x0a, 0xbf, 0xa0, 0x14, 0x0a,
  0xd0, 0xa0, 0x10, 0x0d, 0x0a, 0xd2, 0xa0, 0x2c, 0xca, 0xa3, 0xec, 0x05,
  0xca, 0x9a, 0xa0, 0x30, 0xa8, 0x28, 0x89, 0x32, 0x28, 0x84, 0x11, 0x80,
  0x22, 0x28, 0x85, 0x12, 0x28, 0x10, 0xa2, 0x0b, 0x10, 0x10, 0x10, 0x10,
  0x81, 0xde, 0x19, 0x00, 0x82, 0x67, 0x00, 0x48, 0x9e, 0x01, 0xa0, 0x79,
  0xac, 0x2d, 0x23, 0x00, 0x00, 0x00, 0x8e, 0x03, 0x38, 0x8e, 0xe3, 0x00,
  0x8e, 0xe3, 0x00, 0x8e, 0x03, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x72, 0x67,
  0x00, 0x00, 0x00, 0x00, 0x79, 0x18, 0x00, 0x00, 0x14, 0x01, 0x00, 0x00,
  0x1a, 0x03, 0x4c, 0x90, 0x46, 0x02, 0x13, 0xc4, 0x8e, 0x0c, 0x6f, 0xec,
  0xed, 0x4d, 0x0c, 0x24, 0xc6, 0xe5, 0xc6, 0x45, 0x66, 0x06, 0x06, 0xc7,
  0xe5, 0x06, 0x04, 0xc5, 0x26, 0xa7, 0xac, 0x86, 0xa6, 0x4c, 0x26, 0x07,
  0x26, 0x65, 0x43, 0x10, 0x4c, 0x10, 0x88, 0x67, 0x82, 0x40, 0x40, 0x1b,
  0x84, 0x81, 0x98, 0x20, 0x10, 0xd1, 0x06, 0xc1, 0x30, 0x28, 0xc0, 0xcd,
  0x4d, 0x10, 0x08, 0x69, 0xc3, 0x80, 0x24, 0xc4, 0x04, 0x01, 0x0e, 0xe8,
  0x80, 0x87, 0x99, 0x5c, 0x58, 0x5b, 0xd9, 0x90, 0xd0, 0x04, 0x81, 0x98,
  0x36, 0x20, 0xc6, 0xc2, 0x18, 0xc6, 0xd0, 0x00, 0x1b, 0x02, 0x67, 0x82,
  0x20, 0x07, 0x75, 0x40, 0x25, 0xc8, 0x2d, 0x6d, 0xee, 0x6d, 0x88, 0x2d,
  0xac, 0x0d, 0x6e, 0x03, 0x62, 0x40, 0x91, 0x61, 0x0c, 0x06, 0xc0, 0x85,
  0x29, 0xcd, 0xad, 0x2c, 0x4c, 0x6e, 0x88, 0x2d, 0xac, 0x0d, 0x6e, 0x03,
  0x32, 0x40, 0x93, 0x31, 0x0c, 0x06, 0xb0, 0x41, 0x90, 0xa8, 0x0d, 0x04,
  0x00, 0x3c, 0xd5, 0x04, 0xc1, 0x0d, 0xee, 0x80, 0x88, 0x5d, 0x5a, 0xd9,
  0x1d, 0x94, 0xdc, 0x9b, 0xda, 0x04, 0x81, 0xa0, 0x26, 0x08, 0x44, 0xb5,
  0x61, 0xd0, 0xb4, 0x6c, 0x82, 0x40, 0x58, 0x13, 0x04, 0xe2, 0xda, 0x80,
  0x24, 0x58, 0xb6, 0x71, 0x06, 0xd1, 0xf1, 0x48, 0x73, 0xb3, 0x83, 0x92,
  0x7b, 0x53, 0x9b, 0x20, 0x10, 0xd8, 0x06, 0x24, 0xf9, 0xb2, 0x8d, 0x03,
  0x03, 0xa2, 0xe3, 0x92, 0xe6, 0x66, 0x67, 0x95, 0x56, 0x76, 0x07, 0x25,
  0xf7, 0xa6, 0x36, 0x41, 0x20, 0xb2, 0x0d, 0x48, 0x22, 0x06, 0xd9, 0xc6,
  0x8d, 0x01, 0xd1, 0x71, 0xb1, 0x4b, 0x2b, 0xbb, 0x83, 0x92, 0x7b, 0x53,
  0xa3, 0x2a, 0xc3, 0x9b, 0x20, 0x10, 0xda, 0x06, 0x24, 0x29, 0x83, 0x6c,
  0xe3, 0xcc, 0x80, 0xe8, 0xf8, 0xc0, 0xc9, 0x95, 0xd9, 0x59, 0xa5, 0x95,
  0xdd, 0x41, 0xc9, 0xbd, 0xa9, 0x51, 0x95, 0xe1, 0x4d, 0x10, 0x88, 0x6d,
  0x03, 0x92, 0xa0, 0x41, 0xb6, 0x71, 0x69, 0x40, 0x74, 0x4c, 0xc6, 0xc2,
  0xda, 0xca, 0xe4, 0xc2, 0xa0, 0xde, 0xe6, 0x26, 0x08, 0x04, 0xb7, 0xc1,
  0x48, 0xd6, 0x80, 0x63, 0x03, 0xa2, 0x23, 0xc3, 0x96, 0x76, 0x86, 0x46,
  0x47, 0x94, 0x66, 0x66, 0x56, 0x37, 0x57, 0x36, 0x41, 0x20, 0xba, 0x0d,
  0x46, 0xe2, 0x06, 0xdc, 0x1b, 0x10, 0x1d, 0x19, 0xb6, 0xb4, 0x33, 0x34,
  0xba, 0xa0, 0x36, 0xb1, 0xb4, 0x32, 0x37, 0xba, 0x09, 0x02, 0xe1, 0x6d,
  0x30, 0x92, 0x38, 0xe0, 0xe4, 0x80, 0xe8, 0x88, 0xb0, 0xa5, 0x9d, 0xa1,
  0xd1, 0x11, 0xa5, 0xc9, 0x4d, 0x10, 0x88, 0x6f, 0x83, 0x91, 0xd0, 0x01,
  0x57, 0x07, 0x44, 0x47, 0xc5, 0x4c, 0x2e, 0xac, 0xad, 0x6c, 0xe8, 0xad,
  0xce, 0x8d, 0x6e, 0x82, 0x40, 0x80, 0xc1, 0x04, 0x81, 0x08, 0x83, 0x0d,
  0x46, 0x72, 0x07, 0x1c, 0x1e, 0x10, 0x79, 0xc0, 0x87, 0x8e, 0x2d, 0x6c,
  0x4e, 0xa8, 0xce, 0xcc, 0xac, 0x4c, 0x6e, 0x4a, 0xce, 0x2e, 0x89, 0x68,
  0x82, 0x40, 0x88, 0xc1, 0x06, 0x23, 0xd9, 0x03, 0x8e, 0x0f, 0x88, 0x3c,
  0xe0, 0x93, 0xe6, 0x36, 0x47, 0x27, 0x54, 0x67, 0x66, 0x56, 0x26, 0x37,
  0x25, 0x67, 0x97, 0x44, 0x34, 0x41, 0x20, 0xc6, 0x60, 0x83, 0x91, 0xf8,
  0x01, 0xf7, 0x07, 0x44, 0x1e, 0x90, 0x82, 0x93, 0x2b, 0xb3, 0x33, 0x92,
  0x0b, 0x6b, 0x2b, 0x13, 0xaa, 0x33, 0x33, 0x2b, 0x93, 0x9b, 0x92, 0xb3,
  0x4b, 0x22, 0x9a, 0x20, 0x10, 0x64, 0xb0, 0xc1, 0x48, 0x42, 0x81, 0x13,
  0x05, 0x22, 0x0f, 0x36, 0x38, 0x8d, 0x17, 0x06, 0x64, 0x70, 0x06, 0x6a,
  0xd0, 0x06, 0x70, 0x30, 0x07, 0x76, 0xa0, 0x07, 0x7d, 0x00, 0x0a, 0xa3,
  0x30, 0x41, 0x78, 0x83, 0x39, 0xd8, 0x40, 0x24, 0x0c, 0x67, 0x6c, 0x10,
  0x1a, 0x53, 0xd8, 0x50, 0x18, 0x17, 0x29, 0x94, 0xc2, 0x29, 0x4c, 0x10,
  0x04, 0x60, 0x03, 0xb0, 0x61, 0x30, 0x54, 0x41, 0x15, 0x36, 0x04, 0xab,
  0xb0, 0x61, 0x18, 0x52, 0x81, 0x15, 0x26, 0x08, 0x73, 0x60, 0x07, 0x1b,
  0x02, 0x57, 0x20, 0xd1, 0x16, 0x96, 0xe6, 0xc6, 0x65, 0xca, 0xea, 0x0b,
  0xea, 0x6d, 0x2e, 0x8d, 0x2e, 0xed, 0xcd, 0x6d, 0x82, 0x50, 0xa8, 0xc1,
  0x04, 0xa1, 0x58, 0x83, 0x0d, 0x81, 0x31, 0x41, 0x28, 0xd8, 0x60, 0x82,
  0x50, 0xb4, 0xc1, 0x86, 0xc5, 0x88, 0x05, 0x59, 0x98, 0x05, 0x5a, 0xa8,
  0x85, 0xa1, 0x16, 0x0c, 0x5b, 0x00, 0x88, 0x40, 0x3d, 0x4d, 0x25, 0x51,
  0x25, 0x3d, 0x39, 0x4d, 0x10, 0x0a, 0x37, 0x98, 0x20, 0x10, 0x65, 0xb0,
  0x41, 0xe0, 0x74, 0x61, 0xc3, 0x32, 0xe0, 0x82, 0x2c, 0xd8, 0x02, 0x2d,
  0xe4, 0xc2, 0x50, 0x0b, 0x83, 0x2d, 0xec, 0xc2, 0x86, 0x60, 0xd8, 0x20,
  0x70, 0xc4, 0x86, 0x25, 0xc3, 0x05, 0x59, 0xb0, 0x85, 0x5e, 0xc8, 0x85,
  0x61, 0x16, 0x32, 0x5b, 0xf0, 0x05, 0x1a, 0x4e, 0x4f, 0x52, 0x4d, 0x41,
  0x4c, 0x1b, 0x16, 0x0e, 0x1c, 0x64, 0xc1, 0x16, 0x68, 0x21, 0x17, 0x86,
  0x59, 0xe0, 0x6c, 0xc1, 0x17, 0x88, 0x50, 0x15, 0x61, 0x0d, 0x3d, 0x3d,
  0x49, 0x11, 0x6d, 0x10, 0x38, 0x6e, 0xc3, 0xa2, 0x89, 0x83, 0x2c, 0xd8,
  0x02, 0x2d, 0xe4, 0xc2, 0x90, 0x0b, 0x9a, 0x2d, 0x8c, 0x03, 0x0f, 0xaa,
  0x20, 0xa7, 0xa3, 0x22, 0x27, 0xaa, 0x0d, 0x4b, 0x1e, 0x94, 0x83, 0x2c,
  0xd8, 0x02, 0x2d, 0xe4, 0xc2, 0x30, 0x0b, 0x79, 0x60, 0x0b, 0x00, 0x9b,
  0x29, 0xab, 0xaf, 0x24, 0xb7, 0x39, 0xba, 0x30, 0xb7, 0xb1, 0xb2, 0x24,
  0xa2, 0x09, 0x42, 0xf1, 0x06, 0x13, 0x84, 0x02, 0x0e, 0x36, 0x08, 0xdc,
  0xb0, 0x61, 0x49, 0xce, 0x01, 0x1d, 0x6c, 0x81, 0x16, 0xd2, 0x61, 0x48,
  0x87, 0xc4, 0x16, 0xd4, 0x61, 0xc3, 0x71, 0x0b, 0xbc, 0xf0, 0x0b, 0xe1,
  0x40, 0x0e, 0xe6, 0xb0, 0x0e, 0x4c, 0xa6, 0xac, 0xbe, 0xa8, 0xc2, 0xe4,
  0xce, 0xca, 0xe8, 0x26, 0x08, 0x45, 0x1c, 0x4c, 0x10, 0x08, 0x33, 0xd8,
  0x20, 0x70, 0xef, 0xb0, 0x61, 0x31, 0xda, 0x41, 0x16, 0xdc, 0x81, 0x16,
  0x6c, 0x61, 0xa8, 0x05, 0xc3, 0x16, 0xe0, 0x61, 0x43, 0x10, 0x0f, 0x1b,
  0x06, 0x76, 0x90, 0x07, 0x60, 0x82, 0x40, 0x07, 0x72, 0xb0, 0x41, 0x30,
  0xe8, 0x61, 0x43, 0x91, 0x0a, 0xb0, 0x30, 0x0f, 0x56, 0x3d, 0xd0, 0x30,
  0x63, 0x7b, 0x0b, 0xa3, 0x9b, 0x9b, 0x20, 0x10, 0x67, 0xc0, 0x22, 0xcd,
  0x6d, 0x8e, 0x6e, 0x6e, 0x82, 0x40, 0xa0, 0x01, 0x8d, 0xb9, 0xb4, 0xb3,
  0x2f, 0x36, 0xb2, 0x09, 0x02, 0x91, 0x06, 0x34, 0xe6, 0xd2, 0xce, 0xbe,
  0xe6, 0xe8, 0x88, 0xd0, 0x95, 0xe1, 0x7d, 0xb1, 0xbd, 0x85, 0x91, 0x11,
  0xa1, 0x2b, 0xc3, 0xfb, 0x72, 0x7b, 0x93, 0x6b, 0xdb, 0xc0, 0xdc, 0x03,
  0x3e, 0xe4, 0x83, 0x3e, 0xec, 0x03, 0x3f, 0xf4, 0x83, 0xe6, 0x0f, 0x79,
  0xf0, 0x0f, 0x49, 0x15, 0x36, 0x36, 0xbb, 0x36, 0x97, 0x34, 0xb2, 0x32,
  0x37, 0xba, 0x29, 0x41, 0x50, 0x85, 0x0c, 0xcf, 0xc5, 0xae, 0x4c, 0x6e,
  0x2e, 0xed, 0xcd, 0x6d, 0x4a, 0x40, 0x34, 0x21, 0xc3, 0x73, 0xb1, 0x0b,
  0x63, 0xb3, 0x2b, 0x93, 0x9b, 0x12, 0x18, 0x75, 0xc8, 0xf0, 0x5c, 0xe6,
  0xd0, 0xc2, 0xc8, 0xca, 0xe4, 0x9a, 0xde, 0xc8, 0xca, 0xd8, 0xa6, 0x04,
  0x49, 0x19, 0x32, 0x3c, 0x17, 0xb9, 0xb2, 0xb9, 0xb7, 0x3a, 0xb9, 0xb1,
  0xb2, 0xb9, 0x29, 0x41, 0x55, 0x89, 0x0c, 0xcf, 0x85, 0x2e, 0x0f, 0xae,
  0x2c, 0xc8, 0xcd, 0xed, 0x8d, 0x2e, 0x8c, 0x2e, 0xed, 0xcd, 0x6d, 0x6e,
  0x8a, 0x70, 0x0a, 0xac, 0x50, 0x87, 0x0c, 0xcf, 0xc5, 0x2e, 0xad, 0xec,
  0x2e, 0x89, 0x6c, 0x8a, 0x2e, 0x8c, 0xae, 0x6c, 0x4a, 0xe0, 0x0a, 0x75,
  0xc8, 0xf0, 0x5c, 0xca, 0xdc, 0xe8, 0xe4, 0xf2, 0xa0, 0xde, 0xd2, 0xdc,
  0xe8, 0xe6, 0xa6, 0x04, 0xf5, 0xd0, 0x85, 0x0c, 0xcf, 0x65, 0xec, 0xad,
  0xce, 0x8d, 0xae, 0x4c, 0x6e, 0x6e, 0x4a, 0xf0, 0x0f, 0x00, 0x00, 0x00,
  0x79, 0x18, 0x00, 0x00, 0x4c, 0x00, 0x00, 0x00, 0x33, 0x08, 0x80, 0x1c,
  0xc4, 0xe1, 0x1c, 0x66, 0x14, 0x01, 0x3d, 0x88, 0x43, 0x38, 0x84, 0xc3,
  0x8c, 0x42, 0x80, 0x07, 0x79, 0x78, 0x07, 0x73, 0x98, 0x71, 0x0c, 0xe6,
  0x00, 0x0f, 0xed, 0x10, 0x0e, 0xf4, 0x80, 0x0e, 0x33, 0x0c, 0x42, 0x1e,
  0xc2, 0xc1, 0x1d, 0xce, 0xa1, 0x1c, 0x66, 0x30, 0x05, 0x3d, 0x88, 0x43,
  0x38, 0x84, 0x83, 0x1b, 0xcc, 0x03, 0x3d, 0xc8, 0x43, 0x3d, 0x8c, 0x03,
  0x3d, 0xcc, 0x78, 0x8c, 0x74, 0x70, 0x07, 0x7b, 0x08, 0x07, 0x79, 0x48,
  0x87, 0x70, 0x70, 0x07, 0x7a, 0x70, 0x03, 0x76, 0x78, 0x87, 0x70, 0x20,
  0x87, 0x19, 0xcc, 0x11, 0x0e, 0xec, 0x90, 0x0e, 0xe1, 0x30, 0x0f, 0x6e,
  0x30, 0x0f, 0xe3, 0xf0, 0x0e, 0xf0, 0x50, 0x0e, 0x33, 0x10, 0xc4, 0x1d,
  0xde, 0x21, 0x1c, 0xd8, 0x21, 0x1d, 0xc2, 0x61, 0x1e, 0x66, 0x30, 0x89,
  0x3b, 0xbc, 0x83, 0x3b, 0xd0, 0x43, 0x39, 0xb4, 0x03, 0x3c, 0xbc, 0x83,
  0x3c, 0x84, 0x03, 0x3b, 0xcc, 0xf0, 0x14, 0x76, 0x60, 0x07, 0x7b, 0x68,
  0x07, 0x37, 0x68, 0x87, 0x72, 0x68, 0x07, 0x37, 0x80, 0x87, 0x70, 0x90,
  0x87, 0x70, 0x60, 0x07, 0x76, 0x28, 0x07, 0x76, 0xf8, 0x05, 0x76, 0x78,
  0x87, 0x77, 0x80, 0x87, 0x5f, 0x08, 0x87, 0x71, 0x18, 0x87, 0x72, 0x98,
  0x87, 0x79, 0x98, 0x81, 0x2c, 0xee, 0xf0, 0x0e, 0xee, 0xe0, 0x0e, 0xf5,
  0xc0, 0x0e, 0xec, 0x30, 0x03, 0x62, 0xc8, 0xa1, 0x1c, 0xe4, 0xa1, 0x1c,
  0xcc, 0xa1, 0x1c, 0xe4, 0xa1, 0x1c, 0xdc, 0x61, 0x1c, 0xca, 0x21, 0x1c,
  0xc4, 0x81, 0x1d, 0xca, 0x61, 0x06, 0xd6, 0x90, 0x43, 0x39, 0xc8, 0x43,
  0x39, 0x98, 0x43, 0x39, 0xc8, 0x43, 0x39, 0xb8, 0xc3, 0x38, 0x94, 0x43,
  0x38, 0x88, 0x03, 0x3b, 0x94, 0xc3, 0x2f, 0xbc, 0x83, 0x3c, 0xfc, 0x82,
  0x3b, 0xd4, 0x03, 0x3b, 0xb0, 0xc3, 0x0c, 0xc4, 0x21, 0x07, 0x7c, 0x70,
  0x03, 0x7a, 0x28, 0x87, 0x76, 0x80, 0x87, 0x19, 0xd1, 0x43, 0x0e, 0xf8,
  0xe0, 0x06, 0xe4, 0x20, 0x0e, 0xe7, 0xe0, 0x06, 0xf6, 0x10, 0x0e, 0xf2,
  0xc0, 0x0e, 0xe1, 0x90, 0x0f, 0xef, 0x50, 0x0f, 0xf4, 0x00, 0x00, 0x00,
  0x71, 0x20, 0x00, 0x00, 0x3f, 0x00, 0x00, 0x00, 0xd6, 0x40, 0x0d, 0x97,
  0xef, 0x3c, 0x3e, 0xd0, 0x34, 0xce, 0x04, 0x4c, 0x44, 0x08, 0x34, 0xc3,
  0x42, 0x98, 0x02, 0x34, 0x5c, 0xbe, 0xf3, 0xf8, 0x01, 0xd2, 0x00, 0x11,
  0xe6, 0x17, 0xb7, 0x6d, 0x0b, 0xdb, 0x70, 0xf9, 0xce, 0xe3, 0x0b, 0x01,
  0x55, 0x14, 0x44, 0x54, 0x3a, 0xc0, 0x50, 0x12, 0x06, 0x20, 0x60, 0x7e,
  0x71, 0xdb, 0xe6, 0xd0, 0x0d, 0x97, 0xef, 0x3c, 0xbe, 0x10, 0x11, 0xc0,
  0x44, 0x84, 0x40, 0x33, 0x2c, 0xc4, 0x17, 0x39, 0xcc, 0x86, 0x34, 0x03,
  0xd2, 0x18, 0x46, 0xa0, 0x0d, 0x97, 0xef, 0x3c, 0xbe, 0x10, 0x11, 0xc0,
  0x44, 0x84, 0x40, 0x33, 0x2c, 0xc4, 0x17, 0x39, 0x4c, 0x48, 0x00, 0x8f,
  0x21, 0x38, 0xc3, 0xe5, 0x3b, 0x8f, 0x3f, 0x38, 0xd3, 0xed, 0x17, 0xb7,
  0x6d, 0x01, 0xd3, 0x70, 0xf9, 0xce, 0xe3, 0x2f, 0x0e, 0x30, 0x88, 0xcd,
  0x43, 0x4d, 0x7e, 0x71, 0xdb, 0x26, 0x30, 0x0d, 0x97, 0xef, 0x3c, 0xfe,
  0xe2, 0x00, 0x83, 0xd8, 0x3c, 0xd4, 0xe4, 0x23, 0xb7, 0x6d, 0x06, 0xd7,
  0x70, 0xf9, 0xce, 0xe3, 0x47, 0x80, 0xb5, 0x51, 0x45, 0x41, 0x44, 0xa5,
  0x03, 0x0c, 0x7e, 0x71, 0xdb, 0x56, 0x70, 0x0d, 0x97, 0xef, 0x3c, 0x7e,
  0x04, 0x58, 0x1b, 0x55, 0x14, 0x44, 0x54, 0x3a, 0xc0, 0xe0, 0x23, 0xb7,
  0x6d, 0x07, 0xd0, 0x70, 0xf9, 0xce, 0xe3, 0x4b, 0x00, 0xf3, 0x2c, 0x84,
  0x5f, 0xdc, 0xb6, 0x0d, 0x54, 0xc3, 0xe5, 0x3b, 0x8f, 0x2f, 0x4d, 0x4e,
  0x44, 0xa0, 0xd4, 0xf4, 0x50, 0x93, 0x5f, 0xdc, 0xb6, 0x31, 0x48, 0xc3,
  0xe5, 0x3b, 0x8f, 0x3f, 0x11, 0xd1, 0x84, 0x00, 0x11, 0xe6, 0x17, 0xb7,
  0x6d, 0x09, 0xcf, 0x70, 0xf9, 0xce, 0xe3, 0x53, 0x0d, 0x10, 0x61, 0x7e,
  0x71, 0xdb, 0x06, 0x40, 0x30, 0x00, 0xd2, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x49, 0x4c, 0x44, 0x4e, 0x28, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00,
  0x53, 0x68, 0x61, 0x64, 0x65, 0x72, 0x73, 0x5c, 0x50, 0x44, 0x42, 0x5c,
  0x50, 0x69, 0x78, 0x65, 0x6c, 0x53, 0x68, 0x61, 0x64, 0x65, 0x72, 0x43,
  0x75, 0x62, 0x65, 0x73, 0x2e, 0x70, 0x64, 0x62, 0x00, 0x00, 0x00, 0x00,
  0x48, 0x41, 0x53, 0x48, 0x14, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x4d, 0xeb, 0xfd, 0x39, 0x04, 0xff, 0x2d, 0x58, 0xeb, 0x86, 0x61, 0x76,
  0x67, 0xa9, 0x0d, 0xda, 0x44, 0x58, 0x49, 0x4c, 0xc8, 0x11, 0x00, 0x00,
  0x67, 0x00, 0x00, 0x00, 0x72, 0x04, 0x00, 0x00, 0x44, 0x58, 0x49, 0x4c,
  0x07, 0x01, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0xb0, 0x11, 0x00, 0x00,
  0x42, 0x43, 0xc0, 0xde, 0x21, 0x0c, 0x00, 0x00, 0x69, 0x04, 0x00, 0x00,
  0x0b, 0x82, 0x20, 0x00, 0x02, 0x00, 0x00, 0x00, 0x13, 0x00, 0x00, 0x00,
  0x07, 0x81, 0x23, 0x91, 0x41, 0xc8, 0x04, 0x49, 0x06, 0x10, 0x32, 0x39,
  0x92, 0x01, 0x84, 0x0c, 0x25, 0x05, 0x08, 0x19, 0x1e, 0x04, 0x8b, 0x62,
  0x80, 0x18, 0x45, 0x02, 0x42, 0x92, 0x0b, 0x42, 0xc4, 0x10, 0x32, 0x14,
  0x38, 0x08, 0x18, 0x4b, 0x0a, 0x32, 0x62, 0x88, 0x48, 0x90, 0x14, 0x20,
  0x43, 0x46, 0x88, 0xa5, 0x00, 0x19, 0x32, 0x42, 0xe4, 0x48, 0x0e, 0x90,
  0x11, 0x23, 0xc4, 0x50, 0x41, 0x51, 0x81, 0x8c, 0xe1, 0x83, 0xe5, 0x8a,
  0x04, 0x31, 0x46, 0x06, 0x51, 0x18, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00,
  0x1b, 0x8c, 0xe0, 0xff, 0xff, 0xff, 0xff, 0x07, 0x40, 0x02, 0xa8, 0x0d,
  0x84, 0xf0, 0xff, 0xff, 0xff, 0xff, 0x03, 0x20, 0x6d, 0x30, 0x86, 0xff,
  0xff, 0xff, 0xff, 0x1f, 0x00, 0x09, 0xa8, 0x00, 0x49, 0x18, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x13, 0x82, 0x60, 0x42, 0x20, 0x4c, 0x08, 0x06,
  0x00, 0x00, 0x00, 0x00, 0x89, 0x20, 0x00, 0x00, 0x5a, 0x00, 0x00, 0x00,
  0x32, 0x22, 0x88, 0x09, 0x20, 0x64, 0x85, 0x04, 0x13, 0x23, 0xa4, 0x84,
  0x04, 0x13, 0x23, 0xe3, 0x84, 0xa1, 0x90, 0x14, 0x12, 0x4c, 0x8c, 0x8c,
  0x0b, 0x84, 0xc4, 0x4c, 0x10, 0xd4, 0xc1, 0x08, 0x40, 0x09, 0x00, 0x0a,
  0x66, 0x00, 0xe6, 0x08, 0xc0, 0x60, 0x8e, 0x00, 0x29, 0xc6, 0x40, 0x10,
  0x44, 0x41, 0x90, 0x51, 0x0c, 0x82, 0x20, 0x88, 0x82, 0x20, 0xa4, 0x18,
  0x00, 0x41, 0x10, 0xc5, 0x40, 0x0a, 0x15, 0xf7, 0x0c, 0x97, 0x3f, 0x61,
  0x0f, 0x21, 0xf9, 0x21, 0xd0, 0x0c, 0x0b, 0x81, 0x02, 0x66, 0x8e, 0x20,
  0x28, 0x45, 0x43, 0x10, 0x8e, 0x43, 0xcf, 0x4d, 0xc3, 0xe5, 0x4f, 0xd8,
  0x43, 0x48, 0xfe, 0x4a, 0x48, 0x2b, 0x31, 0xf9, 0xc8, 0x6d, 0xa3, 0x82,
  0x20, 0x08, 0x82, 0x28, 0x47, 0x44, 0x34, 0x04, 0x51, 0x10, 0x24, 0xdd,
  0x34, 0x5c, 0xfe, 0x84, 0x3d, 0x84, 0xe4, 0xaf, 0x84, 0xb4, 0x12, 0x93,
  0x5f, 0xdc, 0x36, 0x2a, 0x86, 0x61, 0x18, 0x88, 0x72, 0x50, 0x44, 0x43,
  0x10, 0x05, 0x41, 0x55, 0x61, 0x28, 0xa2, 0x69, 0x86, 0x61, 0x18, 0x08,
  0x82, 0x18, 0xe8, 0x2a, 0xc8, 0x40, 0x0c, 0xc3, 0x30, 0x0c, 0x03, 0x65,
  0x65, 0x18, 0x88, 0x81, 0xb6, 0x42, 0x0c, 0xc4, 0x30, 0x50, 0x77, 0xd4,
  0x70, 0xf9, 0x13, 0xf6, 0x10, 0x92, 0xcf, 0x6d, 0x54, 0xb1, 0x12, 0x93,
  0x5f, 0xdc, 0x36, 0x22, 0x86, 0x61, 0x18, 0x0a, 0xf1, 0x11, 0x0d, 0x41,
  0x60, 0x29, 0x06, 0x62, 0x18, 0x06, 0x12, 0x6f, 0x1b, 0x2e, 0x7f, 0xc2,
  0x1e, 0x42, 0xf2, 0x57, 0x42, 0x72, 0xa8, 0x48, 0x20, 0xd2, 0xc8, 0x79,
  0x88, 0x68, 0x42, 0x08, 0x09, 0x09, 0x04, 0x51, 0x88, 0x86, 0x68, 0x48,
  0x2a, 0x0f, 0x1a, 0x2e, 0x7f, 0xc2, 0x1e, 0x42, 0xf2, 0x57, 0x42, 0xda,
  0x90, 0x66, 0x40, 0x04, 0x41, 0x10, 0x45, 0x29, 0x1a, 0xe2, 0x24, 0x1c,
  0x42, 0x07, 0x02, 0x86, 0x11, 0x88, 0x21, 0x09, 0xd6, 0x61, 0x84, 0x61,
  0x38, 0x30, 0x38, 0x1c, 0x69, 0x5a, 0x00, 0xcc, 0xa1, 0x26, 0x5f, 0x9a,
  0x22, 0x4a, 0x98, 0xfc, 0x2f, 0x02, 0x18, 0x82, 0x73, 0x1a, 0x69, 0x02,
  0x9a, 0x49, 0x42, 0x0d, 0xcb, 0xb2, 0x2c, 0xbb, 0xae, 0x6b, 0x4b, 0x10,
  0x04, 0x71, 0xd2, 0xe1, 0x48, 0xd3, 0x02, 0x60, 0x0e, 0x35, 0xf9, 0x45,
  0x04, 0x30, 0x04, 0xb7, 0xa1, 0xc0, 0xa5, 0xf7, 0x26, 0x69, 0x8a, 0x28,
  0x61, 0xf2, 0x59, 0x80, 0x79, 0x16, 0x22, 0x62, 0x27, 0x60, 0x22, 0x50,
  0x40, 0x50, 0x9c, 0x1b, 0xc4, 0x1c, 0x01, 0x28, 0x00, 0x00, 0x00, 0x00,
  0x13, 0x14, 0x72, 0xc0, 0x87, 0x74, 0x60, 0x87, 0x36, 0x68, 0x87, 0x79,
  0x68, 0x03, 0x72, 0xc0, 0x87, 0x0d, 0xaf, 0x50, 0x0e, 0x6d, 0xd0, 0x0e,
  0x7a, 0x50, 0x0e, 0x6d, 0x00, 0x0f, 0x7a, 0x30, 0x07, 0x72, 0xa0, 0x07,
  0x73, 0x20, 0x07, 0x6d, 0x90, 0x0e, 0x71, 0xa0, 0x07, 0x73, 0x20, 0x07,
  0x6d, 0x90, 0x0e, 0x78, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d, 0x90, 0x0e,
  0x71, 0x60, 0x07, 0x7a, 0x30, 0x07, 0x72, 0xd0, 0x06, 0xe9, 0x30, 0x07,
  0x72, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d, 0x90, 0x0e, 0x76, 0x40, 0x07,
  0x7a, 0x60, 0x07, 0x74, 0xd0, 0x06, 0xe6, 0x10, 0x07, 0x76, 0xa0, 0x07,
  0x73, 0x20, 0x07, 0x6d, 0x60, 0x0e, 0x73, 0x20, 0x07, 0x7a, 0x30, 0x07,
  0x72, 0xd0, 0x06, 0xe6, 0x60, 0x07, 0x74, 0xa0, 0x07, 0x76, 0x40, 0x07,
  0x6d, 0xe0, 0x0e, 0x78, 0xa0, 0x07, 0x71, 0x60, 0x07, 0x7a, 0x30, 0x07,
  0x72, 0xa0, 0x07, 0x76, 0x40, 0x07, 0x43, 0x9e, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x86, 0x3c, 0x06, 0x10, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x79, 0x10, 0x20,
  0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0xf2, 0x28,
  0x40, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0xe4,
  0x79, 0x80, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60,
  0xc8, 0x23, 0x01, 0x01, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xc0, 0x90, 0xa7, 0x02, 0x02, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x80, 0x21, 0xcf, 0x05, 0x04, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x43, 0x9e, 0x0c, 0x08, 0x80, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x86, 0x3c, 0x1b, 0x10, 0x00, 0x01, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x79, 0x3a, 0x20, 0x00, 0x02, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0xf2, 0x80, 0x01, 0x10, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x79, 0xc4, 0x00,
  0x08, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x86, 0x3c,
  0x65, 0x00, 0x04, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x43, 0x1e, 0x34, 0x00, 0x02, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x80, 0x2c, 0x10, 0x16, 0x00, 0x00, 0x00, 0x32, 0x1e, 0x98, 0x18,
  0x19, 0x11, 0x4c, 0x90, 0x8c, 0x09, 0x26, 0x47, 0xc6, 0x04, 0x43, 0x22,
  0x4a, 0xa0, 0x1c, 0x8a, 0x61, 0x04, 0xa0, 0x30, 0x0d, 0xca, 0xa0, 0x2c,
  0x8a, 0xa0, 0x10, 0x4a, 0xa1, 0x3c, 0xa8, 0x28, 0x89, 0x32, 0x28, 0x84,
  0x11, 0x80, 0x22, 0x28, 0x85, 0x12, 0x28, 0x10, 0xa2, 0x0b, 0x10, 0x10,
  0x10, 0x10, 0x81, 0xe4, 0x19, 0x00, 0x9a, 0xc7, 0xda, 0x32, 0x02, 0x00,
  0x00, 0xe0, 0x38, 0x80, 0xe3, 0x38, 0x0e, 0xe0, 0x38, 0x0e, 0xe0, 0x38,
  0x00, 0x00, 0x00, 0x00, 0xe0, 0x20, 0x78, 0x06, 0x00, 0x00, 0x00, 0x00,
  0x79, 0x18, 0x00, 0x00, 0x84, 0x00, 0x00, 0x00, 0x1a, 0x03, 0x4c, 0x90,
  0x46, 0x02, 0x13, 0xc4, 0x8e, 0x0c, 0x6f, 0xec, 0xed, 0x4d, 0x0c, 0x24,
  0xc6, 0xe5, 0xc6, 0x45, 0x66, 0x06, 0x06, 0xc7, 0xe5, 0x06, 0x04, 0xc5,
  0x26, 0xa7, 0xac, 0x86, 0xa6, 0x4c, 0x26, 0x07, 0x26, 0x65, 0x43, 0x10,
  0x4c, 0x10, 0x88, 0x67, 0x82, 0x40, 0x40, 0x1b, 0x84, 0x81, 0xa0, 0x00,
  0x37, 0x37, 0x41, 0x20, 0xa2, 0x0d, 0x83, 0x71, 0x10, 0x13, 0x04, 0x42,
  0x9a, 0x20, 0xc0, 0x41, 0x19, 0x10, 0x98, 0x20, 0x10, 0xd3, 0x06, 0x24,
  0x51, 0x96, 0x24, 0x19, 0x18, 0x60, 0x43, 0xd0, 0x4c, 0x10, 0xe4, 0x60,
  0x0c, 0x36, 0x20, 0xc9, 0xb3, 0x24, 0xc9, 0x90, 0x00, 0x1b, 0x90, 0xe1,
  0x59, 0x92, 0x61, 0x48, 0x80, 0x0d, 0x02, 0x14, 0x6d, 0x20, 0x00, 0xc0,
  0x91, 0x26, 0x08, 0x73, 0x40, 0x06, 0x1b, 0x02, 0x6a, 0x82, 0x20, 0x00,
  0x24, 0xda, 0xc2, 0xd2, 0xdc, 0xb8, 0x4c, 0x59, 0x7d, 0x41, 0xbd, 0xcd,
  0xa5, 0xd1, 0xa5, 0xbd, 0xb9, 0x4d, 0x10, 0x0a, 0x6d, 0x82, 0x50, 0x6c,
  0x1b, 0x82, 0x64, 0x82, 0x50, 0x70, 0x13, 0x84, 0xa2, 0xdb, 0xb0, 0x24,
  0x58, 0xa6, 0x6d, 0xdc, 0xc0, 0x25, 0x1d, 0x40, 0x04, 0xea, 0x69, 0x2a,
  0x89, 0x2a, 0xe9, 0xc9, 0x69, 0x82, 0x50, 0x78, 0x13, 0x04, 0x82, 0x9a,
  0x20, 0x10, 0xd5, 0x06, 0x21, 0x0c, 0xc4, 0x60, 0xc3, 0x32, 0x7c, 0x59,
  0xb7, 0x81, 0xc1, 0xc0, 0x0d, 0xdd, 0x18, 0x4c, 0x10, 0x08, 0x6b, 0x43,
  0x30, 0x6c, 0x10, 0xc2, 0x80, 0xd8, 0xb0, 0x94, 0xc1, 0x97, 0x75, 0x66,
  0x00, 0x06, 0x83, 0x56, 0x06, 0xdd, 0x19, 0xd0, 0x70, 0x7a, 0x92, 0x6a,
  0x0a, 0x62, 0xda, 0xb0, 0x84, 0x41, 0x1a, 0x64, 0xdd, 0x06, 0x06, 0x83,
  0x16, 0x06, 0xdd, 0x19, 0x4c, 0x10, 0x88, 0x8b, 0x08, 0x55, 0x11, 0xd6,
  0xd0, 0xd3, 0x93, 0x14, 0xd1, 0x06, 0x21, 0x0c, 0xc2, 0x60, 0xc3, 0xb2,
  0x06, 0x6c, 0x90, 0x75, 0x1b, 0x18, 0x0c, 0x60, 0xb0, 0x06, 0x5d, 0x1b,
  0x4c, 0x10, 0x08, 0x8c, 0x07, 0x55, 0x90, 0xd3, 0x51, 0x91, 0x13, 0xd5,
  0x86, 0xe5, 0x0d, 0xe0, 0x20, 0xeb, 0x36, 0x30, 0x18, 0xb4, 0x37, 0xe8,
  0x00, 0x36, 0x53, 0x56, 0x5f, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63,
  0x65, 0x49, 0x44, 0x13, 0x84, 0xe2, 0x9b, 0x20, 0x14, 0x60, 0xb0, 0x41,
  0x08, 0x83, 0x61, 0xc3, 0x72, 0xc8, 0xc1, 0x1c, 0x74, 0x1b, 0x1d, 0x0c,
  0x74, 0x70, 0x74, 0x75, 0xb0, 0xe1, 0xf0, 0xc8, 0x00, 0x0d, 0xd4, 0xc0,
  0x0d, 0xe2, 0xc0, 0x0e, 0x98, 0x4c, 0x59, 0x7d, 0x51, 0x85, 0xc9, 0x9d,
  0x95, 0xd1, 0x4d, 0x10, 0x8a, 0x30, 0x98, 0x20, 0x10, 0xd9, 0x06, 0x21,
  0x0c, 0xf4, 0x60, 0xc3, 0x92, 0xe0, 0x41, 0x96, 0x07, 0x5b, 0x37, 0x70,
  0x49, 0xb7, 0x07, 0x1b, 0x02, 0x3e, 0xd8, 0x30, 0xdc, 0x41, 0x1f, 0x00,
  0x13, 0x04, 0x3a, 0x10, 0x83, 0x0d, 0x42, 0xf2, 0x07, 0x1b, 0x0a, 0xeb,
  0xf2, 0x83, 0x09, 0x14, 0xaa, 0xb0, 0xb1, 0xd9, 0xb5, 0xb9, 0xa4, 0x91,
  0x95, 0xb9, 0xd1, 0x4d, 0x09, 0x82, 0x2a, 0x64, 0x78, 0x2e, 0x76, 0x65,
  0x72, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x02, 0xa2, 0x09, 0x19, 0x9e, 0x8b,
  0x5d, 0x18, 0x9b, 0x5d, 0x99, 0xdc, 0x94, 0x80, 0xa8, 0x43, 0x86, 0xe7,
  0x32, 0x87, 0x16, 0x46, 0x56, 0x26, 0xd7, 0xf4, 0x46, 0x56, 0xc6, 0x36,
  0x25, 0x38, 0xca, 0x90, 0xe1, 0xb9, 0xc8, 0x95, 0xcd, 0xbd, 0xd5, 0xc9,
  0x8d, 0x95, 0xcd, 0x4d, 0x09, 0xa4, 0x3a, 0x64, 0x78, 0x2e, 0x76, 0x69,
  0x65, 0x77, 0x49, 0x64, 0x53, 0x74, 0x61, 0x74, 0x65, 0x53, 0x02, 0xaa,
  0x0e, 0x19, 0x9e, 0x4b, 0x99, 0x1b, 0x9d, 0x5c, 0x1e, 0xd4, 0x5b, 0x9a,
  0x1b, 0xdd, 0xdc, 0x94, 0x00, 0x14, 0x00, 0x00, 0x79, 0x18, 0x00, 0x00,
  0x4c, 0x00, 0x00, 0x00, 0x33, 0x08, 0x80, 0x1c, 0xc4, 0xe1, 0x1c, 0x66,
  0x14, 0x01, 0x3d, 0x88, 0x43, 0x38, 0x84, 0xc3, 0x8c, 0x42, 0x80, 0x07,
  0x79, 0x78, 0x07, 0x73, 0x98, 0x71, 0x0c, 0xe6, 0x00, 0x0f, 0xed, 0x10,
  0x0e, 0xf4, 0x80, 0x0e, 0x33, 0x0c, 0x42, 0x1e, 0xc2, 0xc1, 0x1d, 0xce,
  0xa1, 0x1c, 0x66, 0x30, 0x05, 0x3d, 0x88, 0x43, 0x38, 0x84, 0x83, 0x1b,
  0xcc, 0x03, 0x3d, 0xc8, 0x43, 0x3d, 0x8c, 0x03, 0x3d, 0xcc, 0x78, 0x8c,
  0x74, 0x70, 0x07, 0x7b, 0x08, 0x07, 0x79, 0x48, 0x87, 0x70, 0x70, 0x07,
  0x7a, 0x70, 0x03, 0x76, 0x78, 0x87, 0x70, 0x20, 0x87, 0x19, 0xcc, 0x11,
  0x0e, 0xec, 0x90, 0x0e, 0xe1, 0x30, 0x0f, 0x6e, 0x30, 0x0f, 0xe3, 0xf0,
  0x0e, 0xf0, 0x50, 0x0e, 0x33, 0x10, 0xc4, 0x1d, 0xde, 0x21, 0x1c, 0xd8,
  0x21, 0x1d, 0xc2, 0x61, 0x1e, 0x66, 0x30, 0x89, 0x3b, 0xbc, 0x83, 0x3b,
  0xd0, 0x43, 0x39, 0xb4, 0x03, 0x3c, 0xbc, 0x83, 0x3c, 0x84, 0x03, 0x3b,
  0xcc, 0xf0, 0x14, 0x76, 0x60, 0x07, 0x7b, 0x68, 0x07, 0x37, 0x68, 0x87,
  0x72, 0x68, 0x07, 0x37, 0x80, 0x87, 0x70, 0x90, 0x87, 0x70, 0x60, 0x07,
  0x76, 0x28, 0x07, 0x76, 0xf8, 0x05, 0x76, 0x78, 0x87, 0x77, 0x80, 0x87,
  0x5f, 0x08, 0x87, 0x71, 0x18, 0x87, 0x72, 0x98, 0x87, 0x79, 0x98, 0x81,
  0x2c, 0xee, 0xf0, 0x0e, 0xee, 0xe0, 0x0e, 0xf5, 0xc0, 0x0e, 0xec, 0x30,
  0x03, 0x62, 0xc8, 0xa1, 0x1c, 0xe4, 0xa1, 0x1c, 0xcc, 0xa1, 0x1c, 0xe4,
  0xa1, 0x1c, 0xdc, 0x61, 0x1c, 0xca, 0x21, 0x1c, 0xc4, 0x81, 0x1d, 0xca,
  0x61, 0x06, 0xd6, 0x90, 0x43, 0x39, 0xc8, 0x43, 0x39, 0x98, 0x43, 0x39,
  0xc8, 0x43, 0x39, 0xb8, 0xc3, 0x38, 0x94, 0x43, 0x38, 0x88, 0x03, 0x3b,
  0x94, 0xc3, 0x2f, 0xbc, 0x83, 0x3c, 0xfc, 0x82, 0x3b, 0xd4, 0x03, 0x3b,
  0xb0, 0xc3, 0x0c, 0xc4, 0x21, 0x07, 0x7c, 0x70, 0x03, 0x7a, 0x28, 0x87,
  0x76, 0x80, 0x87, 0x19, 0xd1, 0x43, 0x0e, 0xf8, 0xe0, 0x06, 0xe4, 0x20,
  0x0e, 0xe7, 0xe0, 0x06, 0xf6, 0x10, 0x0e, 0xf2, 0xc0, 0x0e, 0xe1, 0x90,
  0x0f, 0xef, 0x50, 0x0f, 0xf4, 0x00, 0x00, 0x00, 0x71, 0x20, 0x00, 0x00,
  0x3f, 0x00, 0x00, 0x00, 0xd6, 0x40, 0x0d, 0x97, 0xef, 0x3c, 0x3e, 0xd0,
  0x34, 0xce, 0x04, 0x4c, 0x44, 0x08, 0x34, 0xc3, 0x42, 0x98, 0x02, 0x34,
  0x5c, 0xbe, 0xf3, 0xf8, 0x01, 0xd2, 0x00, 0x11, 0xe6, 0x17, 0xb7, 0x6d,
  0x0b, 0xdb, 0x70, 0xf9, 0xce, 0xe3, 0x0b, 0x01, 0x55, 0x14, 0x44, 0x54,
  0x3a, 0xc0, 0x50, 0x12, 0x06, 0x20, 0x60, 0x7e, 0x71, 0xdb, 0xe6, 0xd0,
  0x0d, 0x97, 0xef, 0x3c, 0xbe, 0x10, 0x11, 0xc0, 0x44, 0x84, 0x40, 0x33,
  0x2c, 0xc4, 0x17, 0x39, 0xcc, 0x86, 0x34, 0x03, 0xd2, 0x18, 0x46, 0xa0,
  0x0d, 0x97, 0xef, 0x3c, 0xbe, 0x10, 0x11, 0xc0, 0x44, 0x84, 0x40, 0x33,
  0x2c, 0xc4, 0x17, 0x39, 0x4c, 0x48, 0x00, 0x8f, 0x21, 0x38, 0xc3, 0xe5,
  0x3b, 0x8f, 0x3f, 0x38, 0xd3, 0xed, 0x17, 0xb7, 0x6d, 0x01, 0xd3, 0x70,
  0xf9, 0xce, 0xe3, 0x2f, 0x0e, 0x30, 0x88, 0xcd, 0x43, 0x4d, 0x7e, 0x71,
  0xdb, 0x26, 0x30, 0x0d, 0x97, 0xef, 0x3c, 0xfe, 0xe2, 0x00, 0x83, 0xd8,
  0x3c, 0xd4, 0xe4, 0x23, 0xb7, 0x6d, 0x06, 0xd7, 0x70, 0xf9, 0xce, 0xe3,
  0x47, 0x80, 0xb5, 0x51, 0x45, 0x41, 0x44, 0xa5, 0x03, 0x0c, 0x7e, 0x71,
  0xdb, 0x56, 0x70, 0x0d, 0x97, 0xef, 0x3c, 0x7e, 0x04, 0x58, 0x1b, 0x55,
  0x14, 0x44, 0x54, 0x3a, 0xc0, 0xe0, 0x23, 0xb7, 0x6d, 0x07, 0xd0, 0x70,
  0xf9, 0xce, 0xe3, 0x4b, 0x00, 0xf3, 0x2c, 0x84, 0x5f, 0xdc, 0xb6, 0x0d,
  0x54, 0xc3, 0xe5, 0x3b, 0x8f, 0x2f, 0x4d, 0x4e, 0x44, 0xa0, 0xd4, 0xf4,
  0x50, 0x93, 0x5f, 0xdc, 0xb6, 0x31, 0x48, 0xc3, 0xe5, 0x3b, 0x8f, 0x3f,
  0x11, 0xd1, 0x84, 0x00, 0x11, 0xe6, 0x17, 0xb7, 0x6d, 0x09, 0xcf, 0x70,
  0xf9, 0xce, 0xe3, 0x53, 0x0d, 0x10, 0x61, 0x7e, 0x71, 0xdb, 0x06, 0x40,
  0x30, 0x00, 0xd2, 0x00, 0x61, 0x20, 0x00, 0x00, 0x64, 0x02, 0x00, 0x00,
  0x13, 0x04, 0x41, 0x2c, 0x10, 0x00, 0x00, 0x00, 0x39, 0x00, 0x00, 0x00,
  0xe4, 0x8c, 0x00, 0x50, 0x51, 0x1e, 0x44, 0x94, 0x51, 0x71, 0x14, 0x4b,
  0xa1, 0x14, 0x49, 0x49, 0x12, 0x94, 0x24, 0x44, 0x41, 0x06, 0x14, 0x62,
  0x40, 0x01, 0x06, 0x94, 0x24, 0x43, 0x81, 0x06, 0x14, 0x26, 0x42, 0x49,
  0x94, 0xc6, 0x0c, 0x40, 0x71, 0x15, 0xec, 0x40, 0xd1, 0x0e, 0x14, 0x5e,
  0xa9, 0x94, 0x4b, 0xb9, 0x95, 0xa5, 0x40, 0x99, 0x06, 0x14, 0x6a, 0x40,
  0xd9, 0x95, 0xec, 0x40, 0x61, 0x94, 0x0c, 0x0d, 0x63, 0x04, 0x20, 0x08,
  0x82, 0xe8, 0x37, 0x46, 0xd0, 0xf7, 0x2d, 0x8b, 0x6b, 0x63, 0x04, 0xbb,
  0x3f, 0xca, 0x24, 0x18, 0x8c, 0x11, 0x80, 0x20, 0x08, 0xe2, 0xbf, 0x30,
  0x46, 0x00, 0x82, 0x20, 0x08, 0xff, 0xc2, 0x18, 0x01, 0x08, 0x82, 0x20,
  0x08, 0x06, 0x63, 0x04, 0x20, 0x08, 0x82, 0x2a, 0x18, 0x8c, 0x11, 0xa8,
  0x78, 0x7d, 0xca, 0xde, 0x18, 0x81, 0x8a, 0xd7, 0xa7, 0xec, 0x0b, 0x63,
  0x04, 0x20, 0x08, 0x82, 0x20, 0x28, 0x8c, 0x11, 0x98, 0xf7, 0xba, 0xca,
  0xde, 0x18, 0x41, 0xcc, 0x83, 0x7d, 0xee, 0x8d, 0x11, 0xe8, 0xac, 0x39,
  0x87, 0x60, 0x30, 0x46, 0xf0, 0xee, 0x69, 0x79, 0x7f, 0x63, 0x04, 0x6e,
  0x1f, 0x8b, 0xb6, 0x37, 0x46, 0x00, 0x82, 0x20, 0x88, 0x7f, 0x33, 0x00,
  0x44, 0xce, 0x21, 0x58, 0x72, 0x30, 0x87, 0x90, 0x06, 0xd2, 0x1c, 0x82,
  0xd5, 0x06, 0x73, 0x08, 0x76, 0x30, 0xcd, 0x21, 0xd0, 0xc1, 0x1c, 0xcc,
  0x21, 0x58, 0x6e, 0x40, 0xe7, 0x1c, 0xc4, 0xf3, 0x48, 0xdb, 0x1c, 0x84,
  0x24, 0x49, 0xdb, 0x1c, 0x84, 0x24, 0x49, 0x1e, 0x00, 0x00, 0x00, 0x00,
  0x23, 0x06, 0x08, 0x00, 0x82, 0x60, 0x80, 0x06, 0xb2, 0xd0, 0x0d, 0xb1,
  0xa0, 0x07, 0x23, 0x06, 0x08, 0x00, 0x82, 0x60, 0x80, 0x06, 0xb3, 0xe0,
  0x0d, 0xaf, 0xb0, 0x07, 0x23, 0x06, 0x08, 0x00, 0x82, 0x60, 0x80, 0x06,
  0xb4, 0xf0, 0x0d, 0xb0, 0xc0, 0x07, 0x23, 0x06, 0x07, 0x00, 0x82, 0x60,
  0x50, 0x06, 0xb6, 0xa0, 0x06, 0x41, 0x32, 0x62, 0x90, 0x00, 0x20, 0x08,
  0x06, 0x88, 0x38, 0xb4, 0xc2, 0x2c, 0xc8, 0xc2, 0x29, 0xb4, 0xc1, 0x88,
  0x41, 0x02, 0x80, 0x20, 0x18, 0x18, 0xe4, 0xe0, 0x0a, 0xae, 0x30, 0x0b,
  0xa8, 0xe0, 0x06, 0x23, 0x06, 0x09, 0x00, 0x82, 0x60, 0x60, 0x94, 0xc3,
  0x2b, 0xbc, 0x02, 0x2d, 0x98, 0xc2, 0x1b, 0x8c, 0x18, 0x24, 0x00, 0x08,
  0x82, 0x81, 0x61, 0x0e, 0xb0, 0x30, 0x0b, 0xb5, 0xa0, 0x0a, 0x70, 0x30,
  0x62, 0x90, 0x00, 0x20, 0x08, 0x06, 0xc6, 0x39, 0xc4, 0x02, 0x2d, 0xd8,
  0x02, 0x2a, 0xc4, 0xc1, 0x88, 0x41, 0x02, 0x80, 0x20, 0x18, 0x18, 0xe8,
  0x20, 0x0b, 0xb5, 0x70, 0x0b, 0xab, 0x20, 0x07, 0x23, 0x06, 0x09, 0x00,
  0x82, 0x60, 0x60, 0xa4, 0xc3, 0x2c, 0xd0, 0x02, 0x2e, 0xb4, 0xc2, 0x1c,
  0x8c, 0x18, 0x24, 0x00, 0x08, 0x82, 0x81, 0xa1, 0x0e, 0xb4, 0x50, 0x0b,
  0xb9, 0xb0, 0x0a, 0x74, 0x30, 0x62, 0x90, 0x00, 0x20, 0x08, 0x06, 0xc6,
  0x3a, 0xd4, 0x82, 0x2d, 0xe8, 0x82, 0x2b, 0xd4, 0xc1, 0x88, 0x41, 0x02,
  0x80, 0x20, 0x18, 0x18, 0xec, 0x60, 0x0b, 0xbe, 0xb0, 0x0b, 0xb0, 0x60,
  0x07, 0x23, 0x06, 0x09, 0x00, 0x82, 0x60, 0x60, 0xb4, 0xc3, 0x2d, 0xfc,
  0x02, 0x2f, 0xb8, 0xc2, 0x1d, 0x8c, 0x18, 0x24, 0x00, 0x08, 0x82, 0x81,
  0xe1, 0x0e, 0xb8, 0x00, 0x0e, 0xbd, 0x40, 0x0b, 0x78, 0x30, 0x62, 0x80,
  0x00, 0x20, 0x08, 0x06, 0x0f, 0x3b, 0xd8, 0xc1, 0x1e, 0xa8, 0x82, 0x2a,
  0x8c, 0x18, 0x1c, 0x00, 0x08, 0x82, 0x41, 0x19, 0x90, 0x03, 0x1e, 0x04,
  0xd6, 0x88, 0x81, 0x02, 0x80, 0x20, 0x18, 0x48, 0xed, 0x30, 0x07, 0x81,
  0x73, 0x07, 0xb2, 0xb0, 0x0b, 0xa3, 0x09, 0x01, 0x30, 0x62, 0x80, 0x00,
  0x20, 0x08, 0x06, 0x0f, 0x3c, 0xe8, 0x41, 0xe0, 0x0a, 0xae, 0x30, 0x62,
  0x70, 0x00, 0x20, 0x08, 0x06, 0x65, 0x80, 0x0e, 0x7c, 0x10, 0x78, 0x23,
  0x06, 0x0a, 0x00, 0x82, 0x60, 0x20, 0xc5, 0xc3, 0x1d, 0x14, 0x52, 0x29,
  0xd8, 0xc2, 0x2f, 0x8c, 0x26, 0x04, 0xc0, 0x88, 0x01, 0x02, 0x80, 0x20,
  0x18, 0x3c, 0xf4, 0xe0, 0x07, 0x81, 0x2c, 0xc8, 0xc2, 0x88, 0xc1, 0x01,
  0x80, 0x20, 0x18, 0x94, 0x01, 0x3b, 0x80, 0x42, 0x20, 0x06, 0x23, 0x06,
  0x0a, 0x00, 0x82, 0x60, 0x20, 0xd5, 0xc3, 0x1e, 0x24, 0x96, 0x2a, 0xe8,
  0xc2, 0x38, 0x8c, 0x26, 0x04, 0xc0, 0x88, 0x01, 0x02, 0x80, 0x20, 0x18,
  0x3c, 0xf8, 0x20, 0x0a, 0x81, 0x2d, 0xd8, 0xc2, 0x88, 0xc1, 0x01, 0x80,
  0x20, 0x18, 0x94, 0x01, 0x3c, 0x90, 0x42, 0x60, 0x06, 0x23, 0x06, 0x0a,
  0x00, 0x82, 0x60, 0x20, 0xe5, 0xc3, 0x1f, 0x34, 0xda, 0x2b, 0xf8, 0xc2,
  0x39, 0x8c, 0x26, 0x04, 0xc0, 0x88, 0x01, 0x02, 0x80, 0x20, 0x18, 0x3c,
  0xfc, 0x60, 0x0a, 0x81, 0x2e, 0xe8, 0xc2, 0x88, 0xc1, 0x01, 0x80, 0x20,
  0x18, 0x94, 0x01, 0x3d, 0xa0, 0x42, 0x50, 0x06, 0x23, 0x06, 0x08, 0x00,
  0x82, 0x60, 0xf0, 0xf8, 0x03, 0x2a, 0xf8, 0x01, 0x2f, 0xf0, 0xc2, 0x88,
  0xc1, 0x01, 0x80, 0x20, 0x18, 0x94, 0x81, 0x3d, 0xa8, 0x42, 0xa0, 0x06,
  0x23, 0x06, 0x08, 0x00, 0x82, 0x60, 0xf0, 0x80, 0x84, 0x2a, 0xe0, 0x82,
  0x2f, 0xf8, 0xc2, 0x88, 0xc1, 0x01, 0x80, 0x20, 0x18, 0x94, 0x01, 0x3e,
  0xb0, 0x42, 0xc0, 0x06, 0x23, 0x06, 0x07, 0x00, 0x82, 0x60, 0x00, 0x06,
  0xfb, 0x40, 0x0a, 0x63, 0xb0, 0x0b, 0xa3, 0x09, 0x01, 0x30, 0x9a, 0x20,
  0x04, 0xa3, 0x09, 0x83, 0x30, 0x62, 0x70, 0x00, 0x20, 0x08, 0x06, 0x60,
  0xf0, 0x0f, 0xa8, 0x70, 0x06, 0xae, 0x30, 0x9a, 0x10, 0x00, 0xa3, 0x09,
  0x42, 0x30, 0x9a, 0x30, 0x08, 0x23, 0x06, 0x07, 0x00, 0x82, 0x60, 0x00,
  0x06, 0x23, 0xc1, 0x0a, 0x6b, 0x40, 0x0e, 0xa3, 0x09, 0x01, 0x30, 0x9a,
  0x20, 0x04, 0xa3, 0x09, 0x83, 0x30, 0x62, 0x70, 0x00, 0x20, 0x08, 0x06,
  0x65, 0x50, 0x12, 0xb9, 0x10, 0x07, 0x7a, 0x30, 0x62, 0xf0, 0x00, 0x20,
  0x08, 0x06, 0x17, 0x4b, 0xe0, 0x82, 0x17, 0xb8, 0x41, 0x1b, 0xf4, 0x41,
  0x1f, 0x84, 0x44, 0x48, 0xf0, 0x42, 0x1f, 0x8c, 0x26, 0x04, 0xc0, 0x68,
  0x82, 0x10, 0x8c, 0x26, 0x0c, 0xc2, 0x88, 0xc1, 0x03, 0x80, 0x20, 0x18,
  0x5c, 0x30, 0xc1, 0x0b, 0x5e, 0x21, 0x07, 0x71, 0x10, 0x0a, 0xa1, 0x50,
  0x12, 0x25, 0x01, 0x0e, 0xa1, 0x30, 0x9a, 0x10, 0x00, 0xa3, 0x09, 0x42,
  0x30, 0x9a, 0x30, 0x08, 0x23, 0x06, 0x0f, 0x00, 0x82, 0x60, 0x70, 0xd1,
  0x04, 0x38, 0x78, 0x89, 0x1d, 0xd4, 0x41, 0x29, 0x94, 0x42, 0x4a, 0xa4,
  0x04, 0x39, 0x94, 0xc2, 0x68, 0x42, 0x00, 0x8c, 0x26, 0x08, 0xc1, 0x68,
  0xc2, 0x20, 0x8c, 0x18, 0x3c, 0x00, 0x08, 0x82, 0xc1, 0x85, 0x13, 0xe4,
  0xe0, 0x35, 0x7a, 0x90, 0x07, 0xa9, 0x90, 0x0a, 0x2d, 0xd1, 0x12, 0xe8,
  0x90, 0x0a, 0xa3, 0x09, 0x01, 0x30, 0x9a, 0x20, 0x04, 0xa3, 0x09, 0x83,
  0x30, 0x9a, 0x40, 0x0c, 0x06, 0xc1, 0x02, 0x7c, 0x0c, 0x8a, 0x05, 0xf8,
  0x18, 0x24, 0x0b, 0xf0, 0xb1, 0x81, 0x16, 0xe4, 0x63, 0x43, 0x2d, 0xc8,
  0xc7, 0x06, 0x5b, 0x90, 0xcf, 0x88, 0x81, 0x01, 0x80, 0x20, 0x18, 0x6c,
  0x61, 0xd1, 0x0e, 0xc3, 0x88, 0x81, 0x01, 0x80, 0x20, 0x18, 0x6c, 0x62,
  0xe1, 0x0e, 0xc3, 0x88, 0x81, 0x01, 0x80, 0x20, 0x18, 0x6c, 0x63, 0xf1,
  0x0e, 0x83, 0x0d, 0xbb, 0x20, 0x1f, 0x1b, 0x78, 0x41, 0x3e, 0x36, 0xf4,
  0x82, 0x7c, 0x46, 0x0c, 0x0c, 0x00, 0x04, 0xc1, 0x60, 0x3b, 0x0b, 0x7a,
  0x18, 0x46, 0x0c, 0x0c, 0x00, 0x04, 0xc1, 0x60, 0x43, 0x8b, 0x7a, 0x18,
  0x46, 0x0c, 0x0c, 0x00, 0x04, 0xc1, 0x60, 0x4b, 0x0b, 0x7b, 0x18, 0xec,
  0x13, 0x07, 0xf9, 0xd8, 0x37, 0x0e, 0xf2, 0xb1, 0x8f, 0x1c, 0xe4, 0x33,
  0x1c, 0x21, 0x06, 0xe6, 0x40, 0x7c, 0xc3, 0x11, 0x62, 0x70, 0x0e, 0xc4,
  0x37, 0x1c, 0x21, 0x06, 0xe8, 0x40, 0x7c, 0xd3, 0x0d, 0x46, 0x32, 0x4c,
  0x37, 0x18, 0xc9, 0x30, 0xdd, 0x60, 0x24, 0xc3, 0x88, 0x81, 0x02, 0x80,
  0x20, 0x18, 0x54, 0x76, 0xd1, 0x0f, 0xab, 0x80, 0x0b, 0xf8, 0x50, 0x13,
  0x65, 0x31, 0x9a, 0x10, 0x00, 0xa3, 0x09, 0x42, 0x30, 0x9a, 0x30, 0x08,
  0x36, 0x1c, 0xf2, 0xb1, 0xe1, 0x90, 0x8f, 0x0d, 0x87, 0x7c, 0x8c, 0x0f,
  0x72, 0x21, 0x3e, 0xc6, 0x07, 0xb9, 0x10, 0x1f, 0xe3, 0x83, 0x5c, 0x88,
  0xcf, 0x88, 0xc1, 0x02, 0x80, 0x20, 0x18, 0x64, 0x7e, 0x81, 0x12, 0x83,
  0x10, 0x0c, 0x42, 0x30, 0x62, 0x60, 0x00, 0x20, 0x08, 0x06, 0x9b, 0x5f,
  0x88, 0x44, 0x60, 0x41, 0x21, 0x1f, 0x13, 0x0a, 0xf9, 0xd8, 0x50, 0xc8,
  0x67, 0xc4, 0xe0, 0x00, 0x40, 0x10, 0x0c, 0xc0, 0x00, 0x34, 0x52, 0x02,
  0x1d, 0x5c, 0x62, 0x34, 0x21, 0x00, 0x46, 0x13, 0x84, 0x60, 0x34, 0x61,
  0x10, 0x0c, 0x24, 0x86, 0xf8, 0x58, 0x48, 0x0c, 0xf1, 0x31, 0x91, 0x18,
  0xe2, 0x33, 0x62, 0x60, 0x00, 0x20, 0x08, 0x06, 0x5b, 0x6a, 0xc8, 0x04,
  0x3a, 0x8c, 0x18, 0x18, 0x00, 0x08, 0x82, 0xc1, 0xa6, 0x1a, 0x33, 0x81,
  0x0e, 0x23, 0x06, 0x06, 0x00, 0x82, 0x60, 0xb0, 0xad, 0x06, 0x4d, 0xa0,
  0xc3, 0x88, 0x81, 0x01, 0x80, 0x20, 0x18, 0x6c, 0xac, 0x41, 0x13, 0xeb,
  0x30, 0x62, 0x60, 0x00, 0x20, 0x08, 0x06, 0x5b, 0x6b, 0xd4, 0xc4, 0x3a,
  0x8c, 0x18, 0x18, 0x00, 0x08, 0x82, 0xc1, 0xe6, 0x1a, 0x36, 0xb1, 0x0e,
  0x23, 0x06, 0x06, 0x00, 0x82, 0x60, 0xb0, 0xbd, 0x06, 0x4e, 0xcc, 0xc3,
  0x88, 0x81, 0x01, 0x80, 0x20, 0x18, 0x6c, 0xb0, 0x91, 0x13, 0xf3, 0x30,
  0x62, 0x60, 0x00, 0x20, 0x08, 0x06, 0x5b, 0x6c, 0xe4, 0x44, 0x3d, 0x8c,
  0x18, 0x18, 0x00, 0x08, 0x82, 0xc1, 0x26, 0x1b, 0x3a, 0x51, 0x0f, 0x56,
  0x24, 0xf2, 0xb1, 0x23, 0x91, 0x8f, 0x09, 0x41, 0x7c, 0x4c, 0x59, 0xe4,
  0x63, 0x89, 0x23, 0x1f, 0x13, 0x82, 0xf8, 0x18, 0x03, 0xc9, 0xc7, 0x1c,
  0x48, 0x3e, 0x26, 0x04, 0xf1, 0xb1, 0xe0, 0x91, 0x8f, 0x15, 0x8f, 0x7c,
  0x4c, 0x08, 0xe2, 0x63, 0x4a, 0x24, 0x1f, 0x2b, 0x28, 0xf9, 0x98, 0x10,
  0xc4, 0xc7, 0x14, 0x4b, 0x3e, 0xe6, 0x58, 0xf2, 0x31, 0x21, 0x88, 0x8f,
  0x35, 0x9a, 0x7c, 0x6c, 0xe1, 0xe4, 0x63, 0x42, 0x10, 0x1f, 0x6b, 0x3e,
  0xf9, 0x18, 0xe5, 0xc9, 0xc7, 0x84, 0x20, 0x3e, 0x66, 0x85, 0x81, 0x7c,
  0x8c, 0x1a, 0x03, 0xf9, 0x98, 0x10, 0xc4, 0xc7, 0xa0, 0x4f, 0x3e, 0x23,
  0x06, 0x08, 0x00, 0x82, 0x60, 0x20, 0x06, 0xec, 0x01, 0x1a, 0x1e, 0x12,
  0xd8, 0x13, 0x06, 0xf2, 0x19, 0x31, 0x40, 0x00, 0x10, 0x04, 0x03, 0x31,
  0x70, 0x0f, 0xd1, 0x00, 0x83, 0x23, 0x30, 0x67, 0x0c, 0xe4, 0x33, 0x62,
  0x80, 0x00, 0x20, 0x08, 0x06, 0x62, 0x00, 0x1f, 0xa4, 0x21, 0x06, 0x46,
  0x60, 0x16, 0x19, 0xc8, 0x67, 0xc4, 0x00, 0x01, 0x40, 0x10, 0x0c, 0xc4,
  0x40, 0x3e, 0x4c, 0x63, 0x0c, 0x9c, 0xc0, 0x2a, 0x33, 0x90, 0xcf, 0x88,
  0x01, 0x02, 0x80, 0x20, 0x18, 0x88, 0x01, 0x7d, 0xa0, 0x46, 0x19, 0x34,
  0x81, 0x51, 0x68, 0x20, 0x9f, 0x11, 0x03, 0x04, 0x00, 0x41, 0x30, 0x10,
  0x03, 0xfb, 0x50, 0x8d, 0x33, 0x60, 0x02, 0x5b, 0xd6, 0x41, 0x3e, 0x23,
  0x06, 0x08, 0x00, 0x82, 0x60, 0x20, 0x06, 0xf8, 0xc1, 0x1a, 0xeb, 0x60,
  0x04, 0x23, 0x06, 0x08, 0x00, 0x82, 0x60, 0x20, 0x06, 0xf9, 0xd1, 0x1a,
  0xeb, 0xe0, 0x13, 0x81, 0x31, 0xee, 0x20, 0x9f, 0x11, 0x03, 0x04, 0x00,
  0x41, 0x30, 0x10, 0x83, 0xfd, 0x78, 0x0d, 0x77, 0x38, 0x82, 0x11, 0x03,
  0x04, 0x00, 0x41, 0x30, 0x10, 0x03, 0xfe, 0x80, 0x0d, 0x77, 0x00, 0x8b,
  0xc0, 0x9a, 0x78, 0x90, 0xcf, 0x88, 0x01, 0x02, 0x80, 0x20, 0x18, 0x88,
  0x81, 0x7f, 0xc8, 0x46, 0x3c, 0x20, 0xc1, 0x88, 0x01, 0x02, 0x80, 0x20,
  0x18, 0x88, 0xc1, 0x7f, 0xcc, 0x46, 0x3c, 0x88, 0x45, 0x60, 0x3f, 0xd1,
  0x13, 0xf4, 0xb1, 0x9f, 0xf0, 0x09, 0xfa, 0x8c, 0x18, 0x1c, 0x00, 0x08,
  0x82, 0x41, 0x19, 0x84, 0x48, 0x6d, 0xb8, 0x85, 0x5d, 0x8c, 0x18, 0x3c,
  0x00, 0x08, 0x82, 0xc1, 0x85, 0x22, 0xb4, 0xc1, 0x12, 0xc1, 0x20, 0xe4,
  0x45, 0x5e, 0xf4, 0x47, 0x7f, 0xe0, 0x46, 0x5e, 0x8c, 0x26, 0x04, 0xc0,
  0x88, 0xc1, 0x01, 0x80, 0x20, 0x18, 0x94, 0x01, 0x89, 0xe0, 0x46, 0x5c,
  0xe4, 0xc5, 0x88, 0xc1, 0x03, 0x80, 0x20, 0x18, 0x5c, 0x2b, 0x72, 0x1b,
  0x2d, 0x11, 0x18, 0x05, 0x5f, 0xf0, 0x05, 0x88, 0x80, 0xc8, 0x6e, 0xf0,
  0xc5, 0x68, 0x42, 0x00, 0x8c, 0x18, 0x2c, 0x00, 0x08, 0x82, 0x41, 0xc6,
  0x22, 0xb6, 0xf1, 0x30, 0x09, 0x2b, 0xac, 0x82, 0x2a, 0x8c, 0x18, 0x18,
  0x00, 0x08, 0x82, 0xc1, 0xc6, 0x22, 0x25, 0x12, 0x58, 0x3d, 0xd4, 0x83,
  0x7c, 0xec, 0x16, 0xea, 0x41, 0x3e, 0x76, 0x0b, 0xf6, 0x20, 0x1f, 0xbb,
  0x85, 0x7b, 0x90, 0x8f, 0xe9, 0xc2, 0x10, 0x1f, 0xd3, 0x85, 0x21, 0x3e,
  0xa6, 0x0b, 0x43, 0x7c, 0x6c, 0xe8, 0x07, 0xf9, 0xd8, 0xe0, 0x0f, 0xf2,
  0xb1, 0xe1, 0x1f, 0xe4, 0x63, 0xe0, 0x20, 0x1b, 0xf0, 0x31, 0x70, 0x98,
  0x0d, 0xf8, 0x18, 0x38, 0xd0, 0x06, 0x7c, 0x6c, 0x08, 0x09, 0xf9, 0xd8,
  0x20, 0x12, 0xf2, 0xb1, 0x61, 0x24, 0xe4, 0x63, 0x43, 0x6e, 0xc0, 0xc7,
  0x06, 0xdd, 0x80, 0x8f, 0x0d, 0xbb, 0x01, 0x1f, 0x1b, 0x52, 0x42, 0x3e,
  0x36, 0xa8, 0x84, 0x7c, 0x6c, 0x58, 0x09, 0xf9, 0x18, 0x39, 0x80, 0x43,
  0x7c, 0x8c, 0x1c, 0xc0, 0x21, 0x3e, 0x46, 0x0e, 0xe0, 0x10, 0x9f, 0x11,
  0x83, 0x05, 0x00, 0x41, 0x30, 0xc8, 0xce, 0x24, 0x3e, 0x06, 0x21, 0x18,
  0x84, 0x60, 0xc4, 0xc0, 0x00, 0x40, 0x10, 0x0c, 0xb6, 0x33, 0x59, 0x8f,
  0xc0, 0x82, 0x42, 0x3e, 0x26, 0x14, 0xf2, 0xb1, 0xa1, 0x90, 0xcf, 0x88,
  0xc1, 0x02, 0x80, 0x20, 0x18, 0x64, 0x6c, 0x62, 0x1f, 0x6f, 0xc0, 0x06,
  0x69, 0x50, 0x0e, 0xe4, 0x30, 0x0e, 0x23, 0x06, 0x06, 0x00, 0x82, 0x60,
  0xb0, 0xb1, 0x49, 0x99, 0x04, 0x23, 0x06, 0x0b, 0x00, 0x82, 0x60, 0x90,
  0xb9, 0x09, 0x7e, 0x9c, 0x83, 0x39, 0x94, 0x43, 0x41, 0x0c, 0x23, 0x06,
  0x06, 0x00, 0x82, 0x60, 0xb0, 0xb9, 0xc9, 0x99, 0x04, 0x23, 0x06, 0x0b,
  0x00, 0x82, 0x60, 0x90, 0xc1, 0x89, 0x7e, 0xcc, 0x01, 0x1c, 0xb4, 0xc1,
  0x61, 0x14, 0x23, 0x06, 0x06, 0x00, 0x82, 0x60, 0xb0, 0xc1, 0x49, 0x9a,
  0x04, 0x96, 0x13, 0xef, 0x21, 0x1f, 0x23, 0x08, 0xf9, 0x58, 0x20, 0xc8,
  0xc7, 0x82, 0xf9, 0x80, 0x8f, 0xa5, 0x47, 0x12, 0x9f, 0x11, 0x03, 0x03,
  0x00, 0x41, 0x30, 0xd8, 0xec, 0x44, 0x44, 0x02, 0x0b, 0xe8, 0x43, 0x3e,
  0x23, 0x06, 0x06, 0x00, 0x82, 0x60, 0xb0, 0xe1, 0x49, 0x89, 0x04, 0x16,
  0x14, 0xf2, 0xb1, 0xc0, 0x3d, 0xe0, 0x63, 0xef, 0xf1, 0x06, 0xf1, 0x19,
  0x31, 0x30, 0x00, 0x10, 0x04, 0x83, 0x8d, 0x4f, 0x50, 0x24, 0xb0, 0x40,
  0x3f, 0xe4, 0x33, 0x62, 0x60, 0x00, 0x20, 0x08, 0x06, 0x9b, 0x9f, 0xac,
  0x48, 0x60, 0xc1, 0x22, 0x1f, 0x0b, 0xe8, 0x03, 0x3e, 0x16, 0x1c, 0xf2,
  0xb1, 0x3a, 0xa8, 0x03, 0xf9, 0x58, 0x30, 0x22, 0xf0, 0x31, 0x8a, 0x92,
  0x8f, 0x05, 0x82, 0x7c, 0x2c, 0xd0, 0x0f, 0xf8, 0x58, 0x10, 0xc8, 0xc7,
  0x82, 0x14, 0x91, 0xcf, 0x88, 0xc1, 0x01, 0x80, 0x20, 0x18, 0x74, 0xa8,
  0xa2, 0x26, 0x2b, 0x12, 0x18, 0x12, 0xd0, 0xc7, 0xfe, 0xa3, 0x8b, 0xcf,
  0x88, 0x81, 0x01, 0x80, 0x20, 0x18, 0x6c, 0xac, 0x82, 0x23, 0x81, 0x05,
  0x2a, 0x22, 0x9f, 0x11, 0x03, 0x03, 0x00, 0x41, 0x30, 0xd8, 0x5c, 0x65,
  0x47, 0x02, 0x1b, 0x91, 0x2e, 0x3e, 0xe6, 0xcc, 0x88, 0x7c, 0x2c, 0x10,
  0xe4, 0x63, 0x01, 0x18, 0xc0, 0xc7, 0x4e, 0x24, 0xa0, 0x8f, 0x4d, 0x7e,
  0x20, 0x1f, 0x4b, 0x91, 0x39, 0x88, 0x8f, 0x21, 0x81, 0x7c, 0x2c, 0xa8,
  0x03, 0xf8, 0x98, 0xe3, 0x17, 0xf2, 0xb1, 0xc0, 0x90, 0x8f, 0x05, 0x83,
  0x7c, 0x2c, 0x38, 0xe0, 0x63, 0xb2, 0x80, 0x1b, 0xf2, 0xb1, 0x20, 0x0e,
  0xe4, 0x63, 0xc1, 0x20, 0x1f, 0xf3, 0x54, 0x41, 0x3e, 0x46, 0x23, 0x7f,
  0x10, 0x1f, 0x9b, 0x02, 0xf9, 0x58, 0x10, 0x0a, 0xf0, 0x31, 0x25, 0x90,
  0x8f, 0x05, 0x05, 0x7c, 0x6c, 0x17, 0xc4, 0x43, 0x3e, 0x16, 0xe8, 0x81,
  0x7c, 0x2c, 0x18, 0xe4, 0x63, 0x67, 0x40, 0x0b, 0xf2, 0xb1, 0x1e, 0x49,
  0x85, 0xf8, 0x18, 0x17, 0xc8, 0xc7, 0x82, 0x55, 0x80, 0x8f, 0x4d, 0x81,
  0x7c, 0x2c, 0x28, 0xe0, 0x63, 0xe4, 0xc0, 0x1e, 0xf2, 0xb1, 0x60, 0x14,
  0xe4, 0x63, 0xc1, 0x20, 0x1f, 0xeb, 0x85, 0xf5, 0x90, 0x8f, 0x05, 0xeb,
  0x20, 0x1f, 0xf3, 0x05, 0xf6, 0x90, 0x8f, 0x05, 0xed, 0x20, 0x1f, 0xfb,
  0x85, 0xf6, 0x90, 0x8f, 0x05, 0xef, 0x20, 0x1f, 0x2b, 0xc8, 0x03, 0x3e,
  0x16, 0x20, 0xf0, 0xb1, 0xa2, 0x3c, 0xe0, 0x63, 0xc1, 0x04, 0x1f, 0x2b,
  0xcc, 0x03, 0x3e, 0x16, 0x78, 0xf0, 0x19, 0x31, 0x48, 0x00, 0x10, 0x04,
  0x03, 0x65, 0x64, 0xdc, 0x85, 0x5e, 0xe8, 0x25, 0x5d, 0x8a, 0x11, 0x83,
  0x04, 0x00, 0x41, 0x30, 0x50, 0x46, 0xc6, 0x5d, 0xe8, 0x85, 0x5e, 0xcc,
  0x65, 0x18, 0x31, 0x48, 0x00, 0x10, 0x04, 0x03, 0x65, 0x64, 0xdc, 0x85,
  0x5e, 0xe8, 0x05, 0x5d, 0x82, 0x11, 0x83, 0x04, 0x00, 0x41, 0x30, 0x50,
  0x46, 0xc6, 0x5d, 0xe8, 0x85, 0x5e, 0xd6, 0x25, 0x4e, 0x10, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00
};
