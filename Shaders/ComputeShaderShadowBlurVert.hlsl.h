#if 0
;
; Note: shader requires additional functionality:
;       Resource descriptor heap indexing
;
;
; Input signature:
;
; Name                 Index   Mask Register SysValue  Format   Used
; -------------------- ----- ------ -------- -------- ------- ------
; no parameters
;
; Output signature:
;
; Name                 Index   Mask Register SysValue  Format   Used
; -------------------- ----- ------ -------- -------- ------- ------
; no parameters
; shader debug name: Shaders\PDB\ComputeShaderShadowBlurVert.pdb
; shader hash: 2defd4bd29590ef3b2c67bb6f7354800
;
; Pipeline Runtime Information: 
;
; Compute Shader
; NumThreads=(1,64,1)
;
;
; Buffer Definitions:
;
; cbuffer cb0
; {
;
;   struct cb0
;   {
;
;       struct struct.BlurConstants
;       {
;
;           float4 blurWeights[3];                    ; Offset:    0
;           uint blurMap0UavID;                       ; Offset:   48
;           uint blurMap1UavID;                       ; Offset:   52
;           uint normalDepthMapSrvID;                 ; Offset:   56
;       
;       } cb0;                                        ; Offset:    0
;
;   
;   } cb0;                                            ; Offset:    0 Size:    60
;
; }
;
;
; Resource Bindings:
;
; Name                                 Type  Format         Dim      ID      HLSL Bind  Count
; ------------------------------ ---------- ------- ----------- ------- -------------- ------
; cb0                               cbuffer      NA          NA     CB0            cb0     1
;
target datalayout = "e-m:e-p:32:32-i1:32-i8:32-i16:32-i32:32-i64:64-f16:32-f32:32-f64:64-n8:16:32:64"
target triple = "dxil-ms-dx"

%dx.types.Handle = type { i8* }
%dx.types.ResBind = type { i32, i32, i32, i8 }
%dx.types.ResourceProperties = type { i32, i32 }
%dx.types.CBufRet.f32 = type { float, float, float, float }
%dx.types.CBufRet.i32 = type { i32, i32, i32, i32 }
%dx.types.Dimensions = type { i32, i32, i32, i32 }
%dx.types.ResRet.f32 = type { float, float, float, float, i32 }
%cb0 = type { %struct.BlurConstants }
%struct.BlurConstants = type { [3 x <4 x float>], i32, i32, i32 }

@"\01?gCache@@3PAMA" = external addrspace(3) global [70 x float], align 4

define void @main() {
  %1 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 0, i32 0, i32 0, i8 2 }, i32 0, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %2 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1, %dx.types.ResourceProperties { i32 13, i32 60 })  ; AnnotateHandle(res,props)  resource: CBuffer
  %3 = call i32 @dx.op.threadIdInGroup.i32(i32 95, i32 0)  ; ThreadIdInGroup(component)
  %4 = call i32 @dx.op.threadIdInGroup.i32(i32 95, i32 1)  ; ThreadIdInGroup(component)
  %5 = call i32 @dx.op.threadId.i32(i32 93, i32 0)  ; ThreadId(component)
  %6 = call i32 @dx.op.threadId.i32(i32 93, i32 1)  ; ThreadId(component)
  %7 = alloca [8 x float], align 4
  %8 = bitcast [8 x float]* %7 to i8*
  call void @llvm.lifetime.start(i64 32, i8* %8) #0
  %9 = getelementptr inbounds [8 x float], [8 x float]* %7, i32 0, i32 0
  %10 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %2, i32 0)  ; CBufferLoadLegacy(handle,regIndex)
  %11 = extractvalue %dx.types.CBufRet.f32 %10, 0
  store float %11, float* %9, align 4, !tbaa !9
  %12 = getelementptr inbounds [8 x float], [8 x float]* %7, i32 0, i32 1
  %13 = extractvalue %dx.types.CBufRet.f32 %10, 1
  store float %13, float* %12, align 4, !tbaa !9
  %14 = getelementptr inbounds [8 x float], [8 x float]* %7, i32 0, i32 2
  %15 = extractvalue %dx.types.CBufRet.f32 %10, 2
  store float %15, float* %14, align 4, !tbaa !9
  %16 = getelementptr inbounds [8 x float], [8 x float]* %7, i32 0, i32 3
  %17 = extractvalue %dx.types.CBufRet.f32 %10, 3
  store float %17, float* %16, align 4, !tbaa !9
  %18 = getelementptr inbounds [8 x float], [8 x float]* %7, i32 0, i32 4
  %19 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %2, i32 1)  ; CBufferLoadLegacy(handle,regIndex)
  %20 = extractvalue %dx.types.CBufRet.f32 %19, 0
  store float %20, float* %18, align 4, !tbaa !9
  %21 = getelementptr inbounds [8 x float], [8 x float]* %7, i32 0, i32 5
  %22 = extractvalue %dx.types.CBufRet.f32 %19, 1
  store float %22, float* %21, align 4, !tbaa !9
  %23 = getelementptr inbounds [8 x float], [8 x float]* %7, i32 0, i32 6
  %24 = extractvalue %dx.types.CBufRet.f32 %19, 2
  store float %24, float* %23, align 4, !tbaa !9
  %25 = getelementptr inbounds [8 x float], [8 x float]* %7, i32 0, i32 7
  %26 = extractvalue %dx.types.CBufRet.f32 %19, 3
  store float %26, float* %25, align 4, !tbaa !9
  %27 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %2, i32 3)  ; CBufferLoadLegacy(handle,regIndex)
  %28 = extractvalue %dx.types.CBufRet.i32 %27, 1
  %29 = call %dx.types.Handle @dx.op.createHandleFromHeap(i32 218, i32 %28, i1 false, i1 false)  ; CreateHandleFromHeap(index,samplerHeap,nonUniformIndex)
  %30 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %29, %dx.types.ResourceProperties { i32 4098, i32 265 })  ; AnnotateHandle(res,props)  resource: RWTexture2D<F32>
  %31 = extractvalue %dx.types.CBufRet.i32 %27, 0
  %32 = call %dx.types.Handle @dx.op.createHandleFromHeap(i32 218, i32 %31, i1 false, i1 false)  ; CreateHandleFromHeap(index,samplerHeap,nonUniformIndex)
  %33 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %32, %dx.types.ResourceProperties { i32 4098, i32 265 })  ; AnnotateHandle(res,props)  resource: RWTexture2D<F32>
  %34 = extractvalue %dx.types.CBufRet.i32 %27, 2
  %35 = call %dx.types.Handle @dx.op.createHandleFromHeap(i32 218, i32 %34, i1 false, i1 false)  ; CreateHandleFromHeap(index,samplerHeap,nonUniformIndex)
  %36 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %35, %dx.types.ResourceProperties { i32 2, i32 1033 })  ; AnnotateHandle(res,props)  resource: Texture2D<4xF32>
  %37 = call %dx.types.Dimensions @dx.op.getDimensions(i32 72, %dx.types.Handle %30, i32 0)  ; GetDimensions(handle,mipLevel)
  %38 = extractvalue %dx.types.Dimensions %37, 0
  %39 = extractvalue %dx.types.Dimensions %37, 1
  %40 = icmp slt i32 %3, 3
  br i1 %40, label %41, label %47

; <label>:41                                      ; preds = %0
  %42 = add nsw i32 %6, -3
  %43 = call i32 @dx.op.binary.i32(i32 37, i32 %42, i32 0)  ; IMax(a,b)
  %44 = call %dx.types.ResRet.f32 @dx.op.textureLoad.f32(i32 66, %dx.types.Handle %30, i32 undef, i32 %5, i32 %43, i32 undef, i32 undef, i32 undef, i32 undef)  ; TextureLoad(srv,mipLevelOrSampleCount,coord0,coord1,coord2,offset0,offset1,offset2)
  %45 = extractvalue %dx.types.ResRet.f32 %44, 0
  %46 = getelementptr [70 x float], [70 x float] addrspace(3)* @"\01?gCache@@3PAMA", i32 0, i32 %4
  store float %45, float addrspace(3)* %46, align 4, !tbaa !9
  br label %47

; <label>:47                                      ; preds = %41, %0
  %48 = icmp sgt i32 %4, 60
  %49 = add i32 %39, -1
  br i1 %48, label %50, label %57

; <label>:50                                      ; preds = %47
  %51 = add nsw i32 %6, 3
  %52 = call i32 @dx.op.binary.i32(i32 40, i32 %51, i32 %49)  ; UMin(a,b)
  %53 = call %dx.types.ResRet.f32 @dx.op.textureLoad.f32(i32 66, %dx.types.Handle %30, i32 undef, i32 %5, i32 %52, i32 undef, i32 undef, i32 undef, i32 undef)  ; TextureLoad(srv,mipLevelOrSampleCount,coord0,coord1,coord2,offset0,offset1,offset2)
  %54 = extractvalue %dx.types.ResRet.f32 %53, 0
  %55 = add nsw i32 %4, 6
  %56 = getelementptr [70 x float], [70 x float] addrspace(3)* @"\01?gCache@@3PAMA", i32 0, i32 %55
  store float %54, float addrspace(3)* %56, align 4, !tbaa !9
  br label %57

; <label>:57                                      ; preds = %50, %47
  %58 = add i32 %38, -1
  %59 = call i32 @dx.op.binary.i32(i32 40, i32 %5, i32 %58)  ; UMin(a,b)
  %60 = call i32 @dx.op.binary.i32(i32 40, i32 %6, i32 %49)  ; UMin(a,b)
  %61 = call %dx.types.ResRet.f32 @dx.op.textureLoad.f32(i32 66, %dx.types.Handle %30, i32 undef, i32 %59, i32 %60, i32 undef, i32 undef, i32 undef, i32 undef)  ; TextureLoad(srv,mipLevelOrSampleCount,coord0,coord1,coord2,offset0,offset1,offset2)
  %62 = extractvalue %dx.types.ResRet.f32 %61, 0
  %63 = add nsw i32 %4, 3
  %64 = getelementptr [70 x float], [70 x float] addrspace(3)* @"\01?gCache@@3PAMA", i32 0, i32 %63
  store float %62, float addrspace(3)* %64, align 4, !tbaa !9
  call void @dx.op.barrier(i32 80, i32 9)  ; Barrier(barrierMode)
  %65 = call %dx.types.ResRet.f32 @dx.op.textureLoad.f32(i32 66, %dx.types.Handle %30, i32 undef, i32 %5, i32 %6, i32 undef, i32 undef, i32 undef, i32 undef)  ; TextureLoad(srv,mipLevelOrSampleCount,coord0,coord1,coord2,offset0,offset1,offset2)
  %66 = extractvalue %dx.types.ResRet.f32 %65, 0
  %67 = fmul fast float %66, %17
  %68 = call %dx.types.ResRet.f32 @dx.op.textureLoad.f32(i32 66, %dx.types.Handle %36, i32 0, i32 %5, i32 %6, i32 undef, i32 undef, i32 undef, i32 undef)  ; TextureLoad(srv,mipLevelOrSampleCount,coord0,coord1,coord2,offset0,offset1,offset2)
  %69 = extractvalue %dx.types.ResRet.f32 %68, 0
  %70 = extractvalue %dx.types.ResRet.f32 %68, 1
  %71 = extractvalue %dx.types.ResRet.f32 %68, 2
  %72 = extractvalue %dx.types.ResRet.f32 %68, 3
  br label %75

; <label>:73                                      ; preds = %103
  %74 = fdiv fast float %104, %105
  call void @dx.op.textureStore.f32(i32 67, %dx.types.Handle %33, i32 %5, i32 %6, i32 undef, float %74, float %74, float %74, float %74, i8 15)  ; TextureStore(srv,coord0,coord1,coord2,value0,value1,value2,value3,mask)
  call void @llvm.lifetime.end(i64 32, i8* %8) #0
  ret void

; <label>:75                                      ; preds = %108, %57
  %76 = phi float [ %67, %57 ], [ %109, %108 ]
  %77 = phi float [ %17, %57 ], [ %110, %108 ]
  %78 = phi i32 [ -3, %57 ], [ %111, %108 ]
  %79 = add nsw i32 %63, %78
  %80 = icmp eq i32 %78, 0
  br i1 %80, label %108, label %81

; <label>:81                                      ; preds = %75
  %82 = add i32 %78, %6
  %83 = call %dx.types.ResRet.f32 @dx.op.textureLoad.f32(i32 66, %dx.types.Handle %36, i32 0, i32 %5, i32 %82, i32 undef, i32 undef, i32 undef, i32 undef)  ; TextureLoad(srv,mipLevelOrSampleCount,coord0,coord1,coord2,offset0,offset1,offset2)
  %84 = extractvalue %dx.types.ResRet.f32 %83, 0
  %85 = extractvalue %dx.types.ResRet.f32 %83, 1
  %86 = extractvalue %dx.types.ResRet.f32 %83, 2
  %87 = call float @dx.op.dot3.f32(i32 55, float %84, float %85, float %86, float %69, float %70, float %71)  ; Dot3(ax,ay,az,bx,by,bz)
  %88 = fcmp fast ult float %87, 0x3FE99999A0000000
  br i1 %88, label %103, label %89

; <label>:89                                      ; preds = %81
  %90 = extractvalue %dx.types.ResRet.f32 %83, 3
  %91 = fsub fast float %90, %72
  %92 = call float @dx.op.unary.f32(i32 6, float %91)  ; FAbs(value)
  %93 = fcmp fast ugt float %92, 0x3FC99999A0000000
  br i1 %93, label %103, label %94

; <label>:94                                      ; preds = %89
  %95 = add nsw i32 %78, 3
  %96 = getelementptr inbounds [8 x float], [8 x float]* %7, i32 0, i32 %95
  %97 = load float, float* %96, align 4, !tbaa !9
  %98 = getelementptr [70 x float], [70 x float] addrspace(3)* @"\01?gCache@@3PAMA", i32 0, i32 %79
  %99 = load float, float addrspace(3)* %98, align 4, !tbaa !9
  %100 = fmul fast float %99, %97
  %101 = fadd fast float %100, %76
  %102 = fadd fast float %97, %77
  br label %103

; <label>:103                                     ; preds = %94, %89, %81
  %104 = phi float [ %101, %94 ], [ %76, %89 ], [ %76, %81 ]
  %105 = phi float [ %102, %94 ], [ %77, %89 ], [ %77, %81 ]
  %106 = add nsw i32 %78, 1
  %107 = icmp slt i32 %106, 4
  br i1 %107, label %108, label %73

; <label>:108                                     ; preds = %103, %75
  %109 = phi float [ %104, %103 ], [ %76, %75 ]
  %110 = phi float [ %105, %103 ], [ %77, %75 ]
  %111 = phi i32 [ %106, %103 ], [ 1, %75 ]
  br label %75
}

; Function Attrs: nounwind
declare void @llvm.lifetime.start(i64, i8* nocapture) #0

; Function Attrs: nounwind
declare void @llvm.lifetime.end(i64, i8* nocapture) #0

; Function Attrs: nounwind readnone
declare i32 @dx.op.threadIdInGroup.i32(i32, i32) #1

; Function Attrs: nounwind readnone
declare i32 @dx.op.threadId.i32(i32, i32) #1

; Function Attrs: nounwind readnone
declare %dx.types.Handle @dx.op.createHandleFromHeap(i32, i32, i1, i1) #1

; Function Attrs: nounwind readonly
declare %dx.types.Dimensions @dx.op.getDimensions(i32, %dx.types.Handle, i32) #2

; Function Attrs: nounwind readnone
declare i32 @dx.op.binary.i32(i32, i32, i32) #1

; Function Attrs: nounwind readonly
declare %dx.types.ResRet.f32 @dx.op.textureLoad.f32(i32, %dx.types.Handle, i32, i32, i32, i32, i32, i32, i32) #2

; Function Attrs: nounwind
declare void @dx.op.textureStore.f32(i32, %dx.types.Handle, i32, i32, i32, float, float, float, float, i8) #0

; Function Attrs: noduplicate nounwind
declare void @dx.op.barrier(i32, i32) #3

; Function Attrs: nounwind readnone
declare float @dx.op.dot3.f32(i32, float, float, float, float, float, float) #1

; Function Attrs: nounwind readnone
declare float @dx.op.unary.f32(i32, float) #1

; Function Attrs: nounwind readonly
declare %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32, %dx.types.Handle, i32) #2

; Function Attrs: nounwind readonly
declare %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32, %dx.types.Handle, i32) #2

; Function Attrs: nounwind readnone
declare %dx.types.Handle @dx.op.annotateHandle(i32, %dx.types.Handle, %dx.types.ResourceProperties) #1

; Function Attrs: nounwind readnone
declare %dx.types.Handle @dx.op.createHandleFromBinding(i32, %dx.types.ResBind, i32, i1) #1

attributes #0 = { nounwind }
attributes #1 = { nounwind readnone }
attributes #2 = { nounwind readonly }
attributes #3 = { noduplicate nounwind }

!llvm.ident = !{!0}
!dx.version = !{!1}
!dx.valver = !{!1}
!dx.shaderModel = !{!2}
!dx.resources = !{!3}
!dx.entryPoints = !{!6}

!0 = !{!"dxcoob 1.7.2308.7 (69e54e290)"}
!1 = !{i32 1, i32 7}
!2 = !{!"cs", i32 6, i32 7}
!3 = !{null, null, !4, null}
!4 = !{!5}
!5 = !{i32 0, %cb0* undef, !"", i32 0, i32 0, i32 1, i32 60, null}
!6 = !{void ()* @main, !"main", null, !3, !7}
!7 = !{i32 0, i64 1073741824, i32 4, !8}
!8 = !{i32 1, i32 64, i32 1}
!9 = !{!10, !10, i64 0}
!10 = !{!"float", !11, i64 0}
!11 = !{!"omnipotent char", !12, i64 0}
!12 = !{!"Simple C/C++ TBAA"}

#endif

const unsigned char g_ComputeShaderShadowBlurVert[] = {
  0x44, 0x58, 0x42, 0x43, 0x97, 0xaf, 0xed, 0xe8, 0xf8, 0x80, 0x03, 0x4e,
  0xb4, 0x13, 0x6f, 0x50, 0xc6, 0xa1, 0x85, 0xfc, 0x01, 0x00, 0x00, 0x00,
  0xc0, 0x15, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00,
  0x50, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x70, 0x00, 0x00, 0x00,
  0xd8, 0x00, 0x00, 0x00, 0xa8, 0x09, 0x00, 0x00, 0xe0, 0x09, 0x00, 0x00,
  0xfc, 0x09, 0x00, 0x00, 0x53, 0x46, 0x49, 0x30, 0x08, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x49, 0x53, 0x47, 0x31,
  0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00,
  0x4f, 0x53, 0x47, 0x31, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x08, 0x00, 0x00, 0x00, 0x50, 0x53, 0x56, 0x30, 0x60, 0x00, 0x00, 0x00,
  0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xff, 0xff, 0xff, 0xff, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x53, 0x54, 0x41, 0x54, 0xc8, 0x08, 0x00, 0x00, 0x67, 0x00, 0x05, 0x00,
  0x32, 0x02, 0x00, 0x00, 0x44, 0x58, 0x49, 0x4c, 0x07, 0x01, 0x00, 0x00,
  0x10, 0x00, 0x00, 0x00, 0xb0, 0x08, 0x00, 0x00, 0x42, 0x43, 0xc0, 0xde,
  0x21, 0x0c, 0x00, 0x00, 0x29, 0x02, 0x00, 0x00, 0x0b, 0x82, 0x20, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x13, 0x00, 0x00, 0x00, 0x07, 0x81, 0x23, 0x91,
  0x41, 0xc8, 0x04, 0x49, 0x06, 0x10, 0x32, 0x39, 0x92, 0x01, 0x84, 0x0c,
  0x25, 0x05, 0x08, 0x19, 0x1e, 0x04, 0x8b, 0x62, 0x80, 0x18, 0x45, 0x02,
  0x42, 0x92, 0x0b, 0x42, 0xc4, 0x10, 0x32, 0x14, 0x38, 0x08, 0x18, 0x4b,
  0x0a, 0x32, 0x62, 0x88, 0x48, 0x90, 0x14, 0x20, 0x43, 0x46, 0x88, 0xa5,
  0x00, 0x19, 0x32, 0x42, 0xe4, 0x48, 0x0e, 0x90, 0x11, 0x23, 0xc4, 0x50,
  0x41, 0x51, 0x81, 0x8c, 0xe1, 0x83, 0xe5, 0x8a, 0x04, 0x31, 0x46, 0x06,
  0x51, 0x18, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x1b, 0x88, 0x40, 0x00,
  0x96, 0x0d, 0x84, 0xf0, 0xff, 0xff, 0xff, 0xff, 0x03, 0x20, 0x6d, 0x30,
  0x86, 0xff, 0xff, 0xff, 0xff, 0x1f, 0x00, 0x09, 0xa0, 0x36, 0x18, 0xc4,
  0xff, 0xff, 0xff, 0xff, 0x0f, 0x80, 0x04, 0x54, 0x1b, 0x8c, 0xe2, 0xff,
  0xff, 0xff, 0xff, 0x07, 0x80, 0x01, 0x24, 0x00, 0x49, 0x18, 0x00, 0x00,
  0x04, 0x00, 0x00, 0x00, 0x13, 0x84, 0x40, 0x98, 0x10, 0x0c, 0x13, 0x02,
  0x62, 0x42, 0x20, 0x4c, 0x08, 0x0a, 0x00, 0x00, 0x89, 0x20, 0x00, 0x00,
  0x51, 0x00, 0x00, 0x00, 0x32, 0x22, 0x88, 0x09, 0x20, 0x64, 0x85, 0x04,
  0x13, 0x23, 0xa4, 0x84, 0x04, 0x13, 0x23, 0xe3, 0x84, 0xa1, 0x90, 0x14,
  0x12, 0x4c, 0x8c, 0x8c, 0x0b, 0x84, 0xc4, 0x4c, 0x10, 0xd0, 0xc1, 0x0c,
  0x40, 0x1a, 0x01, 0x83, 0x08, 0xc1, 0x30, 0x02, 0x50, 0x82, 0x81, 0x88,
  0x39, 0x02, 0x50, 0x98, 0x23, 0x40, 0xe8, 0x28, 0xc3, 0x60, 0x20, 0x94,
  0xcc, 0x11, 0x80, 0x41, 0x19, 0x96, 0x65, 0x21, 0xe6, 0x9e, 0xe1, 0xf2,
  0x27, 0xec, 0x21, 0x24, 0x3f, 0x04, 0x9a, 0x61, 0x21, 0x50, 0x80, 0xcc,
  0x11, 0x04, 0xa5, 0x70, 0x96, 0xe5, 0x79, 0x08, 0xba, 0x69, 0xb8, 0xfc,
  0x09, 0x7b, 0x08, 0xc9, 0xef, 0x10, 0x86, 0x68, 0x24, 0xc4, 0x69, 0x24,
  0x44, 0x2c, 0xcb, 0xb2, 0x14, 0x42, 0x5a, 0x9c, 0x85, 0xa6, 0x42, 0x2c,
  0xcb, 0xb2, 0x50, 0x75, 0xd3, 0x70, 0xf9, 0x13, 0xf6, 0x10, 0x92, 0xbf,
  0x12, 0xd2, 0x4a, 0x4c, 0x7e, 0x71, 0xdb, 0xa8, 0x00, 0x00, 0x00, 0x58,
  0x8a, 0x72, 0x2d, 0xce, 0xb2, 0x2c, 0xcb, 0xb2, 0x2c, 0x84, 0x95, 0x65,
  0x58, 0x9c, 0x65, 0x59, 0x00, 0x00, 0x00, 0x0e, 0xd2, 0xca, 0x30, 0x2c,
  0x0b, 0x71, 0x05, 0x01, 0x16, 0x00, 0x00, 0x00, 0x00, 0x20, 0xaf, 0x0c,
  0xc0, 0x02, 0x10, 0x78, 0xd4, 0x70, 0xf9, 0x13, 0xf6, 0x10, 0x92, 0xcf,
  0x6d, 0x54, 0xb1, 0x12, 0x93, 0x8f, 0xdc, 0x36, 0x22, 0x96, 0x65, 0x59,
  0x0a, 0x21, 0x2e, 0xce, 0x42, 0xe3, 0x51, 0xc3, 0xe5, 0x4f, 0xd8, 0x43,
  0x48, 0x3e, 0xb7, 0x51, 0xc5, 0x4a, 0x4c, 0x7e, 0x71, 0xdb, 0x88, 0x00,
  0x00, 0x00, 0x28, 0x44, 0xb9, 0x38, 0x0b, 0x99, 0xb7, 0x0d, 0x97, 0x3f,
  0x61, 0x0f, 0x21, 0xf9, 0x2b, 0x21, 0x39, 0x54, 0x24, 0x10, 0x69, 0xe4,
  0x3c, 0x44, 0x34, 0x21, 0x84, 0x84, 0x84, 0x65, 0x29, 0x84, 0xb3, 0x38,
  0x28, 0xa5, 0x07, 0x0d, 0x97, 0x3f, 0x61, 0x0f, 0x21, 0xf9, 0x2b, 0x21,
  0x6d, 0x48, 0x33, 0x20, 0x62, 0x59, 0x96, 0xa3, 0x14, 0xce, 0xb2, 0x2e,
  0x0f, 0xb1, 0x03, 0x01, 0xc3, 0x08, 0x04, 0x90, 0x03, 0xef, 0x51, 0xd2,
  0x14, 0x51, 0xc2, 0xe4, 0x6f, 0x0b, 0x15, 0x71, 0x4e, 0x23, 0x4d, 0x40,
  0x33, 0x49, 0x88, 0x80, 0x97, 0x65, 0xb9, 0x41, 0x08, 0x68, 0x14, 0xc4,
  0x24, 0x03, 0x00, 0x00, 0x13, 0x14, 0x72, 0xc0, 0x87, 0x74, 0x60, 0x87,
  0x36, 0x68, 0x87, 0x79, 0x68, 0x03, 0x72, 0xc0, 0x87, 0x0d, 0xaf, 0x50,
  0x0e, 0x6d, 0xd0, 0x0e, 0x7a, 0x50, 0x0e, 0x6d, 0x00, 0x0f, 0x7a, 0x30,
  0x07, 0x72, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d, 0x90, 0x0e, 0x71, 0xa0,
  0x07, 0x73, 0x20, 0x07, 0x6d, 0x90, 0x0e, 0x78, 0xa0, 0x07, 0x73, 0x20,
  0x07, 0x6d, 0x90, 0x0e, 0x71, 0x60, 0x07, 0x7a, 0x30, 0x07, 0x72, 0xd0,
  0x06, 0xe9, 0x30, 0x07, 0x72, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d, 0x90,
  0x0e, 0x76, 0x40, 0x07, 0x7a, 0x60, 0x07, 0x74, 0xd0, 0x06, 0xe6, 0x10,
  0x07, 0x76, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d, 0x60, 0x0e, 0x73, 0x20,
  0x07, 0x7a, 0x30, 0x07, 0x72, 0xd0, 0x06, 0xe6, 0x60, 0x07, 0x74, 0xa0,
  0x07, 0x76, 0x40, 0x07, 0x6d, 0xe0, 0x0e, 0x78, 0xa0, 0x07, 0x71, 0x60,
  0x07, 0x7a, 0x30, 0x07, 0x72, 0xa0, 0x07, 0x76, 0x40, 0x07, 0x3a, 0x0f,
  0x24, 0x90, 0x21, 0x23, 0x45, 0x44, 0x00, 0x76, 0x00, 0xf0, 0x90, 0x87,
  0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x21,
  0x4f, 0x02, 0x04, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x43, 0x9e, 0x04, 0x08, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x86, 0x3c, 0x0c, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x0c, 0x79, 0x18, 0x20, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x18, 0xf2, 0x40, 0x40, 0x00, 0x08, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x30, 0xe4, 0x99, 0x80, 0x00, 0x18, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0xc8, 0x53, 0x01, 0x01, 0x20, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x90, 0x07, 0x03, 0x02, 0x60,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x21, 0x8f, 0x06, 0x04,
  0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x43, 0x1e, 0x0e,
  0x08, 0x80, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x86, 0x3c,
  0x1e, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c,
  0x79, 0xc0, 0x00, 0x08, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x86, 0x3c, 0x63, 0x00, 0x04, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x43, 0x1e, 0x33, 0x00, 0x02, 0x60, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x80, 0x21, 0x4f, 0x1a, 0x00, 0x01, 0x20, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x90, 0x87, 0x0d, 0x80, 0x00,
  0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x0b, 0x04, 0x00,
  0x10, 0x00, 0x00, 0x00, 0x32, 0x1e, 0x98, 0x18, 0x19, 0x11, 0x4c, 0x90,
  0x8c, 0x09, 0x26, 0x47, 0xc6, 0x04, 0x43, 0x32, 0x0a, 0x10, 0x10, 0x10,
  0x10, 0x81, 0x96, 0x12, 0x28, 0x87, 0x11, 0x80, 0x62, 0x28, 0xbc, 0x32,
  0x28, 0x89, 0x02, 0x2b, 0x85, 0x42, 0x2b, 0xb8, 0x42, 0x28, 0xc0, 0x80,
  0x02, 0x2a, 0x58, 0x82, 0xa2, 0x28, 0xff, 0x80, 0xf2, 0xa0, 0x78, 0x06,
  0x80, 0xe4, 0x19, 0x00, 0x9a, 0x67, 0x00, 0x00, 0x79, 0x18, 0x00, 0x00,
  0x98, 0x00, 0x00, 0x00, 0x1a, 0x03, 0x4c, 0x90, 0x46, 0x02, 0x13, 0xc4,
  0x8e, 0x0c, 0x6f, 0xec, 0xed, 0x4d, 0x0c, 0x24, 0xc6, 0xe5, 0xc6, 0x45,
  0x66, 0x06, 0x06, 0xc7, 0xe5, 0x06, 0x04, 0xc5, 0x26, 0xa7, 0xac, 0x86,
  0xa6, 0x4c, 0x26, 0x07, 0x26, 0x65, 0x43, 0x10, 0x4c, 0x10, 0x96, 0x69,
  0x82, 0xb0, 0x50, 0x1b, 0x84, 0x81, 0x98, 0x20, 0x2c, 0xd5, 0x06, 0xc1,
  0x30, 0x28, 0x8c, 0xcd, 0x4d, 0x10, 0x16, 0x6b, 0xc3, 0x80, 0x24, 0xc4,
  0x04, 0x61, 0x0e, 0xce, 0x80, 0xc3, 0x98, 0x18, 0xcc, 0x04, 0x61, 0xb9,
  0x36, 0x20, 0xc6, 0xc2, 0x18, 0xc6, 0xd0, 0x00, 0x1b, 0x02, 0x67, 0x03,
  0x01, 0x00, 0x0f, 0x30, 0x41, 0x88, 0x83, 0x32, 0xe0, 0x22, 0xc6, 0x56,
  0x27, 0x77, 0x55, 0x96, 0x76, 0x86, 0x46, 0x37, 0x37, 0x41, 0x58, 0xb0,
  0x09, 0xc2, 0x92, 0x6d, 0x30, 0x12, 0x69, 0x32, 0x08, 0x8a, 0x8d, 0x18,
  0x5b, 0x9d, 0x5c, 0x53, 0x18, 0x1c, 0x4c, 0x55, 0x98, 0x5d, 0x12, 0xd1,
  0x04, 0x61, 0xd1, 0x26, 0x08, 0xcb, 0xb6, 0xc1, 0x48, 0xac, 0xe9, 0x22,
  0x30, 0x36, 0x62, 0x6c, 0x75, 0x72, 0x4d, 0x61, 0x70, 0x31, 0x55, 0x61,
  0x76, 0x49, 0x44, 0x13, 0x84, 0x85, 0xdb, 0x60, 0x24, 0xda, 0xb4, 0x11,
  0x18, 0x27, 0xb7, 0x37, 0xb9, 0xb6, 0x30, 0x36, 0xa2, 0x32, 0x38, 0x3a,
  0xb4, 0xa6, 0x30, 0xb8, 0x29, 0x39, 0xbb, 0x24, 0xa2, 0x09, 0xc2, 0xd2,
  0x6d, 0x30, 0x92, 0x6e, 0xf2, 0x08, 0x6c, 0x43, 0xd1, 0x54, 0x19, 0xf7,
  0x4d, 0x10, 0xe4, 0xc0, 0x0c, 0x36, 0x10, 0x09, 0x33, 0x19, 0x1b, 0x84,
  0x46, 0x0c, 0x36, 0x14, 0x46, 0x04, 0x06, 0x61, 0x30, 0x06, 0x13, 0x84,
  0x22, 0xd8, 0x00, 0x6c, 0x18, 0x0c, 0x33, 0x30, 0x83, 0x0d, 0xc1, 0x19,
  0x6c, 0x18, 0x86, 0x32, 0x40, 0x03, 0x12, 0x6d, 0x61, 0x69, 0x6e, 0x13,
  0x04, 0x43, 0x9a, 0x20, 0x2c, 0xde, 0x04, 0x61, 0xf9, 0x36, 0x0c, 0x43,
  0x1b, 0x0c, 0x1b, 0x08, 0x63, 0x0d, 0xd8, 0xc0, 0x0d, 0x36, 0x14, 0x65,
  0xa0, 0x06, 0x00, 0xf4, 0x06, 0x8c, 0xc2, 0xe4, 0xe4, 0xc2, 0xf2, 0xbe,
  0xd8, 0xde, 0xc6, 0xc2, 0xd8, 0xbe, 0xc4, 0xf2, 0xe8, 0xca, 0xe6, 0x26,
  0x08, 0x0b, 0x18, 0x10, 0x0a, 0x93, 0x93, 0x0b, 0xcb, 0xfb, 0x62, 0x7b,
  0x1b, 0x0b, 0x63, 0xfb, 0x62, 0x23, 0x9b, 0xa3, 0x23, 0x14, 0x26, 0x27,
  0x17, 0x96, 0xf7, 0x45, 0x77, 0x36, 0xd7, 0xf6, 0x25, 0x96, 0x47, 0x57,
  0x36, 0x37, 0x41, 0x58, 0xc2, 0x80, 0x4f, 0x98, 0x9c, 0x5c, 0x58, 0xde,
  0x17, 0xdd, 0xd9, 0x5c, 0xdb, 0x17, 0x1b, 0xd9, 0x1c, 0x1d, 0x0f, 0xb1,
  0x30, 0x39, 0xb9, 0xb4, 0x32, 0x39, 0x22, 0x62, 0x72, 0x61, 0x6e, 0x63,
  0x68, 0x65, 0x73, 0x34, 0xcc, 0xd8, 0xde, 0xc2, 0xe8, 0xe6, 0x26, 0x08,
  0x8b, 0x18, 0xb0, 0x48, 0x73, 0x9b, 0xa3, 0x9b, 0x9b, 0x20, 0x2c, 0x63,
  0x40, 0x22, 0xcd, 0x8d, 0x6e, 0x6e, 0x82, 0xb0, 0x90, 0x01, 0x11, 0xba,
  0x32, 0xbc, 0x2f, 0xb6, 0xb7, 0x30, 0x32, 0x26, 0x74, 0x65, 0x78, 0x5f,
  0x73, 0x74, 0x6f, 0x72, 0x65, 0x2c, 0xea, 0xd2, 0xdc, 0xe8, 0xe6, 0x36,
  0x60, 0x71, 0x20, 0x07, 0x73, 0x40, 0xd1, 0x41, 0x1d, 0xd8, 0x01, 0x1b,
  0xdc, 0xc1, 0x80, 0x07, 0x49, 0x1e, 0xe8, 0xc1, 0x1e, 0xf0, 0x41, 0x1f,
  0xf8, 0xc1, 0x1f, 0x24, 0xa0, 0x30, 0x84, 0xc2, 0x54, 0x85, 0x8d, 0xcd,
  0xae, 0xcd, 0x25, 0x8d, 0xac, 0xcc, 0x8d, 0x6e, 0x4a, 0x10, 0x54, 0x21,
  0xc3, 0x73, 0xb1, 0x2b, 0x93, 0x9b, 0x4b, 0x7b, 0x73, 0x9b, 0x12, 0x10,
  0x4d, 0xc8, 0xf0, 0x5c, 0xec, 0xc2, 0xd8, 0xec, 0xca, 0xe4, 0xa6, 0x04,
  0x46, 0x1d, 0x32, 0x3c, 0x97, 0x39, 0xb4, 0x30, 0xb2, 0x32, 0xb9, 0xa6,
  0x37, 0xb2, 0x32, 0xb6, 0x29, 0x41, 0x52, 0x86, 0x0c, 0xcf, 0x45, 0xae,
  0x6c, 0xee, 0xad, 0x4e, 0x6e, 0xac, 0x6c, 0x6e, 0x4a, 0xf0, 0x54, 0x22,
  0xc3, 0x73, 0xa1, 0xcb, 0x83, 0x2b, 0x0b, 0x72, 0x73, 0x7b, 0xa3, 0x0b,
  0xa3, 0x4b, 0x7b, 0x73, 0x9b, 0x9b, 0x22, 0x8c, 0x01, 0x1a, 0xd4, 0x21,
  0xc3, 0x73, 0x29, 0x73, 0xa3, 0x93, 0xcb, 0x83, 0x7a, 0x4b, 0x73, 0xa3,
  0x9b, 0x9b, 0x12, 0xbc, 0x41, 0x17, 0x32, 0x3c, 0x97, 0xb1, 0xb7, 0x3a,
  0x37, 0xba, 0x32, 0xb9, 0xb9, 0x29, 0x41, 0x28, 0x00, 0x00, 0x00, 0x00,
  0x79, 0x18, 0x00, 0x00, 0x51, 0x00, 0x00, 0x00, 0x33, 0x08, 0x80, 0x1c,
  0xc4, 0xe1, 0x1c, 0x66, 0x14, 0x01, 0x3d, 0x88, 0x43, 0x38, 0x84, 0xc3,
  0x8c, 0x42, 0x80, 0x07, 0x79, 0x78, 0x07, 0x73, 0x98, 0x71, 0x0c, 0xe6,
  0x00, 0x0f, 0xed, 0x10, 0x0e, 0xf4, 0x80, 0x0e, 0x33, 0x0c, 0x42, 0x1e,
  0xc2, 0xc1, 0x1d, 0xce, 0xa1, 0x1c, 0x66, 0x30, 0x05, 0x3d, 0x88, 0x43,
  0x38, 0x84, 0x83, 0x1b, 0xcc, 0x03, 0x3d, 0xc8, 0x43, 0x3d, 0x8c, 0x03,
  0x3d, 0xcc, 0x78, 0x8c, 0x74, 0x70, 0x07, 0x7b, 0x08, 0x07, 0x79, 0x48,
  0x87, 0x70, 0x70, 0x07, 0x7a, 0x70, 0x03, 0x76, 0x78, 0x87, 0x70, 0x20,
  0x87, 0x19, 0xcc, 0x11, 0x0e, 0xec, 0x90, 0x0e, 0xe1, 0x30, 0x0f, 0x6e,
  0x30, 0x0f, 0xe3, 0xf0, 0x0e, 0xf0, 0x50, 0x0e, 0x33, 0x10, 0xc4, 0x1d,
  0xde, 0x21, 0x1c, 0xd8, 0x21, 0x1d, 0xc2, 0x61, 0x1e, 0x66, 0x30, 0x89,
  0x3b, 0xbc, 0x83, 0x3b, 0xd0, 0x43, 0x39, 0xb4, 0x03, 0x3c, 0xbc, 0x83,
  0x3c, 0x84, 0x03, 0x3b, 0xcc, 0xf0, 0x14, 0x76, 0x60, 0x07, 0x7b, 0x68,
  0x07, 0x37, 0x68, 0x87, 0x72, 0x68, 0x07, 0x37, 0x80, 0x87, 0x70, 0x90,
  0x87, 0x70, 0x60, 0x07, 0x76, 0x28, 0x07, 0x76, 0xf8, 0x05, 0x76, 0x78,
  0x87, 0x77, 0x80, 0x87, 0x5f, 0x08, 0x87, 0x71, 0x18, 0x87, 0x72, 0x98,
  0x87, 0x79, 0x98, 0x81, 0x2c, 0xee, 0xf0, 0x0e, 0xee, 0xe0, 0x0e, 0xf5,
  0xc0, 0x0e, 0xec, 0x30, 0x03, 0x62, 0xc8, 0xa1, 0x1c, 0xe4, 0xa1, 0x1c,
  0xcc, 0xa1, 0x1c, 0xe4, 0xa1, 0x1c, 0xdc, 0x61, 0x1c, 0xca, 0x21, 0x1c,
  0xc4, 0x81, 0x1d, 0xca, 0x61, 0x06, 0xd6, 0x90, 0x43, 0x39, 0xc8, 0x43,
  0x39, 0x98, 0x43, 0x39, 0xc8, 0x43, 0x39, 0xb8, 0xc3, 0x38, 0x94, 0x43,
  0x38, 0x88, 0x03, 0x3b, 0x94, 0xc3, 0x2f, 0xbc, 0x83, 0x3c, 0xfc, 0x82,
  0x3b, 0xd4, 0x03, 0x3b, 0xb0, 0xc3, 0x0c, 0xc4, 0x21, 0x07, 0x7c, 0x70,
  0x03, 0x7a, 0x28, 0x87, 0x76, 0x80, 0x87, 0x19, 0xd1, 0x43, 0x0e, 0xf8,
  0xe0, 0x06, 0xe4, 0x20, 0x0e, 0xe7, 0xe0, 0x06, 0xf6, 0x10, 0x0e, 0xf2,
  0xc0, 0x0e, 0xe1, 0x90, 0x0f, 0xef, 0x50, 0x0f, 0xf4, 0x30, 0x83, 0x81,
  0xc8, 0x01, 0x1f, 0xdc, 0x40, 0x1c, 0xe4, 0xa1, 0x1c, 0xc2, 0x61, 0x1d,
  0xdc, 0x40, 0x1c, 0xe4, 0x01, 0x00, 0x00, 0x00, 0x71, 0x20, 0x00, 0x00,
  0x4c, 0x00, 0x00, 0x00, 0x05, 0xf0, 0x04, 0x7e, 0xe7, 0x61, 0x78, 0x8c,
  0x2e, 0x03, 0x81, 0x33, 0x68, 0xb0, 0x19, 0x34, 0x08, 0x6a, 0xb8, 0x7c,
  0xe7, 0xf1, 0x81, 0xa6, 0x71, 0x26, 0x60, 0x22, 0x42, 0xa0, 0x19, 0x16,
  0xc2, 0x16, 0x9a, 0xe1, 0xf2, 0x9d, 0xc7, 0x0f, 0x80, 0x28, 0x42, 0x88,
  0xc8, 0x10, 0xa0, 0xe1, 0xf2, 0x9d, 0xc7, 0x0f, 0x90, 0x06, 0x88, 0x30,
  0x1f, 0xb9, 0x6d, 0x7b, 0xd8, 0x86, 0xcb, 0x77, 0x1e, 0x5f, 0x08, 0xa8,
  0xa2, 0x20, 0xa2, 0xd2, 0x01, 0x86, 0x92, 0x30, 0x00, 0x01, 0xf3, 0x8b,
  0xdb, 0x36, 0x87, 0x6d, 0xb8, 0x7c, 0xe7, 0xf1, 0x85, 0x80, 0x2a, 0x0a,
  0x22, 0x2a, 0x1d, 0x60, 0x28, 0x09, 0x03, 0x10, 0x30, 0x1f, 0xb9, 0x6d,
  0x8b, 0xe8, 0x86, 0xcb, 0x77, 0x1e, 0x5f, 0x88, 0x08, 0x60, 0x22, 0x42,
  0xa0, 0x19, 0x16, 0xe2, 0x8b, 0x1c, 0x66, 0x43, 0x9a, 0x01, 0x69, 0x0c,
  0x33, 0xd0, 0x86, 0xcb, 0x77, 0x1e, 0x5f, 0x88, 0x08, 0x60, 0x22, 0x42,
  0xa0, 0x19, 0x16, 0xe2, 0x8b, 0x1c, 0x26, 0x24, 0x80, 0xc7, 0x18, 0x9c,
  0xe1, 0xf2, 0x9d, 0xc7, 0x1f, 0x9c, 0xe9, 0xf6, 0x8b, 0xdb, 0xb6, 0x83,
  0x69, 0xb8, 0x7c, 0xe7, 0xf1, 0x0d, 0x62, 0xea, 0x10, 0x86, 0x68, 0x24,
  0xc4, 0x69, 0x24, 0x4b, 0xa8, 0x86, 0xcb, 0x77, 0x1e, 0x7f, 0x22, 0xae,
  0x89, 0x8a, 0x88, 0xd2, 0x01, 0x06, 0xbf, 0xb8, 0x6d, 0x53, 0xb0, 0x86,
  0xcb, 0x77, 0x1e, 0x7f, 0x22, 0xae, 0x89, 0x8a, 0x08, 0x76, 0x72, 0x22,
  0xc2, 0x2f, 0x6e, 0xdb, 0x0a, 0xa4, 0xe1, 0xf2, 0x9d, 0xc7, 0x9f, 0x8e,
  0x88, 0x00, 0x06, 0x71, 0xf0, 0x91, 0xdb, 0x36, 0x82, 0x6c, 0xb8, 0x7c,
  0xe7, 0xf1, 0xa7, 0x23, 0x22, 0x80, 0x41, 0x1c, 0xc4, 0x06, 0x8c, 0x1c,
  0xea, 0xf1, 0x91, 0xdb, 0xb6, 0x86, 0x67, 0xb8, 0x7c, 0xe7, 0xf1, 0xa9,
  0x06, 0x88, 0x30, 0xbf, 0xb8, 0x6d, 0x1b, 0x88, 0x96, 0xa5, 0x62, 0xfc,
  0x05, 0x29, 0x88, 0x09, 0x61, 0x08, 0x9f, 0x68, 0x06, 0x13, 0x98, 0x96,
  0xa5, 0x62, 0xfc, 0x05, 0x29, 0x88, 0x09, 0x61, 0x08, 0x5f, 0x9a, 0x80,
  0x68, 0xb2, 0x00, 0x82, 0x01, 0x90, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x49, 0x4c, 0x44, 0x4e, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2b, 0x00,
  0x53, 0x68, 0x61, 0x64, 0x65, 0x72, 0x73, 0x5c, 0x50, 0x44, 0x42, 0x5c,
  0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x53, 0x68, 0x61, 0x64, 0x65,
  0x72, 0x53, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x42, 0x6c, 0x75, 0x72, 0x56,
  0x65, 0x72, 0x74, 0x2e, 0x70, 0x64, 0x62, 0x00, 0x48, 0x41, 0x53, 0x48,
  0x14, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2d, 0xef, 0xd4, 0xbd,
  0x29, 0x59, 0x0e, 0xf3, 0xb2, 0xc6, 0x7b, 0xb6, 0xf7, 0x35, 0x48, 0x00,
  0x44, 0x58, 0x49, 0x4c, 0xbc, 0x0b, 0x00, 0x00, 0x67, 0x00, 0x05, 0x00,
  0xef, 0x02, 0x00, 0x00, 0x44, 0x58, 0x49, 0x4c, 0x07, 0x01, 0x00, 0x00,
  0x10, 0x00, 0x00, 0x00, 0xa4, 0x0b, 0x00, 0x00, 0x42, 0x43, 0xc0, 0xde,
  0x21, 0x0c, 0x00, 0x00, 0xe6, 0x02, 0x00, 0x00, 0x0b, 0x82, 0x20, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x13, 0x00, 0x00, 0x00, 0x07, 0x81, 0x23, 0x91,
  0x41, 0xc8, 0x04, 0x49, 0x06, 0x10, 0x32, 0x39, 0x92, 0x01, 0x84, 0x0c,
  0x25, 0x05, 0x08, 0x19, 0x1e, 0x04, 0x8b, 0x62, 0x80, 0x18, 0x45, 0x02,
  0x42, 0x92, 0x0b, 0x42, 0xc4, 0x10, 0x32, 0x14, 0x38, 0x08, 0x18, 0x4b,
  0x0a, 0x32, 0x62, 0x88, 0x48, 0x90, 0x14, 0x20, 0x43, 0x46, 0x88, 0xa5,
  0x00, 0x19, 0x32, 0x42, 0xe4, 0x48, 0x0e, 0x90, 0x11, 0x23, 0xc4, 0x50,
  0x41, 0x51, 0x81, 0x8c, 0xe1, 0x83, 0xe5, 0x8a, 0x04, 0x31, 0x46, 0x06,
  0x51, 0x18, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x1b, 0x88, 0x40, 0x00,
  0x96, 0x0d, 0x84, 0xf0, 0xff, 0xff, 0xff, 0xff, 0x03, 0x20, 0x6d, 0x30,
  0x86, 0xff, 0xff, 0xff, 0xff, 0x1f, 0x00, 0x09, 0xa0, 0x36, 0x18, 0xc4,
  0xff, 0xff, 0xff, 0xff, 0x0f, 0x80, 0x04, 0x54, 0x1b, 0x8c, 0xe2, 0xff,
  0xff, 0xff, 0xff, 0x07, 0x80, 0x01, 0x24, 0x00, 0x49, 0x18, 0x00, 0x00,
  0x04, 0x00, 0x00, 0x00, 0x13, 0x84, 0x40, 0x98, 0x10, 0x0c, 0x13, 0x02,
  0x62, 0x42, 0x20, 0x4c, 0x08, 0x0a, 0x00, 0x00, 0x89, 0x20, 0x00, 0x00,
  0x53, 0x00, 0x00, 0x00, 0x32, 0x22, 0x88, 0x09, 0x20, 0x64, 0x85, 0x04,
  0x13, 0x23, 0xa4, 0x84, 0x04, 0x13, 0x23, 0xe3, 0x84, 0xa1, 0x90, 0x14,
  0x12, 0x4c, 0x8c, 0x8c, 0x0b, 0x84, 0xc4, 0x4c, 0x10, 0xe4, 0xc1, 0x0c,
  0x40, 0x1a, 0x01, 0x83, 0x08, 0xc1, 0x30, 0x02, 0x50, 0x82, 0x81, 0x88,
  0x39, 0x02, 0x50, 0x98, 0x23, 0x40, 0xe8, 0x28, 0xc3, 0x60, 0x20, 0x94,
  0xcc, 0x11, 0x80, 0x41, 0x19, 0x96, 0x65, 0x21, 0xe6, 0x9e, 0xe1, 0xf2,
  0x27, 0xec, 0x21, 0x24, 0x3f, 0x04, 0x9a, 0x61, 0x21, 0x50, 0x80, 0xcc,
  0x11, 0x04, 0xa5, 0x70, 0x96, 0xe5, 0x79, 0x08, 0xba, 0x69, 0xb8, 0xfc,
  0x09, 0x7b, 0x08, 0xc9, 0xef, 0x10, 0x86, 0x68, 0x24, 0xc4, 0x69, 0x24,
  0x44, 0x2c, 0xcb, 0xb2, 0x14, 0x42, 0x5a, 0x9c, 0x85, 0xa6, 0x42, 0x2c,
  0xcb, 0xb2, 0x50, 0x75, 0xd3, 0x70, 0xf9, 0x13, 0xf6, 0x10, 0x92, 0xbf,
  0x12, 0xd2, 0x4a, 0x4c, 0x7e, 0x71, 0xdb, 0xa8, 0x00, 0x00, 0x00, 0x58,
  0x8a, 0x72, 0x2d, 0xce, 0xb2, 0x2c, 0xcb, 0xb2, 0x2c, 0x84, 0x95, 0x65,
  0x58, 0x9c, 0x65, 0x59, 0x00, 0x00, 0x00, 0x0e, 0xd2, 0xca, 0x30, 0x2c,
  0x0b, 0x71, 0x05, 0x01, 0x16, 0x00, 0x00, 0x00, 0x00, 0x20, 0xaf, 0x0c,
  0xc0, 0x02, 0x10, 0x78, 0xd4, 0x70, 0xf9, 0x13, 0xf6, 0x10, 0x92, 0xcf,
  0x6d, 0x54, 0xb1, 0x12, 0x93, 0x8f, 0xdc, 0x36, 0x22, 0x96, 0x65, 0x59,
  0x0a, 0x21, 0x2e, 0xce, 0x42, 0xe3, 0x51, 0xc3, 0xe5, 0x4f, 0xd8, 0x43,
  0x48, 0x3e, 0xb7, 0x51, 0xc5, 0x4a, 0x4c, 0x7e, 0x71, 0xdb, 0x88, 0x00,
  0x00, 0x00, 0x28, 0x44, 0xb9, 0x38, 0x0b, 0x99, 0xb7, 0x0d, 0x97, 0x3f,
  0x61, 0x0f, 0x21, 0xf9, 0x2b, 0x21, 0x39, 0x54, 0x24, 0x10, 0x69, 0xe4,
  0x3c, 0x44, 0x34, 0x21, 0x84, 0x84, 0x84, 0x65, 0x29, 0x84, 0xb3, 0x38,
  0x28, 0xa5, 0x07, 0x0d, 0x97, 0x3f, 0x61, 0x0f, 0x21, 0xf9, 0x2b, 0x21,
  0x6d, 0x48, 0x33, 0x20, 0x62, 0x59, 0x96, 0xa3, 0x14, 0xce, 0xb2, 0x2e,
  0x0f, 0xb1, 0x03, 0x01, 0xc3, 0x08, 0x04, 0x90, 0x03, 0xef, 0x51, 0xd2,
  0x14, 0x51, 0xc2, 0xe4, 0x6f, 0x0b, 0x15, 0x71, 0x4e, 0x23, 0x4d, 0x40,
  0x33, 0x49, 0x88, 0x80, 0x97, 0x65, 0xb9, 0x41, 0x08, 0x68, 0x14, 0xc4,
  0x24, 0x27, 0x02, 0x40, 0x34, 0x01, 0x53, 0x00, 0x83, 0x08, 0xc0, 0x00,
  0x13, 0x14, 0x72, 0xc0, 0x87, 0x74, 0x60, 0x87, 0x36, 0x68, 0x87, 0x79,
  0x68, 0x03, 0x72, 0xc0, 0x87, 0x0d, 0xaf, 0x50, 0x0e, 0x6d, 0xd0, 0x0e,
  0x7a, 0x50, 0x0e, 0x6d, 0x00, 0x0f, 0x7a, 0x30, 0x07, 0x72, 0xa0, 0x07,
  0x73, 0x20, 0x07, 0x6d, 0x90, 0x0e, 0x71, 0xa0, 0x07, 0x73, 0x20, 0x07,
  0x6d, 0x90, 0x0e, 0x78, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d, 0x90, 0x0e,
  0x71, 0x60, 0x07, 0x7a, 0x30, 0x07, 0x72, 0xd0, 0x06, 0xe9, 0x30, 0x07,
  0x72, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d, 0x90, 0x0e, 0x76, 0x40, 0x07,
  0x7a, 0x60, 0x07, 0x74, 0xd0, 0x06, 0xe6, 0x10, 0x07, 0x76, 0xa0, 0x07,
  0x73, 0x20, 0x07, 0x6d, 0x60, 0x0e, 0x73, 0x20, 0x07, 0x7a, 0x30, 0x07,
  0x72, 0xd0, 0x06, 0xe6, 0x60, 0x07, 0x74, 0xa0, 0x07, 0x76, 0x40, 0x07,
  0x6d, 0xe0, 0x0e, 0x78, 0xa0, 0x07, 0x71, 0x60, 0x07, 0x7a, 0x30, 0x07,
  0x72, 0xa0, 0x07, 0x76, 0x40, 0x07, 0x3a, 0x0f, 0x24, 0x90, 0x21, 0x23,
  0x45, 0x44, 0x00, 0x76, 0x00, 0xf0, 0x90, 0x87, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x21, 0x4f, 0x02, 0x04, 0x40,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x43, 0x9e, 0x04, 0x08,
  0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x86, 0x3c, 0x0c,
  0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x79,
  0x18, 0x20, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18,
  0xf2, 0x40, 0x40, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x30, 0xe4, 0x99, 0x80, 0x00, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x60, 0xc8, 0x53, 0x01, 0x01, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0xc0, 0x90, 0x07, 0x03, 0x02, 0x60, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x80, 0x21, 0x8f, 0x06, 0x04, 0x00, 0x01, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x43, 0x1e, 0x0e, 0x08, 0x80, 0x02, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x86, 0x3c, 0x1e, 0x10, 0x00, 0x02,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x79, 0xc0, 0x00, 0x08,
  0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x86, 0x3c, 0x63,
  0x00, 0x04, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x43,
  0x1e, 0x33, 0x00, 0x02, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x80, 0x21, 0x4f, 0x1a, 0x00, 0x01, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0xc0, 0x90, 0x87, 0x0d, 0x80, 0x00, 0x10, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x20, 0x0b, 0x04, 0x00, 0x0b, 0x00, 0x00, 0x00,
  0x32, 0x1e, 0x98, 0x14, 0x19, 0x11, 0x4c, 0x90, 0x8c, 0x09, 0x26, 0x47,
  0xc6, 0x04, 0x43, 0x32, 0x0a, 0x10, 0x10, 0x10, 0x10, 0x61, 0x04, 0x80,
  0x96, 0x12, 0x28, 0x87, 0x62, 0x18, 0x01, 0x28, 0xbc, 0x42, 0x28, 0xc0,
  0x00, 0x9a, 0x67, 0x00, 0x00, 0x00, 0x00, 0x00, 0x79, 0x18, 0x00, 0x00,
  0x45, 0x00, 0x00, 0x00, 0x1a, 0x03, 0x4c, 0x90, 0x46, 0x02, 0x13, 0xc4,
  0x8e, 0x0c, 0x6f, 0xec, 0xed, 0x4d, 0x0c, 0x24, 0xc6, 0xe5, 0xc6, 0x45,
  0x66, 0x06, 0x06, 0xc7, 0xe5, 0x06, 0x04, 0xc5, 0x26, 0xa7, 0xac, 0x86,
  0xa6, 0x4c, 0x26, 0x07, 0x26, 0x65, 0x43, 0x10, 0x4c, 0x10, 0x16, 0x6a,
  0x82, 0xb0, 0x54, 0x1b, 0x84, 0x81, 0xa0, 0x30, 0x36, 0x37, 0x41, 0x58,
  0xac, 0x0d, 0x83, 0x71, 0x10, 0x13, 0x84, 0xe5, 0x9a, 0x20, 0xcc, 0xc1,
  0x46, 0x60, 0x82, 0xb0, 0x60, 0x1b, 0x90, 0x44, 0x59, 0x92, 0x64, 0x60,
  0x80, 0x0d, 0x41, 0xb3, 0x81, 0x00, 0x00, 0x07, 0x98, 0x20, 0x14, 0x01,
  0x89, 0xb6, 0xb0, 0x34, 0xb7, 0x09, 0x82, 0x21, 0x4d, 0x10, 0x96, 0x6c,
  0x82, 0xb0, 0x68, 0x1b, 0x86, 0x81, 0x1a, 0x36, 0x10, 0x89, 0x34, 0x55,
  0x1b, 0x0a, 0x28, 0x02, 0x1e, 0x8b, 0x85, 0x19, 0xdb, 0x5b, 0x18, 0x1d,
  0x9f, 0xb7, 0x36, 0xb7, 0x34, 0xb8, 0x37, 0xba, 0x32, 0x37, 0x3a, 0x90,
  0x31, 0xb4, 0x30, 0x39, 0x46, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x20,
  0x43, 0x2f, 0x43, 0x2b, 0x2b, 0x20, 0x54, 0x42, 0x41, 0x41, 0x1b, 0x02,
  0x6d, 0x82, 0x60, 0x4c, 0x1b, 0x86, 0x6c, 0xe3, 0x36, 0x0c, 0x58, 0xc7,
  0x6d, 0x18, 0x3c, 0x8f, 0xab, 0xc2, 0xc6, 0x66, 0xd7, 0xe6, 0x92, 0x46,
  0x56, 0xe6, 0x46, 0x37, 0x25, 0x08, 0xaa, 0x90, 0xe1, 0xb9, 0xd8, 0x95,
  0xc9, 0xcd, 0xa5, 0xbd, 0xb9, 0x4d, 0x09, 0x88, 0x26, 0x64, 0x78, 0x2e,
  0x76, 0x61, 0x6c, 0x76, 0x65, 0x72, 0x53, 0x02, 0xa2, 0x0e, 0x19, 0x9e,
  0xcb, 0x1c, 0x5a, 0x18, 0x59, 0x99, 0x5c, 0xd3, 0x1b, 0x59, 0x19, 0xdb,
  0x94, 0xe0, 0x28, 0x43, 0x86, 0xe7, 0x22, 0x57, 0x36, 0xf7, 0x56, 0x27,
  0x37, 0x56, 0x36, 0x37, 0x25, 0x70, 0xea, 0x90, 0xe1, 0xb9, 0x94, 0xb9,
  0xd1, 0xc9, 0xe5, 0x41, 0xbd, 0xa5, 0xb9, 0xd1, 0xcd, 0x4d, 0x09, 0x2c,
  0x00, 0x00, 0x00, 0x00, 0x79, 0x18, 0x00, 0x00, 0x51, 0x00, 0x00, 0x00,
  0x33, 0x08, 0x80, 0x1c, 0xc4, 0xe1, 0x1c, 0x66, 0x14, 0x01, 0x3d, 0x88,
  0x43, 0x38, 0x84, 0xc3, 0x8c, 0x42, 0x80, 0x07, 0x79, 0x78, 0x07, 0x73,
  0x98, 0x71, 0x0c, 0xe6, 0x00, 0x0f, 0xed, 0x10, 0x0e, 0xf4, 0x80, 0x0e,
  0x33, 0x0c, 0x42, 0x1e, 0xc2, 0xc1, 0x1d, 0xce, 0xa1, 0x1c, 0x66, 0x30,
  0x05, 0x3d, 0x88, 0x43, 0x38, 0x84, 0x83, 0x1b, 0xcc, 0x03, 0x3d, 0xc8,
  0x43, 0x3d, 0x8c, 0x03, 0x3d, 0xcc, 0x78, 0x8c, 0x74, 0x70, 0x07, 0x7b,
  0x08, 0x07, 0x79, 0x48, 0x87, 0x70, 0x70, 0x07, 0x7a, 0x70, 0x03, 0x76,
  0x78, 0x87, 0x70, 0x20, 0x87, 0x19, 0xcc, 0x11, 0x0e, 0xec, 0x90, 0x0e,
  0xe1, 0x30, 0x0f, 0x6e, 0x30, 0x0f, 0xe3, 0xf0, 0x0e, 0xf0, 0x50, 0x0e,
  0x33, 0x10, 0xc4, 0x1d, 0xde, 0x21, 0x1c, 0xd8, 0x21, 0x1d, 0xc2, 0x61,
  0x1e, 0x66, 0x30, 0x89, 0x3b, 0xbc, 0x83, 0x3b, 0xd0, 0x43, 0x39, 0xb4,
  0x03, 0x3c, 0xbc, 0x83, 0x3c, 0x84, 0x03, 0x3b, 0xcc, 0xf0, 0x14, 0x76,
  0x60, 0x07, 0x7b, 0x68, 0x07, 0x37, 0x68, 0x87, 0x72, 0x68, 0x07, 0x37,
  0x80, 0x87, 0x70, 0x90, 0x87, 0x70, 0x60, 0x07, 0x76, 0x28, 0x07, 0x76,
  0xf8, 0x05, 0x76, 0x78, 0x87, 0x77, 0x80, 0x87, 0x5f, 0x08, 0x87, 0x71,
  0x18, 0x87, 0x72, 0x98, 0x87, 0x79, 0x98, 0x81, 0x2c, 0xee, 0xf0, 0x0e,
  0xee, 0xe0, 0x0e, 0xf5, 0xc0, 0x0e, 0xec, 0x30, 0x03, 0x62, 0xc8, 0xa1,
  0x1c, 0xe4, 0xa1, 0x1c, 0xcc, 0xa1, 0x1c, 0xe4, 0xa1, 0x1c, 0xdc, 0x61,
  0x1c, 0xca, 0x21, 0x1c, 0xc4, 0x81, 0x1d, 0xca, 0x61, 0x06, 0xd6, 0x90,
  0x43, 0x39, 0xc8, 0x43, 0x39, 0x98, 0x43, 0x39, 0xc8, 0x43, 0x39, 0xb8,
  0xc3, 0x38, 0x94, 0x43, 0x38, 0x88, 0x03, 0x3b, 0x94, 0xc3, 0x2f, 0xbc,
  0x83, 0x3c, 0xfc, 0x82, 0x3b, 0xd4, 0x03, 0x3b, 0xb0, 0xc3, 0x0c, 0xc4,
  0x21, 0x07, 0x7c, 0x70, 0x03, 0x7a, 0x28, 0x87, 0x76, 0x80, 0x87, 0x19,
  0xd1, 0x43, 0x0e, 0xf8, 0xe0, 0x06, 0xe4, 0x20, 0x0e, 0xe7, 0xe0, 0x06,
  0xf6, 0x10, 0x0e, 0xf2, 0xc0, 0x0e, 0xe1, 0x90, 0x0f, 0xef, 0x50, 0x0f,
  0xf4, 0x30, 0x83, 0x81, 0xc8, 0x01, 0x1f, 0xdc, 0x40, 0x1c, 0xe4, 0xa1,
  0x1c, 0xc2, 0x61, 0x1d, 0xdc, 0x40, 0x1c, 0xe4, 0x01, 0x00, 0x00, 0x00,
  0x71, 0x20, 0x00, 0x00, 0x4c, 0x00, 0x00, 0x00, 0x05, 0xf0, 0x04, 0x7e,
  0xe7, 0x61, 0x78, 0x8c, 0x2e, 0x03, 0x81, 0x33, 0x68, 0xb0, 0x19, 0x34,
  0x08, 0x6a, 0xb8, 0x7c, 0xe7, 0xf1, 0x81, 0xa6, 0x71, 0x26, 0x60, 0x22,
  0x42, 0xa0, 0x19, 0x16, 0xc2, 0x16, 0x9a, 0xe1, 0xf2, 0x9d, 0xc7, 0x0f,
  0x80, 0x28, 0x42, 0x88, 0xc8, 0x10, 0xa0, 0xe1, 0xf2, 0x9d, 0xc7, 0x0f,
  0x90, 0x06, 0x88, 0x30, 0x1f, 0xb9, 0x6d, 0x7b, 0xd8, 0x86, 0xcb, 0x77,
  0x1e, 0x5f, 0x08, 0xa8, 0xa2, 0x20, 0xa2, 0xd2, 0x01, 0x86, 0x92, 0x30,
  0x00, 0x01, 0xf3, 0x8b, 0xdb, 0x36, 0x87, 0x6d, 0xb8, 0x7c, 0xe7, 0xf1,
  0x85, 0x80, 0x2a, 0x0a, 0x22, 0x2a, 0x1d, 0x60, 0x28, 0x09, 0x03, 0x10,
  0x30, 0x1f, 0xb9, 0x6d, 0x8b, 0xe8, 0x86, 0xcb, 0x77, 0x1e, 0x5f, 0x88,
  0x08, 0x60, 0x22, 0x42, 0xa0, 0x19, 0x16, 0xe2, 0x8b, 0x1c, 0x66, 0x43,
  0x9a, 0x01, 0x69, 0x0c, 0x33, 0xd0, 0x86, 0xcb, 0x77, 0x1e, 0x5f, 0x88,
  0x08, 0x60, 0x22, 0x42, 0xa0, 0x19, 0x16, 0xe2, 0x8b, 0x1c, 0x26, 0x24,
  0x80, 0xc7, 0x18, 0x9c, 0xe1, 0xf2, 0x9d, 0xc7, 0x1f, 0x9c, 0xe9, 0xf6,
  0x8b, 0xdb, 0xb6, 0x83, 0x69, 0xb8, 0x7c, 0xe7, 0xf1, 0x0d, 0x62, 0xea,
  0x10, 0x86, 0x68, 0x24, 0xc4, 0x69, 0x24, 0x4b, 0xa8, 0x86, 0xcb, 0x77,
  0x1e, 0x7f, 0x22, 0xae, 0x89, 0x8a, 0x88, 0xd2, 0x01, 0x06, 0xbf, 0xb8,
  0x6d, 0x53, 0xb0, 0x86, 0xcb, 0x77, 0x1e, 0x7f, 0x22, 0xae, 0x89, 0x8a,
  0x08, 0x76, 0x72, 0x22, 0xc2, 0x2f, 0x6e, 0xdb, 0x0a, 0xa4, 0xe1, 0xf2,
  0x9d, 0xc7, 0x9f, 0x8e, 0x88, 0x00, 0x06, 0x71, 0xf0, 0x91, 0xdb, 0x36,
  0x82, 0x6c, 0xb8, 0x7c, 0xe7, 0xf1, 0xa7, 0x23, 0x22, 0x80, 0x41, 0x1c,
  0xc4, 0x06, 0x8c, 0x1c, 0xea, 0xf1, 0x91, 0xdb, 0xb6, 0x86, 0x67, 0xb8,
  0x7c, 0xe7, 0xf1, 0xa9, 0x06, 0x88, 0x30, 0xbf, 0xb8, 0x6d, 0x1b, 0x88,
  0x96, 0xa5, 0x62, 0xfc, 0x05, 0x29, 0x88, 0x09, 0x61, 0x08, 0x9f, 0x68,
  0x06, 0x13, 0x98, 0x96, 0xa5, 0x62, 0xfc, 0x05, 0x29, 0x88, 0x09, 0x61,
  0x08, 0x5f, 0x9a, 0x80, 0x68, 0xb2, 0x00, 0x82, 0x01, 0x90, 0x06, 0x00,
  0x61, 0x20, 0x00, 0x00, 0x11, 0x01, 0x00, 0x00, 0x13, 0x04, 0x4c, 0x2c,
  0x10, 0x00, 0x00, 0x00, 0x19, 0x00, 0x00, 0x00, 0xf4, 0x8c, 0x00, 0xd0,
  0x52, 0x6e, 0x64, 0x14, 0x10, 0x1d, 0x45, 0x50, 0x1e, 0xb4, 0xcc, 0x00,
  0x94, 0x41, 0x11, 0x06, 0x14, 0xec, 0x40, 0xd9, 0x15, 0xed, 0x40, 0x41,
  0x95, 0x6f, 0x40, 0xe9, 0x06, 0x14, 0x41, 0x1d, 0xd4, 0x40, 0xc9, 0x0e,
  0x94, 0x46, 0x29, 0x14, 0x21, 0x50, 0x49, 0x12, 0x94, 0x24, 0x44, 0x41,
  0x06, 0x94, 0x52, 0x81, 0x06, 0x94, 0x44, 0x19, 0x06, 0x10, 0x30, 0x46,
  0xd0, 0x9a, 0x73, 0x4e, 0x7e, 0x63, 0x04, 0xad, 0x39, 0xe7, 0xf4, 0x47,
  0xe8, 0x1c, 0x02, 0x1c, 0xc4, 0xc1, 0x1c, 0x82, 0x1b, 0x60, 0x73, 0x08,
  0x6a, 0x20, 0x07, 0xb4, 0xce, 0x41, 0x5c, 0xd7, 0xf5, 0x01, 0x00, 0x00,
  0x23, 0x06, 0x08, 0x00, 0x82, 0x60, 0xc0, 0x06, 0x6d, 0x10, 0x05, 0x67,
  0x20, 0x06, 0x23, 0x06, 0x07, 0x00, 0x82, 0x60, 0x90, 0x06, 0x6f, 0xb0,
  0x05, 0xc4, 0x88, 0x81, 0x01, 0x80, 0x20, 0x18, 0x30, 0x7c, 0x80, 0xa5,
  0xc1, 0x88, 0x81, 0x01, 0x80, 0x20, 0x18, 0x30, 0x7d, 0x90, 0xb5, 0xc1,
  0x88, 0x81, 0x01, 0x80, 0x20, 0x18, 0x30, 0x7d, 0x90, 0xad, 0xc1, 0x88,
  0x81, 0x01, 0x80, 0x20, 0x18, 0x30, 0x7e, 0xa0, 0xbd, 0xc1, 0x4c, 0x04,
  0x1d, 0x2c, 0xd4, 0x28, 0x5c, 0x80, 0xec, 0x88, 0x81, 0x41, 0x80, 0x20,
  0x18, 0x24, 0xa4, 0x80, 0x06, 0xc1, 0xa6, 0x07, 0xe1, 0x0d, 0xde, 0x60,
  0xc4, 0xe0, 0x00, 0x40, 0x10, 0x0c, 0xcc, 0x00, 0x0f, 0xc4, 0x00, 0x81,
  0x83, 0xd1, 0x84, 0x00, 0x18, 0x36, 0x20, 0x86, 0x60, 0x00, 0x36, 0x3d,
  0x14, 0x72, 0x50, 0x07, 0xa3, 0x09, 0x43, 0x30, 0x6c, 0x40, 0x08, 0xc1,
  0x00, 0x6c, 0x7a, 0x38, 0xe8, 0x20, 0x0c, 0x46, 0x13, 0x0a, 0x61, 0xd8,
  0x80, 0x10, 0x82, 0x01, 0xd8, 0xf4, 0x90, 0xd8, 0xc1, 0x1a, 0x8c, 0x26,
  0x1c, 0xc3, 0xb0, 0x01, 0x21, 0x04, 0x03, 0xb0, 0xe9, 0x61, 0xc1, 0x03,
  0x3b, 0x18, 0x31, 0x38, 0x00, 0x10, 0x04, 0x03, 0x33, 0x08, 0x85, 0x35,
  0x88, 0xf8, 0x60, 0x34, 0x21, 0x00, 0x86, 0x0d, 0x88, 0x21, 0x18, 0x80,
  0x4d, 0x0f, 0xce, 0x1e, 0x8c, 0xc1, 0x68, 0xc2, 0x10, 0x0c, 0x1b, 0x10,
  0x42, 0x30, 0x00, 0x9b, 0x1e, 0xa0, 0x3e, 0xf0, 0x83, 0xd1, 0x84, 0x42,
  0x18, 0x36, 0x20, 0x84, 0x60, 0x00, 0x36, 0x3d, 0x48, 0x7f, 0x10, 0x0a,
  0xa3, 0x09, 0xc7, 0x30, 0x6c, 0x40, 0x08, 0xc1, 0x00, 0x8c, 0x18, 0x1c,
  0x00, 0x08, 0x82, 0xc1, 0x18, 0xa8, 0xc2, 0x1c, 0x64, 0x76, 0x30, 0x9a,
  0x10, 0x04, 0x23, 0x06, 0x08, 0x00, 0x82, 0x60, 0x00, 0xd1, 0x02, 0x1d,
  0x04, 0x7e, 0xe0, 0x07, 0x23, 0x06, 0x07, 0x00, 0x82, 0x60, 0x90, 0x06,
  0xab, 0x70, 0x07, 0x41, 0x18, 0x8c, 0x26, 0x10, 0xc0, 0x88, 0x01, 0x02,
  0x80, 0x20, 0x18, 0x40, 0xb7, 0x70, 0x07, 0x41, 0x28, 0x84, 0xc2, 0x88,
  0xc1, 0x01, 0x80, 0x20, 0x18, 0xa4, 0x81, 0x2b, 0xe8, 0x41, 0x40, 0x06,
  0xa3, 0x09, 0x87, 0x30, 0x62, 0x80, 0x00, 0x20, 0x08, 0x06, 0x90, 0x2e,
  0xe8, 0x41, 0x40, 0x0a, 0xa4, 0x30, 0x62, 0x70, 0x00, 0x20, 0x08, 0x06,
  0x69, 0x10, 0x0b, 0x7d, 0x10, 0x94, 0xc1, 0x88, 0xc1, 0x01, 0x80, 0x20,
  0x18, 0x4c, 0xbb, 0xf0, 0x06, 0xc7, 0x2a, 0x8c, 0x26, 0x04, 0xc0, 0x68,
  0x82, 0x10, 0x0c, 0x37, 0x94, 0xc1, 0x28, 0xa0, 0xc1, 0x2c, 0x43, 0x20,
  0x04, 0x36, 0x06, 0x7b, 0x00, 0x82, 0x11, 0x83, 0x03, 0x00, 0x41, 0x30,
  0xa8, 0x7e, 0x61, 0x0e, 0x02, 0x58, 0x18, 0x31, 0x68, 0x00, 0x10, 0x04,
  0x03, 0xec, 0x17, 0x4a, 0xa1, 0x39, 0x05, 0x33, 0x08, 0x4e, 0xe1, 0x14,
  0x4e, 0xe1, 0x14, 0x46, 0x13, 0x02, 0x60, 0x05, 0x83, 0x3a, 0xcc, 0x42,
  0x1a, 0x0c, 0x1b, 0x10, 0x81, 0x30, 0x00, 0xb3, 0x04, 0xc2, 0x70, 0x83,
  0x1a, 0xcc, 0x82, 0x19, 0x14, 0x02, 0x0a, 0x30, 0xcb, 0x30, 0x10, 0x82,
  0xa9, 0xc1, 0x2a, 0x80, 0x60, 0xc4, 0xe0, 0x00, 0x40, 0x10, 0x0c, 0x2a,
  0x73, 0x38, 0x85, 0x40, 0x18, 0x31, 0x68, 0x00, 0x10, 0x04, 0x03, 0xcc,
  0x1c, 0x58, 0x81, 0x72, 0x85, 0x36, 0x08, 0x5c, 0xc1, 0x15, 0x5c, 0xc1,
  0x15, 0x46, 0x13, 0x02, 0xc0, 0xe0, 0x60, 0x17, 0x40, 0xb0, 0x82, 0x41,
  0x1e, 0x76, 0x21, 0x18, 0x36, 0x20, 0x82, 0x61, 0x00, 0x66, 0x09, 0x88,
  0x82, 0x4e, 0x01, 0x46, 0x0c, 0x0e, 0x00, 0x04, 0xc1, 0xa0, 0x62, 0x87,
  0x56, 0x90, 0x83, 0x60, 0xc4, 0xe0, 0x00, 0x40, 0x10, 0x0c, 0xaa, 0x76,
  0x70, 0x05, 0x39, 0x48, 0x46, 0x0c, 0x1a, 0x00, 0x04, 0xc1, 0x00, 0x6b,
  0x87, 0x59, 0xd8, 0x6a, 0x41, 0x08, 0x6a, 0xa1, 0x16, 0x6a, 0xa1, 0x16,
  0x46, 0x13, 0x02, 0xc0, 0xee, 0xc0, 0x16, 0x40, 0xb0, 0x82, 0x21, 0x1f,
  0xc4, 0x21, 0x18, 0x36, 0x20, 0x82, 0x61, 0x00, 0x46, 0x0c, 0x0c, 0x00,
  0x04, 0xc1, 0x80, 0x7b, 0x87, 0x52, 0x20, 0x85, 0x11, 0x83, 0x06, 0x00,
  0x41, 0x30, 0xc0, 0xe2, 0xe1, 0x16, 0xbe, 0x5c, 0xc0, 0x83, 0x3b, 0xc8,
  0x85, 0x5c, 0xc8, 0x85, 0x5c, 0x18, 0x4d, 0x08, 0x00, 0x0b, 0xdc, 0x40,
  0x3e, 0x23, 0x06, 0x0d, 0x00, 0x82, 0x60, 0x80, 0xd1, 0x83, 0x2e, 0x70,
  0xe6, 0xb0, 0x07, 0x7a, 0xc0, 0x0b, 0xbc, 0xc0, 0x0b, 0xbc, 0x30, 0x9a,
  0x10, 0x00, 0xa3, 0x09, 0x42, 0x30, 0x9a, 0x30, 0x08, 0xa3, 0x09, 0xc4,
  0x30, 0x4b, 0x60, 0x8c, 0x50, 0x9c, 0xff, 0xff, 0xff, 0xff, 0x00, 0x98,
  0xff, 0xff, 0xff, 0xff, 0x40, 0x7c, 0x23, 0x06, 0x0e, 0x00, 0x82, 0x60,
  0xa0, 0xe5, 0x03, 0x2b, 0x94, 0x41, 0x28, 0x80, 0x82, 0x38, 0x04, 0x41,
  0x10, 0x8c, 0xc3, 0x88, 0x81, 0x41, 0x80, 0x20, 0x18, 0x24, 0x20, 0x51,
  0x0e, 0x7e, 0x80, 0x03, 0x15, 0x80, 0x43, 0xe4, 0xc1, 0x32, 0x50, 0x01,
  0xb0, 0x03, 0x91, 0x07, 0xcb, 0x40, 0xc5, 0x42, 0x17, 0x44, 0x1e, 0x2c,
  0xe6, 0x04, 0x20, 0x18, 0x6e, 0x10, 0xe0, 0x01, 0x0c, 0x66, 0x19, 0x96,
  0x23, 0xa8, 0xa1, 0x14, 0x60, 0xc4, 0xa0, 0x01, 0x40, 0x10, 0x0c, 0x30,
  0x90, 0x30, 0x07, 0x34, 0x90, 0x87, 0x53, 0x08, 0xd0, 0x01, 0x1d, 0xd0,
  0x01, 0x1d, 0x46, 0x13, 0x02, 0x60, 0x34, 0x41, 0x08, 0x46, 0x13, 0x06,
  0x61, 0xc4, 0x60, 0x01, 0x40, 0x10, 0x0c, 0xbc, 0x90, 0x80, 0x87, 0x41,
  0x08, 0x1e, 0xa7, 0x19, 0x8e, 0x08, 0x6a, 0x81, 0xf9, 0x66, 0x19, 0x14,
  0x24, 0x18, 0x4d, 0x30, 0x06, 0x0b, 0x9e, 0xf8, 0x8c, 0x18, 0x18, 0x00,
  0x08, 0x82, 0x01, 0x18, 0x90, 0xc4, 0x3e, 0x04, 0xc3, 0x11, 0x81, 0x2e,
  0x28, 0xdf, 0x2c, 0x83, 0x92, 0x04, 0xe6, 0xc4, 0x03, 0x08, 0x36, 0x3d,
  0xc0, 0x42, 0x3f, 0x04, 0x14, 0x00, 0x63, 0x05, 0x83, 0x4d, 0xfc, 0x03,
  0x44, 0x01, 0x30, 0x2c, 0x18, 0xe4, 0x63, 0x81, 0x05, 0x1f, 0x2b, 0x2c,
  0xf8, 0xcc, 0x12, 0x28, 0x03, 0x1d, 0x00, 0x91, 0xc0, 0x01, 0x02, 0x07,
  0xc7, 0x40, 0x07, 0x40, 0x24, 0x70, 0x80, 0xc0, 0xc1, 0x61, 0x58, 0x4a,
  0x80, 0x60, 0xb8, 0x21, 0x28, 0x09, 0x34, 0x98, 0x65, 0x58, 0x8a, 0x60,
  0xa0, 0x02, 0x40, 0x14, 0x3c, 0x30, 0x06, 0x2a, 0x00, 0x44, 0xc1, 0x03,
  0x63, 0xa0, 0x62, 0x41, 0x14, 0x1d, 0x31, 0x66, 0x09, 0x8c, 0x80, 0x18,
  0x0f, 0x00, 0x00, 0x00, 0x5b, 0x06, 0x26, 0xf0, 0xb6, 0x0c, 0x4f, 0xe0,
  0x6d, 0x19, 0xa4, 0xc0, 0xdb, 0x32, 0x54, 0x81, 0xb7, 0x65, 0xc8, 0x02,
  0x6f, 0xcb, 0xc0, 0x05, 0xde, 0x96, 0xe1, 0x0b, 0xbc, 0x2d, 0x83, 0x18,
  0x04, 0xde, 0x96, 0xe1, 0x0e, 0x02, 0x6f, 0xcb, 0x20, 0x0a, 0x81, 0xb7,
  0x65, 0x58, 0x85, 0xc0, 0xdb, 0x32, 0xbc, 0x43, 0xe0, 0x6d, 0x19, 0xe2,
  0x21, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};
