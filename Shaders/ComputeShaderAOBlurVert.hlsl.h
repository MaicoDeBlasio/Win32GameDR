#if 0
;
; Note: shader requires additional functionality:
;       Resource descriptor heap indexing
;
;
; Input signature:
;
; Name                 Index   Mask Register SysValue  Format   Used
; -------------------- ----- ------ -------- -------- ------- ------
; no parameters
;
; Output signature:
;
; Name                 Index   Mask Register SysValue  Format   Used
; -------------------- ----- ------ -------- -------- ------- ------
; no parameters
; shader debug name: Shaders\PDB\ComputeShaderAOBlurVert.pdb
; shader hash: 1414b0a6a82e2abac5e2485f2b7776b1
;
; Pipeline Runtime Information: 
;
; Compute Shader
; NumThreads=(1,64,1)
;
;
; Buffer Definitions:
;
; cbuffer cb0
; {
;
;   struct cb0
;   {
;
;       struct struct.BlurConstants
;       {
;
;           float4 blurWeights[3];                    ; Offset:    0
;           uint blurMap0UavID;                       ; Offset:   48
;           uint blurMap1UavID;                       ; Offset:   52
;           uint normalDepthMapSrvID;                 ; Offset:   56
;       
;       } cb0;                                        ; Offset:    0
;
;   
;   } cb0;                                            ; Offset:    0 Size:    60
;
; }
;
;
; Resource Bindings:
;
; Name                                 Type  Format         Dim      ID      HLSL Bind  Count
; ------------------------------ ---------- ------- ----------- ------- -------------- ------
; cb0                               cbuffer      NA          NA     CB0            cb0     1
;
target datalayout = "e-m:e-p:32:32-i1:32-i8:32-i16:32-i32:32-i64:64-f16:32-f32:32-f64:64-n8:16:32:64"
target triple = "dxil-ms-dx"

%dx.types.Handle = type { i8* }
%dx.types.ResBind = type { i32, i32, i32, i8 }
%dx.types.ResourceProperties = type { i32, i32 }
%dx.types.CBufRet.f32 = type { float, float, float, float }
%dx.types.CBufRet.i32 = type { i32, i32, i32, i32 }
%dx.types.Dimensions = type { i32, i32, i32, i32 }
%dx.types.ResRet.f32 = type { float, float, float, float, i32 }
%cb0 = type { %struct.BlurConstants }
%struct.BlurConstants = type { [3 x <4 x float>], i32, i32, i32 }

@"\01?gCache@@3PAMA" = external addrspace(3) global [74 x float], align 4

define void @main() {
  %1 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 0, i32 0, i32 0, i8 2 }, i32 0, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %2 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1, %dx.types.ResourceProperties { i32 13, i32 60 })  ; AnnotateHandle(res,props)  resource: CBuffer
  %3 = call i32 @dx.op.threadIdInGroup.i32(i32 95, i32 0)  ; ThreadIdInGroup(component)
  %4 = call i32 @dx.op.threadIdInGroup.i32(i32 95, i32 1)  ; ThreadIdInGroup(component)
  %5 = call i32 @dx.op.threadId.i32(i32 93, i32 0)  ; ThreadId(component)
  %6 = call i32 @dx.op.threadId.i32(i32 93, i32 1)  ; ThreadId(component)
  %7 = alloca [12 x float], align 4
  %8 = bitcast [12 x float]* %7 to i8*
  call void @llvm.lifetime.start(i64 48, i8* %8) #0
  %9 = getelementptr inbounds [12 x float], [12 x float]* %7, i32 0, i32 0
  %10 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %2, i32 0)  ; CBufferLoadLegacy(handle,regIndex)
  %11 = extractvalue %dx.types.CBufRet.f32 %10, 0
  store float %11, float* %9, align 4, !tbaa !9
  %12 = getelementptr inbounds [12 x float], [12 x float]* %7, i32 0, i32 1
  %13 = extractvalue %dx.types.CBufRet.f32 %10, 1
  store float %13, float* %12, align 4, !tbaa !9
  %14 = getelementptr inbounds [12 x float], [12 x float]* %7, i32 0, i32 2
  %15 = extractvalue %dx.types.CBufRet.f32 %10, 2
  store float %15, float* %14, align 4, !tbaa !9
  %16 = getelementptr inbounds [12 x float], [12 x float]* %7, i32 0, i32 3
  %17 = extractvalue %dx.types.CBufRet.f32 %10, 3
  store float %17, float* %16, align 4, !tbaa !9
  %18 = getelementptr inbounds [12 x float], [12 x float]* %7, i32 0, i32 4
  %19 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %2, i32 1)  ; CBufferLoadLegacy(handle,regIndex)
  %20 = extractvalue %dx.types.CBufRet.f32 %19, 0
  store float %20, float* %18, align 4, !tbaa !9
  %21 = getelementptr inbounds [12 x float], [12 x float]* %7, i32 0, i32 5
  %22 = extractvalue %dx.types.CBufRet.f32 %19, 1
  store float %22, float* %21, align 4, !tbaa !9
  %23 = getelementptr inbounds [12 x float], [12 x float]* %7, i32 0, i32 6
  %24 = extractvalue %dx.types.CBufRet.f32 %19, 2
  store float %24, float* %23, align 4, !tbaa !9
  %25 = getelementptr inbounds [12 x float], [12 x float]* %7, i32 0, i32 7
  %26 = extractvalue %dx.types.CBufRet.f32 %19, 3
  store float %26, float* %25, align 4, !tbaa !9
  %27 = getelementptr inbounds [12 x float], [12 x float]* %7, i32 0, i32 8
  %28 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %2, i32 2)  ; CBufferLoadLegacy(handle,regIndex)
  %29 = extractvalue %dx.types.CBufRet.f32 %28, 0
  store float %29, float* %27, align 4, !tbaa !9
  %30 = getelementptr inbounds [12 x float], [12 x float]* %7, i32 0, i32 9
  %31 = extractvalue %dx.types.CBufRet.f32 %28, 1
  store float %31, float* %30, align 4, !tbaa !9
  %32 = getelementptr inbounds [12 x float], [12 x float]* %7, i32 0, i32 10
  %33 = extractvalue %dx.types.CBufRet.f32 %28, 2
  store float %33, float* %32, align 4, !tbaa !9
  %34 = getelementptr inbounds [12 x float], [12 x float]* %7, i32 0, i32 11
  %35 = extractvalue %dx.types.CBufRet.f32 %28, 3
  store float %35, float* %34, align 4, !tbaa !9
  %36 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %2, i32 3)  ; CBufferLoadLegacy(handle,regIndex)
  %37 = extractvalue %dx.types.CBufRet.i32 %36, 1
  %38 = call %dx.types.Handle @dx.op.createHandleFromHeap(i32 218, i32 %37, i1 false, i1 false)  ; CreateHandleFromHeap(index,samplerHeap,nonUniformIndex)
  %39 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %38, %dx.types.ResourceProperties { i32 4098, i32 265 })  ; AnnotateHandle(res,props)  resource: RWTexture2D<F32>
  %40 = extractvalue %dx.types.CBufRet.i32 %36, 0
  %41 = call %dx.types.Handle @dx.op.createHandleFromHeap(i32 218, i32 %40, i1 false, i1 false)  ; CreateHandleFromHeap(index,samplerHeap,nonUniformIndex)
  %42 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %41, %dx.types.ResourceProperties { i32 4098, i32 265 })  ; AnnotateHandle(res,props)  resource: RWTexture2D<F32>
  %43 = extractvalue %dx.types.CBufRet.i32 %36, 2
  %44 = call %dx.types.Handle @dx.op.createHandleFromHeap(i32 218, i32 %43, i1 false, i1 false)  ; CreateHandleFromHeap(index,samplerHeap,nonUniformIndex)
  %45 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %44, %dx.types.ResourceProperties { i32 2, i32 1033 })  ; AnnotateHandle(res,props)  resource: Texture2D<4xF32>
  %46 = call %dx.types.Dimensions @dx.op.getDimensions(i32 72, %dx.types.Handle %39, i32 0)  ; GetDimensions(handle,mipLevel)
  %47 = extractvalue %dx.types.Dimensions %46, 0
  %48 = extractvalue %dx.types.Dimensions %46, 1
  %49 = icmp slt i32 %3, 5
  br i1 %49, label %50, label %56

; <label>:50                                      ; preds = %0
  %51 = add nsw i32 %6, -5
  %52 = call i32 @dx.op.binary.i32(i32 37, i32 %51, i32 0)  ; IMax(a,b)
  %53 = call %dx.types.ResRet.f32 @dx.op.textureLoad.f32(i32 66, %dx.types.Handle %39, i32 undef, i32 %5, i32 %52, i32 undef, i32 undef, i32 undef, i32 undef)  ; TextureLoad(srv,mipLevelOrSampleCount,coord0,coord1,coord2,offset0,offset1,offset2)
  %54 = extractvalue %dx.types.ResRet.f32 %53, 0
  %55 = getelementptr [74 x float], [74 x float] addrspace(3)* @"\01?gCache@@3PAMA", i32 0, i32 %4
  store float %54, float addrspace(3)* %55, align 4, !tbaa !9
  br label %56

; <label>:56                                      ; preds = %50, %0
  %57 = icmp sgt i32 %4, 58
  %58 = add i32 %48, -1
  br i1 %57, label %59, label %66

; <label>:59                                      ; preds = %56
  %60 = add nsw i32 %6, 5
  %61 = call i32 @dx.op.binary.i32(i32 40, i32 %60, i32 %58)  ; UMin(a,b)
  %62 = call %dx.types.ResRet.f32 @dx.op.textureLoad.f32(i32 66, %dx.types.Handle %39, i32 undef, i32 %5, i32 %61, i32 undef, i32 undef, i32 undef, i32 undef)  ; TextureLoad(srv,mipLevelOrSampleCount,coord0,coord1,coord2,offset0,offset1,offset2)
  %63 = extractvalue %dx.types.ResRet.f32 %62, 0
  %64 = add nsw i32 %4, 10
  %65 = getelementptr [74 x float], [74 x float] addrspace(3)* @"\01?gCache@@3PAMA", i32 0, i32 %64
  store float %63, float addrspace(3)* %65, align 4, !tbaa !9
  br label %66

; <label>:66                                      ; preds = %59, %56
  %67 = add i32 %47, -1
  %68 = call i32 @dx.op.binary.i32(i32 40, i32 %5, i32 %67)  ; UMin(a,b)
  %69 = call i32 @dx.op.binary.i32(i32 40, i32 %6, i32 %58)  ; UMin(a,b)
  %70 = call %dx.types.ResRet.f32 @dx.op.textureLoad.f32(i32 66, %dx.types.Handle %39, i32 undef, i32 %68, i32 %69, i32 undef, i32 undef, i32 undef, i32 undef)  ; TextureLoad(srv,mipLevelOrSampleCount,coord0,coord1,coord2,offset0,offset1,offset2)
  %71 = extractvalue %dx.types.ResRet.f32 %70, 0
  %72 = add nsw i32 %4, 5
  %73 = getelementptr [74 x float], [74 x float] addrspace(3)* @"\01?gCache@@3PAMA", i32 0, i32 %72
  store float %71, float addrspace(3)* %73, align 4, !tbaa !9
  call void @dx.op.barrier(i32 80, i32 9)  ; Barrier(barrierMode)
  %74 = call %dx.types.ResRet.f32 @dx.op.textureLoad.f32(i32 66, %dx.types.Handle %39, i32 undef, i32 %5, i32 %6, i32 undef, i32 undef, i32 undef, i32 undef)  ; TextureLoad(srv,mipLevelOrSampleCount,coord0,coord1,coord2,offset0,offset1,offset2)
  %75 = extractvalue %dx.types.ResRet.f32 %74, 0
  %76 = fmul fast float %75, %22
  %77 = call %dx.types.ResRet.f32 @dx.op.textureLoad.f32(i32 66, %dx.types.Handle %45, i32 0, i32 %5, i32 %6, i32 undef, i32 undef, i32 undef, i32 undef)  ; TextureLoad(srv,mipLevelOrSampleCount,coord0,coord1,coord2,offset0,offset1,offset2)
  %78 = extractvalue %dx.types.ResRet.f32 %77, 0
  %79 = extractvalue %dx.types.ResRet.f32 %77, 1
  %80 = extractvalue %dx.types.ResRet.f32 %77, 2
  %81 = extractvalue %dx.types.ResRet.f32 %77, 3
  br label %84

; <label>:82                                      ; preds = %112
  %83 = fdiv fast float %113, %114
  call void @dx.op.textureStore.f32(i32 67, %dx.types.Handle %42, i32 %5, i32 %6, i32 undef, float %83, float %83, float %83, float %83, i8 15)  ; TextureStore(srv,coord0,coord1,coord2,value0,value1,value2,value3,mask)
  call void @llvm.lifetime.end(i64 48, i8* %8) #0
  ret void

; <label>:84                                      ; preds = %117, %66
  %85 = phi float [ %76, %66 ], [ %118, %117 ]
  %86 = phi float [ %22, %66 ], [ %119, %117 ]
  %87 = phi i32 [ -5, %66 ], [ %120, %117 ]
  %88 = add nsw i32 %72, %87
  %89 = icmp eq i32 %87, 0
  br i1 %89, label %117, label %90

; <label>:90                                      ; preds = %84
  %91 = add i32 %87, %6
  %92 = call %dx.types.ResRet.f32 @dx.op.textureLoad.f32(i32 66, %dx.types.Handle %45, i32 0, i32 %5, i32 %91, i32 undef, i32 undef, i32 undef, i32 undef)  ; TextureLoad(srv,mipLevelOrSampleCount,coord0,coord1,coord2,offset0,offset1,offset2)
  %93 = extractvalue %dx.types.ResRet.f32 %92, 0
  %94 = extractvalue %dx.types.ResRet.f32 %92, 1
  %95 = extractvalue %dx.types.ResRet.f32 %92, 2
  %96 = call float @dx.op.dot3.f32(i32 55, float %93, float %94, float %95, float %78, float %79, float %80)  ; Dot3(ax,ay,az,bx,by,bz)
  %97 = fcmp fast ult float %96, 0x3FE99999A0000000
  br i1 %97, label %112, label %98

; <label>:98                                      ; preds = %90
  %99 = extractvalue %dx.types.ResRet.f32 %92, 3
  %100 = fsub fast float %99, %81
  %101 = call float @dx.op.unary.f32(i32 6, float %100)  ; FAbs(value)
  %102 = fcmp fast ugt float %101, 0x3FC99999A0000000
  br i1 %102, label %112, label %103

; <label>:103                                     ; preds = %98
  %104 = add nsw i32 %87, 5
  %105 = getelementptr inbounds [12 x float], [12 x float]* %7, i32 0, i32 %104
  %106 = load float, float* %105, align 4, !tbaa !9
  %107 = getelementptr [74 x float], [74 x float] addrspace(3)* @"\01?gCache@@3PAMA", i32 0, i32 %88
  %108 = load float, float addrspace(3)* %107, align 4, !tbaa !9
  %109 = fmul fast float %108, %106
  %110 = fadd fast float %109, %85
  %111 = fadd fast float %106, %86
  br label %112

; <label>:112                                     ; preds = %103, %98, %90
  %113 = phi float [ %110, %103 ], [ %85, %98 ], [ %85, %90 ]
  %114 = phi float [ %111, %103 ], [ %86, %98 ], [ %86, %90 ]
  %115 = add nsw i32 %87, 1
  %116 = icmp slt i32 %115, 6
  br i1 %116, label %117, label %82

; <label>:117                                     ; preds = %112, %84
  %118 = phi float [ %113, %112 ], [ %85, %84 ]
  %119 = phi float [ %114, %112 ], [ %86, %84 ]
  %120 = phi i32 [ %115, %112 ], [ 1, %84 ]
  br label %84
}

; Function Attrs: nounwind
declare void @llvm.lifetime.start(i64, i8* nocapture) #0

; Function Attrs: nounwind
declare void @llvm.lifetime.end(i64, i8* nocapture) #0

; Function Attrs: nounwind readnone
declare i32 @dx.op.threadIdInGroup.i32(i32, i32) #1

; Function Attrs: nounwind readnone
declare i32 @dx.op.threadId.i32(i32, i32) #1

; Function Attrs: nounwind readnone
declare %dx.types.Handle @dx.op.createHandleFromHeap(i32, i32, i1, i1) #1

; Function Attrs: nounwind readonly
declare %dx.types.Dimensions @dx.op.getDimensions(i32, %dx.types.Handle, i32) #2

; Function Attrs: nounwind readnone
declare i32 @dx.op.binary.i32(i32, i32, i32) #1

; Function Attrs: nounwind readonly
declare %dx.types.ResRet.f32 @dx.op.textureLoad.f32(i32, %dx.types.Handle, i32, i32, i32, i32, i32, i32, i32) #2

; Function Attrs: nounwind
declare void @dx.op.textureStore.f32(i32, %dx.types.Handle, i32, i32, i32, float, float, float, float, i8) #0

; Function Attrs: noduplicate nounwind
declare void @dx.op.barrier(i32, i32) #3

; Function Attrs: nounwind readnone
declare float @dx.op.dot3.f32(i32, float, float, float, float, float, float) #1

; Function Attrs: nounwind readnone
declare float @dx.op.unary.f32(i32, float) #1

; Function Attrs: nounwind readonly
declare %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32, %dx.types.Handle, i32) #2

; Function Attrs: nounwind readonly
declare %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32, %dx.types.Handle, i32) #2

; Function Attrs: nounwind readnone
declare %dx.types.Handle @dx.op.annotateHandle(i32, %dx.types.Handle, %dx.types.ResourceProperties) #1

; Function Attrs: nounwind readnone
declare %dx.types.Handle @dx.op.createHandleFromBinding(i32, %dx.types.ResBind, i32, i1) #1

attributes #0 = { nounwind }
attributes #1 = { nounwind readnone }
attributes #2 = { nounwind readonly }
attributes #3 = { noduplicate nounwind }

!llvm.ident = !{!0}
!dx.version = !{!1}
!dx.valver = !{!1}
!dx.shaderModel = !{!2}
!dx.resources = !{!3}
!dx.entryPoints = !{!6}

!0 = !{!"dxcoob 1.7.2308.7 (69e54e290)"}
!1 = !{i32 1, i32 7}
!2 = !{!"cs", i32 6, i32 7}
!3 = !{null, null, !4, null}
!4 = !{!5}
!5 = !{i32 0, %cb0* undef, !"", i32 0, i32 0, i32 1, i32 60, null}
!6 = !{void ()* @main, !"main", null, !3, !7}
!7 = !{i32 0, i64 1073741824, i32 4, !8}
!8 = !{i32 1, i32 64, i32 1}
!9 = !{!10, !10, i64 0}
!10 = !{!"float", !11, i64 0}
!11 = !{!"omnipotent char", !12, i64 0}
!12 = !{!"Simple C/C++ TBAA"}

#endif

const unsigned char g_ComputeShaderAOBlurVert[] = {
  0x44, 0x58, 0x42, 0x43, 0x6b, 0x90, 0x02, 0x82, 0xe4, 0xc3, 0x3e, 0x1b,
  0x1f, 0x6a, 0xf4, 0x78, 0x7f, 0xcf, 0x0f, 0x46, 0x01, 0x00, 0x00, 0x00,
  0x20, 0x16, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00,
  0x50, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x70, 0x00, 0x00, 0x00,
  0xd8, 0x00, 0x00, 0x00, 0xa8, 0x09, 0x00, 0x00, 0xdc, 0x09, 0x00, 0x00,
  0xf8, 0x09, 0x00, 0x00, 0x53, 0x46, 0x49, 0x30, 0x08, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x49, 0x53, 0x47, 0x31,
  0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00,
  0x4f, 0x53, 0x47, 0x31, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x08, 0x00, 0x00, 0x00, 0x50, 0x53, 0x56, 0x30, 0x60, 0x00, 0x00, 0x00,
  0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xff, 0xff, 0xff, 0xff, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x53, 0x54, 0x41, 0x54, 0xc8, 0x08, 0x00, 0x00, 0x67, 0x00, 0x05, 0x00,
  0x32, 0x02, 0x00, 0x00, 0x44, 0x58, 0x49, 0x4c, 0x07, 0x01, 0x00, 0x00,
  0x10, 0x00, 0x00, 0x00, 0xb0, 0x08, 0x00, 0x00, 0x42, 0x43, 0xc0, 0xde,
  0x21, 0x0c, 0x00, 0x00, 0x29, 0x02, 0x00, 0x00, 0x0b, 0x82, 0x20, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x13, 0x00, 0x00, 0x00, 0x07, 0x81, 0x23, 0x91,
  0x41, 0xc8, 0x04, 0x49, 0x06, 0x10, 0x32, 0x39, 0x92, 0x01, 0x84, 0x0c,
  0x25, 0x05, 0x08, 0x19, 0x1e, 0x04, 0x8b, 0x62, 0x80, 0x18, 0x45, 0x02,
  0x42, 0x92, 0x0b, 0x42, 0xc4, 0x10, 0x32, 0x14, 0x38, 0x08, 0x18, 0x4b,
  0x0a, 0x32, 0x62, 0x88, 0x48, 0x90, 0x14, 0x20, 0x43, 0x46, 0x88, 0xa5,
  0x00, 0x19, 0x32, 0x42, 0xe4, 0x48, 0x0e, 0x90, 0x11, 0x23, 0xc4, 0x50,
  0x41, 0x51, 0x81, 0x8c, 0xe1, 0x83, 0xe5, 0x8a, 0x04, 0x31, 0x46, 0x06,
  0x51, 0x18, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x1b, 0x88, 0x40, 0x00,
  0x96, 0x0d, 0x84, 0xf0, 0xff, 0xff, 0xff, 0xff, 0x03, 0x20, 0x6d, 0x30,
  0x86, 0xff, 0xff, 0xff, 0xff, 0x1f, 0x00, 0x09, 0xa0, 0x36, 0x18, 0xc4,
  0xff, 0xff, 0xff, 0xff, 0x0f, 0x80, 0x04, 0x54, 0x1b, 0x8c, 0xe2, 0xff,
  0xff, 0xff, 0xff, 0x07, 0x80, 0x01, 0x24, 0x00, 0x49, 0x18, 0x00, 0x00,
  0x04, 0x00, 0x00, 0x00, 0x13, 0x84, 0x40, 0x98, 0x10, 0x0c, 0x13, 0x02,
  0x62, 0x42, 0x20, 0x4c, 0x08, 0x0a, 0x00, 0x00, 0x89, 0x20, 0x00, 0x00,
  0x51, 0x00, 0x00, 0x00, 0x32, 0x22, 0x88, 0x09, 0x20, 0x64, 0x85, 0x04,
  0x13, 0x23, 0xa4, 0x84, 0x04, 0x13, 0x23, 0xe3, 0x84, 0xa1, 0x90, 0x14,
  0x12, 0x4c, 0x8c, 0x8c, 0x0b, 0x84, 0xc4, 0x4c, 0x10, 0xd0, 0xc1, 0x0c,
  0x40, 0x2a, 0x01, 0x83, 0x08, 0xc1, 0x30, 0x02, 0x50, 0x82, 0x81, 0x88,
  0x39, 0x02, 0x50, 0x98, 0x23, 0x40, 0xe8, 0x28, 0xc3, 0x60, 0x20, 0x94,
  0xcc, 0x11, 0x80, 0x41, 0x19, 0x96, 0x65, 0x21, 0xe6, 0x9e, 0xe1, 0xf2,
  0x27, 0xec, 0x21, 0x24, 0x3f, 0x04, 0x9a, 0x61, 0x21, 0x50, 0x80, 0xcc,
  0x11, 0x04, 0xa5, 0x70, 0x96, 0xe5, 0x79, 0x08, 0xba, 0x69, 0xb8, 0xfc,
  0x09, 0x7b, 0x08, 0xc9, 0xef, 0x10, 0x86, 0x68, 0x24, 0xc4, 0x69, 0x24,
  0x44, 0x2c, 0xcb, 0xb2, 0x14, 0x42, 0x5a, 0x9c, 0x85, 0xa6, 0x42, 0x2c,
  0xcb, 0xb2, 0x50, 0x75, 0xd3, 0x70, 0xf9, 0x13, 0xf6, 0x10, 0x92, 0xbf,
  0x12, 0xd2, 0x4a, 0x4c, 0x7e, 0x71, 0xdb, 0xa8, 0x00, 0x00, 0x00, 0x58,
  0x8a, 0x72, 0x2d, 0xce, 0xb2, 0x2c, 0xcb, 0xb2, 0x2c, 0x84, 0x95, 0x65,
  0x58, 0x9c, 0x65, 0x59, 0x00, 0x00, 0x00, 0x0e, 0xd2, 0xca, 0x30, 0x2c,
  0x0b, 0x71, 0x05, 0x01, 0x16, 0x00, 0x00, 0x00, 0x00, 0x20, 0xaf, 0x0c,
  0xc0, 0x02, 0x10, 0x78, 0xd4, 0x70, 0xf9, 0x13, 0xf6, 0x10, 0x92, 0xcf,
  0x6d, 0x54, 0xb1, 0x12, 0x93, 0x8f, 0xdc, 0x36, 0x22, 0x96, 0x65, 0x59,
  0x0a, 0x21, 0x2e, 0xce, 0x42, 0xe3, 0x51, 0xc3, 0xe5, 0x4f, 0xd8, 0x43,
  0x48, 0x3e, 0xb7, 0x51, 0xc5, 0x4a, 0x4c, 0x7e, 0x71, 0xdb, 0x88, 0x00,
  0x00, 0x00, 0x28, 0x44, 0xb9, 0x38, 0x0b, 0x99, 0xb7, 0x0d, 0x97, 0x3f,
  0x61, 0x0f, 0x21, 0xf9, 0x2b, 0x21, 0x39, 0x54, 0x24, 0x10, 0x69, 0xe4,
  0x3c, 0x44, 0x34, 0x21, 0x84, 0x84, 0x84, 0x65, 0x29, 0x84, 0xb3, 0x38,
  0x28, 0xa5, 0x07, 0x0d, 0x97, 0x3f, 0x61, 0x0f, 0x21, 0xf9, 0x2b, 0x21,
  0x6d, 0x48, 0x33, 0x20, 0x62, 0x59, 0x96, 0xa3, 0x14, 0xce, 0xb2, 0x2e,
  0x0f, 0xb1, 0x03, 0x01, 0xc3, 0x08, 0x04, 0x90, 0x03, 0xef, 0x51, 0xd2,
  0x14, 0x51, 0xc2, 0xe4, 0x6f, 0x0b, 0x15, 0x71, 0x4e, 0x23, 0x4d, 0x40,
  0x33, 0x49, 0x88, 0x80, 0x97, 0x65, 0xb9, 0x41, 0x08, 0x68, 0x14, 0xc4,
  0x24, 0x03, 0x00, 0x00, 0x13, 0x14, 0x72, 0xc0, 0x87, 0x74, 0x60, 0x87,
  0x36, 0x68, 0x87, 0x79, 0x68, 0x03, 0x72, 0xc0, 0x87, 0x0d, 0xaf, 0x50,
  0x0e, 0x6d, 0xd0, 0x0e, 0x7a, 0x50, 0x0e, 0x6d, 0x00, 0x0f, 0x7a, 0x30,
  0x07, 0x72, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d, 0x90, 0x0e, 0x71, 0xa0,
  0x07, 0x73, 0x20, 0x07, 0x6d, 0x90, 0x0e, 0x78, 0xa0, 0x07, 0x73, 0x20,
  0x07, 0x6d, 0x90, 0x0e, 0x71, 0x60, 0x07, 0x7a, 0x30, 0x07, 0x72, 0xd0,
  0x06, 0xe9, 0x30, 0x07, 0x72, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d, 0x90,
  0x0e, 0x76, 0x40, 0x07, 0x7a, 0x60, 0x07, 0x74, 0xd0, 0x06, 0xe6, 0x10,
  0x07, 0x76, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d, 0x60, 0x0e, 0x73, 0x20,
  0x07, 0x7a, 0x30, 0x07, 0x72, 0xd0, 0x06, 0xe6, 0x60, 0x07, 0x74, 0xa0,
  0x07, 0x76, 0x40, 0x07, 0x6d, 0xe0, 0x0e, 0x78, 0xa0, 0x07, 0x71, 0x60,
  0x07, 0x7a, 0x30, 0x07, 0x72, 0xa0, 0x07, 0x76, 0x40, 0x07, 0x3a, 0x0f,
  0x24, 0x90, 0x21, 0x23, 0x45, 0x44, 0x00, 0x76, 0x00, 0xf0, 0x90, 0x87,
  0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x21,
  0x4f, 0x02, 0x04, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x43, 0x9e, 0x04, 0x08, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x86, 0x3c, 0x0c, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x0c, 0x79, 0x18, 0x20, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x18, 0xf2, 0x40, 0x40, 0x00, 0x08, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x30, 0xe4, 0x99, 0x80, 0x00, 0x18, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0xc8, 0x53, 0x01, 0x01, 0x20, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x90, 0x07, 0x03, 0x02, 0x60,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x21, 0x8f, 0x06, 0x04,
  0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x43, 0x1e, 0x0e,
  0x08, 0x80, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x86, 0x3c,
  0x1e, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c,
  0x79, 0xc0, 0x00, 0x08, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x86, 0x3c, 0x63, 0x00, 0x04, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x43, 0x1e, 0x33, 0x00, 0x02, 0x60, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x80, 0x21, 0x4f, 0x1a, 0x00, 0x01, 0x20, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x90, 0x87, 0x0d, 0x80, 0x00,
  0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x0b, 0x04, 0x00,
  0x10, 0x00, 0x00, 0x00, 0x32, 0x1e, 0x98, 0x18, 0x19, 0x11, 0x4c, 0x90,
  0x8c, 0x09, 0x26, 0x47, 0xc6, 0x04, 0x43, 0x32, 0x0a, 0x10, 0x10, 0x10,
  0x10, 0x81, 0x96, 0x12, 0x28, 0x87, 0x11, 0x80, 0x62, 0x28, 0xbc, 0x32,
  0x28, 0x89, 0x02, 0x2b, 0x85, 0x42, 0x2b, 0xb8, 0x42, 0x28, 0xc0, 0x80,
  0xd2, 0x28, 0x68, 0x82, 0xa2, 0x28, 0x4c, 0x81, 0xf2, 0xa0, 0x78, 0x06,
  0x80, 0xe4, 0x19, 0x00, 0x9a, 0x67, 0x00, 0x00, 0x79, 0x18, 0x00, 0x00,
  0x98, 0x00, 0x00, 0x00, 0x1a, 0x03, 0x4c, 0x90, 0x46, 0x02, 0x13, 0xc4,
  0x8e, 0x0c, 0x6f, 0xec, 0xed, 0x4d, 0x0c, 0x24, 0xc6, 0xe5, 0xc6, 0x45,
  0x66, 0x06, 0x06, 0xc7, 0xe5, 0x06, 0x04, 0xc5, 0x26, 0xa7, 0xac, 0x86,
  0xa6, 0x4c, 0x26, 0x07, 0x26, 0x65, 0x43, 0x10, 0x4c, 0x10, 0x96, 0x69,
  0x82, 0xb0, 0x50, 0x1b, 0x84, 0x81, 0x98, 0x20, 0x2c, 0xd5, 0x06, 0xc1,
  0x30, 0x28, 0x8c, 0xcd, 0x4d, 0x10, 0x16, 0x6b, 0xc3, 0x80, 0x24, 0xc4,
  0x04, 0x61, 0x0e, 0xce, 0x80, 0xc3, 0x98, 0x18, 0xcc, 0x04, 0x61, 0xb9,
  0x36, 0x20, 0xc6, 0xc2, 0x18, 0xc6, 0xd0, 0x00, 0x1b, 0x02, 0x67, 0x03,
  0x01, 0x00, 0x0f, 0x30, 0x41, 0x88, 0x83, 0x32, 0xe0, 0x22, 0xc6, 0x56,
  0x27, 0x77, 0x55, 0x96, 0x76, 0x86, 0x46, 0x37, 0x37, 0x41, 0x58, 0xb0,
  0x09, 0xc2, 0x92, 0x6d, 0x30, 0x12, 0x69, 0x32, 0x08, 0x8a, 0x8d, 0x18,
  0x5b, 0x9d, 0x5c, 0x53, 0x18, 0x1c, 0x4c, 0x55, 0x98, 0x5d, 0x12, 0xd1,
  0x04, 0x61, 0xd1, 0x26, 0x08, 0xcb, 0xb6, 0xc1, 0x48, 0xac, 0xe9, 0x22,
  0x30, 0x36, 0x62, 0x6c, 0x75, 0x72, 0x4d, 0x61, 0x70, 0x31, 0x55, 0x61,
  0x76, 0x49, 0x44, 0x13, 0x84, 0x85, 0xdb, 0x60, 0x24, 0xda, 0xb4, 0x11,
  0x18, 0x27, 0xb7, 0x37, 0xb9, 0xb6, 0x30, 0x36, 0xa2, 0x32, 0x38, 0x3a,
  0xb4, 0xa6, 0x30, 0xb8, 0x29, 0x39, 0xbb, 0x24, 0xa2, 0x09, 0xc2, 0xd2,
  0x6d, 0x30, 0x92, 0x6e, 0xf2, 0x08, 0x6c, 0x43, 0xd1, 0x54, 0x19, 0xf7,
  0x4d, 0x10, 0xe4, 0xc0, 0x0c, 0x36, 0x10, 0x09, 0x33, 0x19, 0x1b, 0x84,
  0x46, 0x0c, 0x36, 0x14, 0x46, 0x04, 0x06, 0x61, 0x30, 0x06, 0x13, 0x84,
  0x22, 0xd8, 0x00, 0x6c, 0x18, 0x0c, 0x33, 0x30, 0x83, 0x0d, 0xc1, 0x19,
  0x6c, 0x18, 0x86, 0x32, 0x40, 0x03, 0x12, 0x6d, 0x61, 0x69, 0x6e, 0x13,
  0x04, 0x43, 0x9a, 0x20, 0x2c, 0xde, 0x04, 0x61, 0xf9, 0x36, 0x0c, 0x43,
  0x1b, 0x0c, 0x1b, 0x08, 0x63, 0x0d, 0xd8, 0xc0, 0x0d, 0x36, 0x14, 0x65,
  0xa0, 0x06, 0x00, 0xf4, 0x06, 0x8c, 0xc2, 0xe4, 0xe4, 0xc2, 0xf2, 0xbe,
  0xd8, 0xde, 0xc6, 0xc2, 0xd8, 0xbe, 0xc4, 0xf2, 0xe8, 0xca, 0xe6, 0x08,
  0x85, 0xc9, 0xc9, 0x85, 0xe5, 0x7d, 0xb1, 0xbd, 0x8d, 0x85, 0xb1, 0x7d,
  0xb1, 0x91, 0xcd, 0xd1, 0x4d, 0x10, 0x16, 0x30, 0x20, 0x14, 0x26, 0x27,
  0x17, 0x96, 0xf7, 0x45, 0x77, 0x36, 0xd7, 0xf6, 0x25, 0x96, 0x47, 0x57,
  0x36, 0x37, 0x41, 0x58, 0xc2, 0x80, 0x4f, 0x98, 0x9c, 0x5c, 0x58, 0xde,
  0x17, 0xdd, 0xd9, 0x5c, 0xdb, 0x17, 0x1b, 0xd9, 0x1c, 0x1d, 0x0f, 0xb1,
  0x30, 0x39, 0xb9, 0xb4, 0x32, 0x39, 0x22, 0x62, 0x72, 0x61, 0x6e, 0x63,
  0x68, 0x65, 0x73, 0x34, 0xcc, 0xd8, 0xde, 0xc2, 0xe8, 0xe6, 0x26, 0x08,
  0x8b, 0x18, 0xb0, 0x48, 0x73, 0x9b, 0xa3, 0x9b, 0x9b, 0x20, 0x2c, 0x63,
  0x40, 0x22, 0xcd, 0x8d, 0x6e, 0x6e, 0x82, 0xb0, 0x90, 0x01, 0x11, 0xba,
  0x32, 0xbc, 0x2f, 0xb6, 0xb7, 0x30, 0x32, 0x26, 0x74, 0x65, 0x78, 0x5f,
  0x73, 0x74, 0x6f, 0x72, 0x65, 0x2c, 0xea, 0xd2, 0xdc, 0xe8, 0xe6, 0x36,
  0x60, 0x71, 0x70, 0xc9, 0xc1, 0x1c, 0xd0, 0x41, 0x1d, 0xd8, 0x01, 0x1b,
  0xdc, 0xc1, 0x80, 0x07, 0x49, 0x1e, 0xe8, 0xc1, 0x1e, 0xf0, 0x41, 0x1f,
  0xf8, 0xc1, 0x1f, 0x24, 0xa0, 0x30, 0x84, 0xc2, 0x54, 0x85, 0x8d, 0xcd,
  0xae, 0xcd, 0x25, 0x8d, 0xac, 0xcc, 0x8d, 0x6e, 0x4a, 0x10, 0x54, 0x21,
  0xc3, 0x73, 0xb1, 0x2b, 0x93, 0x9b, 0x4b, 0x7b, 0x73, 0x9b, 0x12, 0x10,
  0x4d, 0xc8, 0xf0, 0x5c, 0xec, 0xc2, 0xd8, 0xec, 0xca, 0xe4, 0xa6, 0x04,
  0x46, 0x1d, 0x32, 0x3c, 0x97, 0x39, 0xb4, 0x30, 0xb2, 0x32, 0xb9, 0xa6,
  0x37, 0xb2, 0x32, 0xb6, 0x29, 0x41, 0x52, 0x86, 0x0c, 0xcf, 0x45, 0xae,
  0x6c, 0xee, 0xad, 0x4e, 0x6e, 0xac, 0x6c, 0x6e, 0x4a, 0xf0, 0x54, 0x22,
  0xc3, 0x73, 0xa1, 0xcb, 0x83, 0x2b, 0x0b, 0x72, 0x73, 0x7b, 0xa3, 0x0b,
  0xa3, 0x4b, 0x7b, 0x73, 0x9b, 0x9b, 0x22, 0x8c, 0x01, 0x1a, 0xd4, 0x21,
  0xc3, 0x73, 0x29, 0x73, 0xa3, 0x93, 0xcb, 0x83, 0x7a, 0x4b, 0x73, 0xa3,
  0x9b, 0x9b, 0x12, 0xbc, 0x41, 0x17, 0x32, 0x3c, 0x97, 0xb1, 0xb7, 0x3a,
  0x37, 0xba, 0x32, 0xb9, 0xb9, 0x29, 0x41, 0x28, 0x00, 0x00, 0x00, 0x00,
  0x79, 0x18, 0x00, 0x00, 0x51, 0x00, 0x00, 0x00, 0x33, 0x08, 0x80, 0x1c,
  0xc4, 0xe1, 0x1c, 0x66, 0x14, 0x01, 0x3d, 0x88, 0x43, 0x38, 0x84, 0xc3,
  0x8c, 0x42, 0x80, 0x07, 0x79, 0x78, 0x07, 0x73, 0x98, 0x71, 0x0c, 0xe6,
  0x00, 0x0f, 0xed, 0x10, 0x0e, 0xf4, 0x80, 0x0e, 0x33, 0x0c, 0x42, 0x1e,
  0xc2, 0xc1, 0x1d, 0xce, 0xa1, 0x1c, 0x66, 0x30, 0x05, 0x3d, 0x88, 0x43,
  0x38, 0x84, 0x83, 0x1b, 0xcc, 0x03, 0x3d, 0xc8, 0x43, 0x3d, 0x8c, 0x03,
  0x3d, 0xcc, 0x78, 0x8c, 0x74, 0x70, 0x07, 0x7b, 0x08, 0x07, 0x79, 0x48,
  0x87, 0x70, 0x70, 0x07, 0x7a, 0x70, 0x03, 0x76, 0x78, 0x87, 0x70, 0x20,
  0x87, 0x19, 0xcc, 0x11, 0x0e, 0xec, 0x90, 0x0e, 0xe1, 0x30, 0x0f, 0x6e,
  0x30, 0x0f, 0xe3, 0xf0, 0x0e, 0xf0, 0x50, 0x0e, 0x33, 0x10, 0xc4, 0x1d,
  0xde, 0x21, 0x1c, 0xd8, 0x21, 0x1d, 0xc2, 0x61, 0x1e, 0x66, 0x30, 0x89,
  0x3b, 0xbc, 0x83, 0x3b, 0xd0, 0x43, 0x39, 0xb4, 0x03, 0x3c, 0xbc, 0x83,
  0x3c, 0x84, 0x03, 0x3b, 0xcc, 0xf0, 0x14, 0x76, 0x60, 0x07, 0x7b, 0x68,
  0x07, 0x37, 0x68, 0x87, 0x72, 0x68, 0x07, 0x37, 0x80, 0x87, 0x70, 0x90,
  0x87, 0x70, 0x60, 0x07, 0x76, 0x28, 0x07, 0x76, 0xf8, 0x05, 0x76, 0x78,
  0x87, 0x77, 0x80, 0x87, 0x5f, 0x08, 0x87, 0x71, 0x18, 0x87, 0x72, 0x98,
  0x87, 0x79, 0x98, 0x81, 0x2c, 0xee, 0xf0, 0x0e, 0xee, 0xe0, 0x0e, 0xf5,
  0xc0, 0x0e, 0xec, 0x30, 0x03, 0x62, 0xc8, 0xa1, 0x1c, 0xe4, 0xa1, 0x1c,
  0xcc, 0xa1, 0x1c, 0xe4, 0xa1, 0x1c, 0xdc, 0x61, 0x1c, 0xca, 0x21, 0x1c,
  0xc4, 0x81, 0x1d, 0xca, 0x61, 0x06, 0xd6, 0x90, 0x43, 0x39, 0xc8, 0x43,
  0x39, 0x98, 0x43, 0x39, 0xc8, 0x43, 0x39, 0xb8, 0xc3, 0x38, 0x94, 0x43,
  0x38, 0x88, 0x03, 0x3b, 0x94, 0xc3, 0x2f, 0xbc, 0x83, 0x3c, 0xfc, 0x82,
  0x3b, 0xd4, 0x03, 0x3b, 0xb0, 0xc3, 0x0c, 0xc4, 0x21, 0x07, 0x7c, 0x70,
  0x03, 0x7a, 0x28, 0x87, 0x76, 0x80, 0x87, 0x19, 0xd1, 0x43, 0x0e, 0xf8,
  0xe0, 0x06, 0xe4, 0x20, 0x0e, 0xe7, 0xe0, 0x06, 0xf6, 0x10, 0x0e, 0xf2,
  0xc0, 0x0e, 0xe1, 0x90, 0x0f, 0xef, 0x50, 0x0f, 0xf4, 0x30, 0x83, 0x81,
  0xc8, 0x01, 0x1f, 0xdc, 0x40, 0x1c, 0xe4, 0xa1, 0x1c, 0xc2, 0x61, 0x1d,
  0xdc, 0x40, 0x1c, 0xe4, 0x01, 0x00, 0x00, 0x00, 0x71, 0x20, 0x00, 0x00,
  0x4c, 0x00, 0x00, 0x00, 0x05, 0xf0, 0x04, 0x7e, 0xe7, 0x61, 0x78, 0x8c,
  0x2e, 0x03, 0x81, 0x33, 0x68, 0xb0, 0x19, 0x34, 0x08, 0x6a, 0xb8, 0x7c,
  0xe7, 0xf1, 0x81, 0xa6, 0x71, 0x26, 0x60, 0x22, 0x42, 0xa0, 0x19, 0x16,
  0xc2, 0x16, 0x9a, 0xe1, 0xf2, 0x9d, 0xc7, 0x0f, 0x80, 0x28, 0x42, 0x88,
  0xc8, 0x10, 0xa0, 0xe1, 0xf2, 0x9d, 0xc7, 0x0f, 0x90, 0x06, 0x88, 0x30,
  0x1f, 0xb9, 0x6d, 0x7b, 0xd8, 0x86, 0xcb, 0x77, 0x1e, 0x5f, 0x08, 0xa8,
  0xa2, 0x20, 0xa2, 0xd2, 0x01, 0x86, 0x92, 0x30, 0x00, 0x01, 0xf3, 0x8b,
  0xdb, 0x36, 0x87, 0x6d, 0xb8, 0x7c, 0xe7, 0xf1, 0x85, 0x80, 0x2a, 0x0a,
  0x22, 0x2a, 0x1d, 0x60, 0x28, 0x09, 0x03, 0x10, 0x30, 0x1f, 0xb9, 0x6d,
  0x8b, 0xe8, 0x86, 0xcb, 0x77, 0x1e, 0x5f, 0x88, 0x08, 0x60, 0x22, 0x42,
  0xa0, 0x19, 0x16, 0xe2, 0x8b, 0x1c, 0x66, 0x43, 0x9a, 0x01, 0x69, 0x0c,
  0x33, 0xd0, 0x86, 0xcb, 0x77, 0x1e, 0x5f, 0x88, 0x08, 0x60, 0x22, 0x42,
  0xa0, 0x19, 0x16, 0xe2, 0x8b, 0x1c, 0x26, 0x24, 0x80, 0xc7, 0x18, 0x9c,
  0xe1, 0xf2, 0x9d, 0xc7, 0x1f, 0x9c, 0xe9, 0xf6, 0x8b, 0xdb, 0xb6, 0x83,
  0x69, 0xb8, 0x7c, 0xe7, 0xf1, 0x0d, 0x62, 0xea, 0x10, 0x86, 0x68, 0x24,
  0xc4, 0x69, 0x24, 0x4b, 0xa8, 0x86, 0xcb, 0x77, 0x1e, 0x7f, 0x22, 0xae,
  0x89, 0x8a, 0x88, 0xd2, 0x01, 0x06, 0xbf, 0xb8, 0x6d, 0x53, 0xb0, 0x86,
  0xcb, 0x77, 0x1e, 0x7f, 0x22, 0xae, 0x89, 0x8a, 0x08, 0x76, 0x72, 0x22,
  0xc2, 0x2f, 0x6e, 0xdb, 0x0a, 0xa4, 0xe1, 0xf2, 0x9d, 0xc7, 0x9f, 0x8e,
  0x88, 0x00, 0x06, 0x71, 0xf0, 0x91, 0xdb, 0x36, 0x82, 0x6c, 0xb8, 0x7c,
  0xe7, 0xf1, 0xa7, 0x23, 0x22, 0x80, 0x41, 0x1c, 0xc4, 0x06, 0x8c, 0x1c,
  0xea, 0xf1, 0x91, 0xdb, 0xb6, 0x86, 0x67, 0xb8, 0x7c, 0xe7, 0xf1, 0xa9,
  0x06, 0x88, 0x30, 0xbf, 0xb8, 0x6d, 0x1b, 0x88, 0x96, 0xa5, 0x62, 0xfc,
  0x05, 0x29, 0x88, 0x09, 0x61, 0x08, 0x9f, 0x68, 0x06, 0x13, 0x98, 0x96,
  0xa5, 0x62, 0xfc, 0x05, 0x29, 0x88, 0x09, 0x61, 0x08, 0x5f, 0x9a, 0x80,
  0x68, 0xb2, 0x00, 0x82, 0x01, 0x90, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x49, 0x4c, 0x44, 0x4e, 0x2c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x27, 0x00,
  0x53, 0x68, 0x61, 0x64, 0x65, 0x72, 0x73, 0x5c, 0x50, 0x44, 0x42, 0x5c,
  0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x53, 0x68, 0x61, 0x64, 0x65,
  0x72, 0x41, 0x4f, 0x42, 0x6c, 0x75, 0x72, 0x56, 0x65, 0x72, 0x74, 0x2e,
  0x70, 0x64, 0x62, 0x00, 0x48, 0x41, 0x53, 0x48, 0x14, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x14, 0x14, 0xb0, 0xa6, 0xa8, 0x2e, 0x2a, 0xba,
  0xc5, 0xe2, 0x48, 0x5f, 0x2b, 0x77, 0x76, 0xb1, 0x44, 0x58, 0x49, 0x4c,
  0x20, 0x0c, 0x00, 0x00, 0x67, 0x00, 0x05, 0x00, 0x08, 0x03, 0x00, 0x00,
  0x44, 0x58, 0x49, 0x4c, 0x07, 0x01, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00,
  0x08, 0x0c, 0x00, 0x00, 0x42, 0x43, 0xc0, 0xde, 0x21, 0x0c, 0x00, 0x00,
  0xff, 0x02, 0x00, 0x00, 0x0b, 0x82, 0x20, 0x00, 0x02, 0x00, 0x00, 0x00,
  0x13, 0x00, 0x00, 0x00, 0x07, 0x81, 0x23, 0x91, 0x41, 0xc8, 0x04, 0x49,
  0x06, 0x10, 0x32, 0x39, 0x92, 0x01, 0x84, 0x0c, 0x25, 0x05, 0x08, 0x19,
  0x1e, 0x04, 0x8b, 0x62, 0x80, 0x18, 0x45, 0x02, 0x42, 0x92, 0x0b, 0x42,
  0xc4, 0x10, 0x32, 0x14, 0x38, 0x08, 0x18, 0x4b, 0x0a, 0x32, 0x62, 0x88,
  0x48, 0x90, 0x14, 0x20, 0x43, 0x46, 0x88, 0xa5, 0x00, 0x19, 0x32, 0x42,
  0xe4, 0x48, 0x0e, 0x90, 0x11, 0x23, 0xc4, 0x50, 0x41, 0x51, 0x81, 0x8c,
  0xe1, 0x83, 0xe5, 0x8a, 0x04, 0x31, 0x46, 0x06, 0x51, 0x18, 0x00, 0x00,
  0x0c, 0x00, 0x00, 0x00, 0x1b, 0x88, 0x40, 0x00, 0x96, 0x0d, 0x84, 0xf0,
  0xff, 0xff, 0xff, 0xff, 0x03, 0x20, 0x6d, 0x30, 0x86, 0xff, 0xff, 0xff,
  0xff, 0x1f, 0x00, 0x09, 0xa0, 0x36, 0x18, 0xc4, 0xff, 0xff, 0xff, 0xff,
  0x0f, 0x80, 0x04, 0x54, 0x1b, 0x8c, 0xe2, 0xff, 0xff, 0xff, 0xff, 0x07,
  0x80, 0x01, 0x24, 0x00, 0x49, 0x18, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00,
  0x13, 0x84, 0x40, 0x98, 0x10, 0x0c, 0x13, 0x02, 0x62, 0x42, 0x20, 0x4c,
  0x08, 0x0a, 0x00, 0x00, 0x89, 0x20, 0x00, 0x00, 0x53, 0x00, 0x00, 0x00,
  0x32, 0x22, 0x88, 0x09, 0x20, 0x64, 0x85, 0x04, 0x13, 0x23, 0xa4, 0x84,
  0x04, 0x13, 0x23, 0xe3, 0x84, 0xa1, 0x90, 0x14, 0x12, 0x4c, 0x8c, 0x8c,
  0x0b, 0x84, 0xc4, 0x4c, 0x10, 0xe4, 0xc1, 0x0c, 0x40, 0x2a, 0x01, 0x83,
  0x08, 0xc1, 0x30, 0x02, 0x50, 0x82, 0x81, 0x88, 0x39, 0x02, 0x50, 0x98,
  0x23, 0x40, 0xe8, 0x28, 0xc3, 0x60, 0x20, 0x94, 0xcc, 0x11, 0x80, 0x41,
  0x19, 0x96, 0x65, 0x21, 0xe6, 0x9e, 0xe1, 0xf2, 0x27, 0xec, 0x21, 0x24,
  0x3f, 0x04, 0x9a, 0x61, 0x21, 0x50, 0x80, 0xcc, 0x11, 0x04, 0xa5, 0x70,
  0x96, 0xe5, 0x79, 0x08, 0xba, 0x69, 0xb8, 0xfc, 0x09, 0x7b, 0x08, 0xc9,
  0xef, 0x10, 0x86, 0x68, 0x24, 0xc4, 0x69, 0x24, 0x44, 0x2c, 0xcb, 0xb2,
  0x14, 0x42, 0x5a, 0x9c, 0x85, 0xa6, 0x42, 0x2c, 0xcb, 0xb2, 0x50, 0x75,
  0xd3, 0x70, 0xf9, 0x13, 0xf6, 0x10, 0x92, 0xbf, 0x12, 0xd2, 0x4a, 0x4c,
  0x7e, 0x71, 0xdb, 0xa8, 0x00, 0x00, 0x00, 0x58, 0x8a, 0x72, 0x2d, 0xce,
  0xb2, 0x2c, 0xcb, 0xb2, 0x2c, 0x84, 0x95, 0x65, 0x58, 0x9c, 0x65, 0x59,
  0x00, 0x00, 0x00, 0x0e, 0xd2, 0xca, 0x30, 0x2c, 0x0b, 0x71, 0x05, 0x01,
  0x16, 0x00, 0x00, 0x00, 0x00, 0x20, 0xaf, 0x0c, 0xc0, 0x02, 0x10, 0x78,
  0xd4, 0x70, 0xf9, 0x13, 0xf6, 0x10, 0x92, 0xcf, 0x6d, 0x54, 0xb1, 0x12,
  0x93, 0x8f, 0xdc, 0x36, 0x22, 0x96, 0x65, 0x59, 0x0a, 0x21, 0x2e, 0xce,
  0x42, 0xe3, 0x51, 0xc3, 0xe5, 0x4f, 0xd8, 0x43, 0x48, 0x3e, 0xb7, 0x51,
  0xc5, 0x4a, 0x4c, 0x7e, 0x71, 0xdb, 0x88, 0x00, 0x00, 0x00, 0x28, 0x44,
  0xb9, 0x38, 0x0b, 0x99, 0xb7, 0x0d, 0x97, 0x3f, 0x61, 0x0f, 0x21, 0xf9,
  0x2b, 0x21, 0x39, 0x54, 0x24, 0x10, 0x69, 0xe4, 0x3c, 0x44, 0x34, 0x21,
  0x84, 0x84, 0x84, 0x65, 0x29, 0x84, 0xb3, 0x38, 0x28, 0xa5, 0x07, 0x0d,
  0x97, 0x3f, 0x61, 0x0f, 0x21, 0xf9, 0x2b, 0x21, 0x6d, 0x48, 0x33, 0x20,
  0x62, 0x59, 0x96, 0xa3, 0x14, 0xce, 0xb2, 0x2e, 0x0f, 0xb1, 0x03, 0x01,
  0xc3, 0x08, 0x04, 0x90, 0x03, 0xef, 0x51, 0xd2, 0x14, 0x51, 0xc2, 0xe4,
  0x6f, 0x0b, 0x15, 0x71, 0x4e, 0x23, 0x4d, 0x40, 0x33, 0x49, 0x88, 0x80,
  0x97, 0x65, 0xb9, 0x41, 0x08, 0x68, 0x14, 0xc4, 0x24, 0x27, 0x03, 0x40,
  0x34, 0x01, 0x53, 0x00, 0x83, 0x08, 0xc0, 0x00, 0x13, 0x14, 0x72, 0xc0,
  0x87, 0x74, 0x60, 0x87, 0x36, 0x68, 0x87, 0x79, 0x68, 0x03, 0x72, 0xc0,
  0x87, 0x0d, 0xaf, 0x50, 0x0e, 0x6d, 0xd0, 0x0e, 0x7a, 0x50, 0x0e, 0x6d,
  0x00, 0x0f, 0x7a, 0x30, 0x07, 0x72, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d,
  0x90, 0x0e, 0x71, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d, 0x90, 0x0e, 0x78,
  0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d, 0x90, 0x0e, 0x71, 0x60, 0x07, 0x7a,
  0x30, 0x07, 0x72, 0xd0, 0x06, 0xe9, 0x30, 0x07, 0x72, 0xa0, 0x07, 0x73,
  0x20, 0x07, 0x6d, 0x90, 0x0e, 0x76, 0x40, 0x07, 0x7a, 0x60, 0x07, 0x74,
  0xd0, 0x06, 0xe6, 0x10, 0x07, 0x76, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d,
  0x60, 0x0e, 0x73, 0x20, 0x07, 0x7a, 0x30, 0x07, 0x72, 0xd0, 0x06, 0xe6,
  0x60, 0x07, 0x74, 0xa0, 0x07, 0x76, 0x40, 0x07, 0x6d, 0xe0, 0x0e, 0x78,
  0xa0, 0x07, 0x71, 0x60, 0x07, 0x7a, 0x30, 0x07, 0x72, 0xa0, 0x07, 0x76,
  0x40, 0x07, 0x3a, 0x0f, 0x24, 0x90, 0x21, 0x23, 0x45, 0x44, 0x00, 0x76,
  0x00, 0xf0, 0x90, 0x87, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x80, 0x21, 0x4f, 0x02, 0x04, 0x40, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x43, 0x9e, 0x04, 0x08, 0x80, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x86, 0x3c, 0x0c, 0x10, 0x00, 0x02, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x79, 0x18, 0x20, 0x00, 0x04,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0xf2, 0x40, 0x40, 0x00,
  0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0xe4, 0x99, 0x80,
  0x00, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0xc8, 0x53,
  0x01, 0x01, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x90,
  0x07, 0x03, 0x02, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80,
  0x21, 0x8f, 0x06, 0x04, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x43, 0x1e, 0x0e, 0x08, 0x80, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x86, 0x3c, 0x1e, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x0c, 0x79, 0xc0, 0x00, 0x08, 0x00, 0x01, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x86, 0x3c, 0x63, 0x00, 0x04, 0xc0, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x43, 0x1e, 0x33, 0x00, 0x02,
  0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x21, 0x4f, 0x1a,
  0x00, 0x01, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x90,
  0x87, 0x0d, 0x80, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x20, 0x0b, 0x04, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x32, 0x1e, 0x98, 0x14,
  0x19, 0x11, 0x4c, 0x90, 0x8c, 0x09, 0x26, 0x47, 0xc6, 0x04, 0x43, 0x32,
  0x0a, 0x10, 0x10, 0x10, 0x10, 0x61, 0x04, 0x80, 0x96, 0x12, 0x28, 0x87,
  0x62, 0x18, 0x01, 0x28, 0xbc, 0x42, 0x28, 0xc0, 0x00, 0x9a, 0x67, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x79, 0x18, 0x00, 0x00, 0x45, 0x00, 0x00, 0x00,
  0x1a, 0x03, 0x4c, 0x90, 0x46, 0x02, 0x13, 0xc4, 0x8e, 0x0c, 0x6f, 0xec,
  0xed, 0x4d, 0x0c, 0x24, 0xc6, 0xe5, 0xc6, 0x45, 0x66, 0x06, 0x06, 0xc7,
  0xe5, 0x06, 0x04, 0xc5, 0x26, 0xa7, 0xac, 0x86, 0xa6, 0x4c, 0x26, 0x07,
  0x26, 0x65, 0x43, 0x10, 0x4c, 0x10, 0x16, 0x6a, 0x82, 0xb0, 0x54, 0x1b,
  0x84, 0x81, 0xa0, 0x30, 0x36, 0x37, 0x41, 0x58, 0xac, 0x0d, 0x83, 0x71,
  0x10, 0x13, 0x84, 0xe5, 0x9a, 0x20, 0xcc, 0xc1, 0x46, 0x60, 0x82, 0xb0,
  0x60, 0x1b, 0x90, 0x44, 0x59, 0x92, 0x64, 0x60, 0x80, 0x0d, 0x41, 0xb3,
  0x81, 0x00, 0x00, 0x07, 0x98, 0x20, 0x14, 0x01, 0x89, 0xb6, 0xb0, 0x34,
  0xb7, 0x09, 0x82, 0x21, 0x4d, 0x10, 0x96, 0x6c, 0x82, 0xb0, 0x68, 0x1b,
  0x86, 0x81, 0x1a, 0x36, 0x10, 0x89, 0x34, 0x55, 0x1b, 0x0a, 0x28, 0x02,
  0x1e, 0x8b, 0x85, 0x19, 0xdb, 0x5b, 0x18, 0x1d, 0x9f, 0xb7, 0x36, 0xb7,
  0x34, 0xb8, 0x37, 0xba, 0x32, 0x37, 0x3a, 0x90, 0x31, 0xb4, 0x30, 0x39,
  0x46, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x20, 0x43, 0x2f, 0x43, 0x2b,
  0x2b, 0x20, 0x54, 0x42, 0x41, 0x41, 0x1b, 0x02, 0x6d, 0x82, 0x60, 0x4c,
  0x1b, 0x86, 0x6c, 0xe3, 0x36, 0x0c, 0x58, 0xc7, 0x6d, 0x18, 0x3c, 0x8f,
  0xab, 0xc2, 0xc6, 0x66, 0xd7, 0xe6, 0x92, 0x46, 0x56, 0xe6, 0x46, 0x37,
  0x25, 0x08, 0xaa, 0x90, 0xe1, 0xb9, 0xd8, 0x95, 0xc9, 0xcd, 0xa5, 0xbd,
  0xb9, 0x4d, 0x09, 0x88, 0x26, 0x64, 0x78, 0x2e, 0x76, 0x61, 0x6c, 0x76,
  0x65, 0x72, 0x53, 0x02, 0xa2, 0x0e, 0x19, 0x9e, 0xcb, 0x1c, 0x5a, 0x18,
  0x59, 0x99, 0x5c, 0xd3, 0x1b, 0x59, 0x19, 0xdb, 0x94, 0xe0, 0x28, 0x43,
  0x86, 0xe7, 0x22, 0x57, 0x36, 0xf7, 0x56, 0x27, 0x37, 0x56, 0x36, 0x37,
  0x25, 0x70, 0xea, 0x90, 0xe1, 0xb9, 0x94, 0xb9, 0xd1, 0xc9, 0xe5, 0x41,
  0xbd, 0xa5, 0xb9, 0xd1, 0xcd, 0x4d, 0x09, 0x2c, 0x00, 0x00, 0x00, 0x00,
  0x79, 0x18, 0x00, 0x00, 0x51, 0x00, 0x00, 0x00, 0x33, 0x08, 0x80, 0x1c,
  0xc4, 0xe1, 0x1c, 0x66, 0x14, 0x01, 0x3d, 0x88, 0x43, 0x38, 0x84, 0xc3,
  0x8c, 0x42, 0x80, 0x07, 0x79, 0x78, 0x07, 0x73, 0x98, 0x71, 0x0c, 0xe6,
  0x00, 0x0f, 0xed, 0x10, 0x0e, 0xf4, 0x80, 0x0e, 0x33, 0x0c, 0x42, 0x1e,
  0xc2, 0xc1, 0x1d, 0xce, 0xa1, 0x1c, 0x66, 0x30, 0x05, 0x3d, 0x88, 0x43,
  0x38, 0x84, 0x83, 0x1b, 0xcc, 0x03, 0x3d, 0xc8, 0x43, 0x3d, 0x8c, 0x03,
  0x3d, 0xcc, 0x78, 0x8c, 0x74, 0x70, 0x07, 0x7b, 0x08, 0x07, 0x79, 0x48,
  0x87, 0x70, 0x70, 0x07, 0x7a, 0x70, 0x03, 0x76, 0x78, 0x87, 0x70, 0x20,
  0x87, 0x19, 0xcc, 0x11, 0x0e, 0xec, 0x90, 0x0e, 0xe1, 0x30, 0x0f, 0x6e,
  0x30, 0x0f, 0xe3, 0xf0, 0x0e, 0xf0, 0x50, 0x0e, 0x33, 0x10, 0xc4, 0x1d,
  0xde, 0x21, 0x1c, 0xd8, 0x21, 0x1d, 0xc2, 0x61, 0x1e, 0x66, 0x30, 0x89,
  0x3b, 0xbc, 0x83, 0x3b, 0xd0, 0x43, 0x39, 0xb4, 0x03, 0x3c, 0xbc, 0x83,
  0x3c, 0x84, 0x03, 0x3b, 0xcc, 0xf0, 0x14, 0x76, 0x60, 0x07, 0x7b, 0x68,
  0x07, 0x37, 0x68, 0x87, 0x72, 0x68, 0x07, 0x37, 0x80, 0x87, 0x70, 0x90,
  0x87, 0x70, 0x60, 0x07, 0x76, 0x28, 0x07, 0x76, 0xf8, 0x05, 0x76, 0x78,
  0x87, 0x77, 0x80, 0x87, 0x5f, 0x08, 0x87, 0x71, 0x18, 0x87, 0x72, 0x98,
  0x87, 0x79, 0x98, 0x81, 0x2c, 0xee, 0xf0, 0x0e, 0xee, 0xe0, 0x0e, 0xf5,
  0xc0, 0x0e, 0xec, 0x30, 0x03, 0x62, 0xc8, 0xa1, 0x1c, 0xe4, 0xa1, 0x1c,
  0xcc, 0xa1, 0x1c, 0xe4, 0xa1, 0x1c, 0xdc, 0x61, 0x1c, 0xca, 0x21, 0x1c,
  0xc4, 0x81, 0x1d, 0xca, 0x61, 0x06, 0xd6, 0x90, 0x43, 0x39, 0xc8, 0x43,
  0x39, 0x98, 0x43, 0x39, 0xc8, 0x43, 0x39, 0xb8, 0xc3, 0x38, 0x94, 0x43,
  0x38, 0x88, 0x03, 0x3b, 0x94, 0xc3, 0x2f, 0xbc, 0x83, 0x3c, 0xfc, 0x82,
  0x3b, 0xd4, 0x03, 0x3b, 0xb0, 0xc3, 0x0c, 0xc4, 0x21, 0x07, 0x7c, 0x70,
  0x03, 0x7a, 0x28, 0x87, 0x76, 0x80, 0x87, 0x19, 0xd1, 0x43, 0x0e, 0xf8,
  0xe0, 0x06, 0xe4, 0x20, 0x0e, 0xe7, 0xe0, 0x06, 0xf6, 0x10, 0x0e, 0xf2,
  0xc0, 0x0e, 0xe1, 0x90, 0x0f, 0xef, 0x50, 0x0f, 0xf4, 0x30, 0x83, 0x81,
  0xc8, 0x01, 0x1f, 0xdc, 0x40, 0x1c, 0xe4, 0xa1, 0x1c, 0xc2, 0x61, 0x1d,
  0xdc, 0x40, 0x1c, 0xe4, 0x01, 0x00, 0x00, 0x00, 0x71, 0x20, 0x00, 0x00,
  0x4c, 0x00, 0x00, 0x00, 0x05, 0xf0, 0x04, 0x7e, 0xe7, 0x61, 0x78, 0x8c,
  0x2e, 0x03, 0x81, 0x33, 0x68, 0xb0, 0x19, 0x34, 0x08, 0x6a, 0xb8, 0x7c,
  0xe7, 0xf1, 0x81, 0xa6, 0x71, 0x26, 0x60, 0x22, 0x42, 0xa0, 0x19, 0x16,
  0xc2, 0x16, 0x9a, 0xe1, 0xf2, 0x9d, 0xc7, 0x0f, 0x80, 0x28, 0x42, 0x88,
  0xc8, 0x10, 0xa0, 0xe1, 0xf2, 0x9d, 0xc7, 0x0f, 0x90, 0x06, 0x88, 0x30,
  0x1f, 0xb9, 0x6d, 0x7b, 0xd8, 0x86, 0xcb, 0x77, 0x1e, 0x5f, 0x08, 0xa8,
  0xa2, 0x20, 0xa2, 0xd2, 0x01, 0x86, 0x92, 0x30, 0x00, 0x01, 0xf3, 0x8b,
  0xdb, 0x36, 0x87, 0x6d, 0xb8, 0x7c, 0xe7, 0xf1, 0x85, 0x80, 0x2a, 0x0a,
  0x22, 0x2a, 0x1d, 0x60, 0x28, 0x09, 0x03, 0x10, 0x30, 0x1f, 0xb9, 0x6d,
  0x8b, 0xe8, 0x86, 0xcb, 0x77, 0x1e, 0x5f, 0x88, 0x08, 0x60, 0x22, 0x42,
  0xa0, 0x19, 0x16, 0xe2, 0x8b, 0x1c, 0x66, 0x43, 0x9a, 0x01, 0x69, 0x0c,
  0x33, 0xd0, 0x86, 0xcb, 0x77, 0x1e, 0x5f, 0x88, 0x08, 0x60, 0x22, 0x42,
  0xa0, 0x19, 0x16, 0xe2, 0x8b, 0x1c, 0x26, 0x24, 0x80, 0xc7, 0x18, 0x9c,
  0xe1, 0xf2, 0x9d, 0xc7, 0x1f, 0x9c, 0xe9, 0xf6, 0x8b, 0xdb, 0xb6, 0x83,
  0x69, 0xb8, 0x7c, 0xe7, 0xf1, 0x0d, 0x62, 0xea, 0x10, 0x86, 0x68, 0x24,
  0xc4, 0x69, 0x24, 0x4b, 0xa8, 0x86, 0xcb, 0x77, 0x1e, 0x7f, 0x22, 0xae,
  0x89, 0x8a, 0x88, 0xd2, 0x01, 0x06, 0xbf, 0xb8, 0x6d, 0x53, 0xb0, 0x86,
  0xcb, 0x77, 0x1e, 0x7f, 0x22, 0xae, 0x89, 0x8a, 0x08, 0x76, 0x72, 0x22,
  0xc2, 0x2f, 0x6e, 0xdb, 0x0a, 0xa4, 0xe1, 0xf2, 0x9d, 0xc7, 0x9f, 0x8e,
  0x88, 0x00, 0x06, 0x71, 0xf0, 0x91, 0xdb, 0x36, 0x82, 0x6c, 0xb8, 0x7c,
  0xe7, 0xf1, 0xa7, 0x23, 0x22, 0x80, 0x41, 0x1c, 0xc4, 0x06, 0x8c, 0x1c,
  0xea, 0xf1, 0x91, 0xdb, 0xb6, 0x86, 0x67, 0xb8, 0x7c, 0xe7, 0xf1, 0xa9,
  0x06, 0x88, 0x30, 0xbf, 0xb8, 0x6d, 0x1b, 0x88, 0x96, 0xa5, 0x62, 0xfc,
  0x05, 0x29, 0x88, 0x09, 0x61, 0x08, 0x9f, 0x68, 0x06, 0x13, 0x98, 0x96,
  0xa5, 0x62, 0xfc, 0x05, 0x29, 0x88, 0x09, 0x61, 0x08, 0x5f, 0x9a, 0x80,
  0x68, 0xb2, 0x00, 0x82, 0x01, 0x90, 0x06, 0x00, 0x61, 0x20, 0x00, 0x00,
  0x2a, 0x01, 0x00, 0x00, 0x13, 0x04, 0x4c, 0x2c, 0x10, 0x00, 0x00, 0x00,
  0x1a, 0x00, 0x00, 0x00, 0xf4, 0x8c, 0x00, 0xd0, 0x52, 0x6e, 0x64, 0x14,
  0x18, 0x1d, 0x45, 0x50, 0x1e, 0xb4, 0xcc, 0x00, 0x14, 0x61, 0x40, 0x29,
  0x14, 0xec, 0x40, 0xd9, 0x15, 0x41, 0xd1, 0x0e, 0x14, 0x54, 0xf9, 0x06,
  0x94, 0x6e, 0x40, 0x19, 0x94, 0x44, 0x51, 0xd4, 0x42, 0x0d, 0x94, 0xec,
  0x40, 0x69, 0x14, 0x44, 0x59, 0x14, 0x21, 0x50, 0x49, 0x12, 0x94, 0x24,
  0x44, 0x41, 0x06, 0x94, 0x52, 0xd1, 0x15, 0x68, 0x40, 0x19, 0x06, 0x10,
  0x30, 0x46, 0xd0, 0x9a, 0x73, 0x4e, 0x7e, 0x63, 0x04, 0xad, 0x39, 0xe7,
  0xf4, 0x47, 0xe8, 0x1c, 0x02, 0x1d, 0xd4, 0xc1, 0x1c, 0x42, 0x1c, 0x60,
  0x73, 0x08, 0x66, 0x60, 0x07, 0xb4, 0xce, 0x41, 0x5c, 0xd7, 0xf5, 0x01,
  0x23, 0x06, 0x08, 0x00, 0x82, 0x60, 0xc0, 0x06, 0x71, 0x20, 0x05, 0x6b,
  0x60, 0x06, 0x23, 0x06, 0x07, 0x00, 0x82, 0x60, 0x90, 0x06, 0x73, 0xf0,
  0x05, 0xc4, 0x88, 0x81, 0x01, 0x80, 0x20, 0x18, 0x30, 0xa0, 0xb0, 0xb5,
  0xc1, 0x88, 0x81, 0x01, 0x80, 0x20, 0x18, 0x30, 0xa1, 0xc0, 0xc5, 0xc1,
  0x88, 0x81, 0x01, 0x80, 0x20, 0x18, 0x30, 0xa1, 0xc0, 0xbd, 0xc1, 0x88,
  0x81, 0x01, 0x80, 0x20, 0x18, 0x30, 0xa2, 0xd0, 0xcd, 0xc1, 0x4c, 0x04,
  0x1d, 0x2c, 0xd4, 0x28, 0x5c, 0x80, 0xec, 0x88, 0x81, 0x41, 0x80, 0x20,
  0x18, 0x24, 0xa8, 0xc0, 0x06, 0xc1, 0xa6, 0x07, 0x61, 0x0e, 0xe6, 0x60,
  0xc4, 0xe0, 0x00, 0x40, 0x10, 0x0c, 0xcc, 0x80, 0x0f, 0xcc, 0x00, 0xa1,
  0x83, 0xd1, 0x84, 0x00, 0x18, 0x36, 0x20, 0x86, 0x60, 0x00, 0x36, 0x3d,
  0x14, 0x76, 0x90, 0x07, 0xa3, 0x09, 0x43, 0x30, 0x6c, 0x40, 0x08, 0xc1,
  0x00, 0x6c, 0x7a, 0x38, 0xf0, 0x20, 0x0d, 0x46, 0x13, 0x0a, 0x61, 0xd8,
  0x80, 0x10, 0x82, 0x01, 0xd8, 0xf4, 0x90, 0xe8, 0x81, 0x19, 0x8c, 0x26,
  0x1c, 0xc3, 0xb0, 0x01, 0x21, 0x04, 0x03, 0xb0, 0xe9, 0x61, 0xe1, 0x03,
  0x3d, 0x18, 0x31, 0x38, 0x00, 0x10, 0x04, 0x03, 0x33, 0x28, 0x85, 0x37,
  0x88, 0x40, 0x61, 0x34, 0x21, 0x00, 0x86, 0x0d, 0x88, 0x21, 0x18, 0x80,
  0x4d, 0x0f, 0xce, 0x1f, 0xcc, 0xc1, 0x68, 0xc2, 0x10, 0x0c, 0x1b, 0x10,
  0x42, 0x30, 0x00, 0x9b, 0x1e, 0xa0, 0x50, 0x10, 0x85, 0xd1, 0x84, 0x42,
  0x18, 0x36, 0x20, 0x84, 0x60, 0x00, 0x36, 0x3d, 0x48, 0xa3, 0x50, 0x0a,
  0xa3, 0x09, 0xc7, 0x30, 0x6c, 0x40, 0x08, 0xc1, 0x00, 0x6c, 0x7a, 0xa0,
  0x4a, 0x41, 0x0d, 0x46, 0x0c, 0x0e, 0x00, 0x04, 0xc1, 0xc0, 0x0c, 0x5c,
  0x01, 0x0f, 0xb4, 0x3b, 0x18, 0x4d, 0x08, 0x80, 0x61, 0x03, 0x62, 0x08,
  0x06, 0x60, 0xd3, 0xc3, 0x85, 0x0a, 0x73, 0x30, 0x9a, 0x30, 0x04, 0xc3,
  0x06, 0x84, 0x10, 0x0c, 0xc0, 0xa6, 0x87, 0x4c, 0x15, 0xe8, 0x60, 0x34,
  0xa1, 0x10, 0x86, 0x0d, 0x08, 0x21, 0x18, 0x80, 0x4d, 0x0f, 0x1b, 0x2b,
  0xc0, 0xc1, 0x68, 0xc2, 0x31, 0x0c, 0x1b, 0x10, 0x42, 0x30, 0x00, 0x23,
  0x06, 0x07, 0x00, 0x82, 0x60, 0x30, 0x06, 0xb7, 0x00, 0x0a, 0x62, 0xa0,
  0x07, 0xa3, 0x09, 0x41, 0x30, 0x62, 0x80, 0x00, 0x20, 0x08, 0x06, 0x50,
  0x38, 0x80, 0x42, 0xb0, 0x0a, 0xab, 0x30, 0x62, 0x70, 0x00, 0x20, 0x08,
  0x06, 0x69, 0x80, 0x0b, 0xa4, 0x10, 0xa8, 0xc1, 0x68, 0x02, 0x01, 0x8c,
  0x18, 0x20, 0x00, 0x08, 0x82, 0x01, 0x44, 0x0e, 0xa3, 0x10, 0xb8, 0x82,
  0x2b, 0x8c, 0x18, 0x1c, 0x00, 0x08, 0x82, 0x41, 0x1a, 0xec, 0xc2, 0x29,
  0x04, 0x6d, 0x30, 0x9a, 0x70, 0x08, 0x23, 0x06, 0x08, 0x00, 0x82, 0x60,
  0x00, 0x9d, 0x83, 0x29, 0x04, 0xb1, 0x10, 0x0b, 0x23, 0x06, 0x07, 0x00,
  0x82, 0x60, 0x90, 0x06, 0xbe, 0xa0, 0x0a, 0x81, 0x1b, 0x8c, 0x18, 0x1c,
  0x00, 0x08, 0x82, 0xc1, 0x84, 0x0e, 0x78, 0x70, 0xe0, 0xc2, 0x68, 0x42,
  0x00, 0x8c, 0x26, 0x08, 0xc1, 0x70, 0x83, 0x1b, 0xbc, 0x02, 0x1a, 0xcc,
  0x32, 0x04, 0x42, 0x60, 0x6c, 0x50, 0x0a, 0x20, 0x18, 0x31, 0x38, 0x00,
  0x10, 0x04, 0x83, 0x8a, 0x1d, 0xf8, 0x20, 0xe8, 0x85, 0x11, 0x83, 0x06,
  0x00, 0x41, 0x30, 0xc0, 0xd8, 0x61, 0x16, 0x1a, 0x5a, 0x78, 0x83, 0x80,
  0x16, 0x68, 0x81, 0x16, 0x68, 0x61, 0x34, 0x21, 0x00, 0x56, 0x30, 0xdc,
  0x03, 0x38, 0xc8, 0xc1, 0xb0, 0x01, 0x11, 0x08, 0x03, 0x30, 0x4b, 0x20,
  0x0c, 0x37, 0xcc, 0xc1, 0x1f, 0x98, 0x41, 0x21, 0xaa, 0x00, 0xb3, 0x0c,
  0x03, 0x21, 0xd8, 0x1c, 0xdc, 0x02, 0x08, 0x46, 0x0c, 0x0e, 0x00, 0x04,
  0xc1, 0xa0, 0x9a, 0x87, 0x59, 0x08, 0x84, 0x11, 0x83, 0x06, 0x00, 0x41,
  0x30, 0xc0, 0xe6, 0x41, 0x17, 0xa8, 0x5d, 0xb0, 0x83, 0x60, 0x17, 0x76,
  0x61, 0x17, 0x76, 0x61, 0x34, 0x21, 0x00, 0x2c, 0x0f, 0x62, 0x01, 0x04,
  0x2b, 0x18, 0xfe, 0x01, 0x1d, 0x82, 0x61, 0x03, 0x22, 0x18, 0x06, 0x60,
  0x96, 0x80, 0x28, 0x28, 0x16, 0x60, 0xc4, 0xe0, 0x00, 0x40, 0x10, 0x0c,
  0xaa, 0x7c, 0xc8, 0x85, 0x3d, 0x08, 0x46, 0x0c, 0x0e, 0x00, 0x04, 0xc1,
  0xa0, 0xd2, 0x07, 0x5d, 0xd8, 0x83, 0x64, 0xc4, 0xa0, 0x01, 0x40, 0x10,
  0x0c, 0x30, 0x7d, 0x08, 0x87, 0x4d, 0x1c, 0x84, 0x40, 0x1c, 0xc4, 0x41,
  0x1c, 0xc4, 0x61, 0x34, 0x21, 0x00, 0x0c, 0x14, 0xc4, 0x01, 0x04, 0x2b,
  0x18, 0x4c, 0xe2, 0x1d, 0x82, 0x61, 0x03, 0x22, 0x18, 0x06, 0x60, 0xc4,
  0xc0, 0x00, 0x40, 0x10, 0x0c, 0x38, 0x7e, 0x68, 0x85, 0x5d, 0x18, 0x31,
  0x68, 0x00, 0x10, 0x04, 0x03, 0xcc, 0x1f, 0xca, 0xe1, 0x33, 0x87, 0x50,
  0x00, 0x05, 0x73, 0x30, 0x07, 0x73, 0x30, 0x87, 0xd1, 0x84, 0x00, 0xb0,
  0x40, 0x0e, 0xe4, 0x33, 0x62, 0xd0, 0x00, 0x20, 0x08, 0x06, 0x58, 0x48,
  0xa0, 0x03, 0x37, 0x0f, 0xa4, 0x30, 0x0a, 0xe9, 0x90, 0x0e, 0xe9, 0x90,
  0x0e, 0xa3, 0x09, 0x01, 0x30, 0x9a, 0x20, 0x04, 0xa3, 0x09, 0x83, 0x30,
  0x9a, 0x40, 0x0c, 0xb3, 0x04, 0xc6, 0x08, 0xc5, 0xf9, 0xff, 0xff, 0xff,
  0x0f, 0x80, 0xf9, 0xff, 0xff, 0xff, 0x0f, 0xc4, 0x37, 0x62, 0xe0, 0x00,
  0x20, 0x08, 0x06, 0x9a, 0x49, 0xd4, 0x42, 0x19, 0xa8, 0x42, 0x2a, 0xbc,
  0x43, 0x10, 0x04, 0x01, 0x3c, 0x8c, 0x18, 0x18, 0x04, 0x08, 0x82, 0x41,
  0xd2, 0x12, 0xf2, 0x70, 0x0a, 0x38, 0x50, 0x01, 0x38, 0x44, 0x1e, 0x2c,
  0x03, 0x15, 0x00, 0x3d, 0x10, 0x79, 0xb0, 0x0c, 0x54, 0x2c, 0xa8, 0x41,
  0xe4, 0xc1, 0x62, 0x4e, 0x00, 0x82, 0xe1, 0x06, 0xa1, 0x1f, 0xc0, 0x60,
  0x96, 0x61, 0x39, 0x82, 0x1a, 0x5c, 0x01, 0x46, 0x0c, 0x1a, 0x00, 0x04,
  0xc1, 0x00, 0x6b, 0x09, 0x7a, 0x40, 0x83, 0x7f, 0x80, 0x85, 0xa0, 0x1e,
  0xea, 0xa1, 0x1e, 0xea, 0x61, 0x34, 0x21, 0x00, 0x46, 0x13, 0x84, 0x60,
  0x34, 0x61, 0x10, 0x46, 0x0c, 0x16, 0x00, 0x04, 0xc1, 0xc0, 0x73, 0x89,
  0x7e, 0x18, 0x84, 0xe0, 0x71, 0x9a, 0xe1, 0x88, 0xc0, 0x17, 0x98, 0x6f,
  0x96, 0x41, 0x41, 0x82, 0xd1, 0x04, 0x63, 0xb0, 0xe0, 0x89, 0xcf, 0x88,
  0x81, 0x01, 0x80, 0x20, 0x18, 0x80, 0x41, 0x4c, 0xa0, 0x44, 0x30, 0x1c,
  0x11, 0x8c, 0x83, 0xf2, 0xcd, 0x32, 0x28, 0x49, 0x60, 0x4e, 0x3f, 0x80,
  0x60, 0xd3, 0x43, 0x2e, 0xa8, 0x44, 0x40, 0x01, 0x30, 0x56, 0x30, 0x8c,
  0x05, 0x4b, 0x40, 0x14, 0x00, 0xc3, 0x82, 0x41, 0x3e, 0x16, 0x58, 0xf0,
  0xb1, 0xc2, 0x82, 0xcf, 0x2c, 0x81, 0x32, 0xd0, 0x01, 0x10, 0x09, 0x1c,
  0x20, 0x70, 0x70, 0x0c, 0x74, 0x00, 0x44, 0x02, 0x07, 0x08, 0x1c, 0x1c,
  0x86, 0xd9, 0x04, 0x08, 0x86, 0x1b, 0x82, 0x9a, 0x40, 0x83, 0x59, 0x86,
  0xa5, 0x08, 0x06, 0x2a, 0x00, 0x44, 0xc1, 0x03, 0x63, 0xa0, 0x02, 0x40,
  0x14, 0x3c, 0x30, 0x06, 0x2a, 0x16, 0x44, 0xa1, 0x13, 0x63, 0x96, 0xc0,
  0x08, 0x88, 0x01, 0x00, 0x14, 0x00, 0x00, 0x00, 0x5b, 0x06, 0x26, 0xf0,
  0xb6, 0x0c, 0x4f, 0xe0, 0x6d, 0x19, 0xa4, 0xc0, 0xdb, 0x32, 0x54, 0x81,
  0xb7, 0x65, 0xc8, 0x02, 0x6f, 0xcb, 0xc0, 0x05, 0xde, 0x96, 0xe1, 0x0b,
  0xbc, 0x2d, 0x83, 0x18, 0x04, 0xde, 0x96, 0xc1, 0x0c, 0x02, 0x6f, 0xcb,
  0x90, 0x06, 0x81, 0xb7, 0x65, 0x60, 0x83, 0xc0, 0xdb, 0x32, 0xbc, 0x41,
  0xe0, 0x6d, 0x19, 0x48, 0x21, 0xf0, 0xb6, 0x0c, 0xaf, 0x10, 0x78, 0x5b,
  0x06, 0x5c, 0x08, 0xbc, 0x2d, 0x03, 0x3f, 0x04, 0xde, 0x96, 0xc1, 0x1f,
  0x02, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};
